openapi: 3.0.3
info:
  title: ''
  description: |-
    API Details
    - Component: 
    - Reference: taalhuizen-service
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/taalhuizen-service) / [zip](https://github.com/ConductionNL/taalhuizen-service/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/taalhuizen-service.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 

    &
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /addresses:
    get:
      operationId: getAddressCollection
      tags:
        - Address
      responses:
        200:
          description: 'Address collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves the collection of Address resources.'
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/addresses/{id}':
    get:
      operationId: getAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /availabilities:
    get:
      operationId: getAvailabilityCollection
      tags:
        - Availability
      responses:
        200:
          description: 'Availability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
      summary: 'Retrieves the collection of Availability resources.'
      description: 'Retrieves the collection of Availability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}':
    get:
      operationId: getAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}/friday':
    get:
      operationId: api_availabilities_friday_get_subresourceAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}/monday':
    get:
      operationId: api_availabilities_monday_get_subresourceAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}/saturday':
    get:
      operationId: api_availabilities_saturday_get_subresourceAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}/sunday':
    get:
      operationId: api_availabilities_sunday_get_subresourceAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}/thursday':
    get:
      operationId: api_availabilities_thursday_get_subresourceAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}/tuesday':
    get:
      operationId: api_availabilities_tuesday_get_subresourceAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availabilities/{id}/wednesday':
    get:
      operationId: api_availabilities_wednesday_get_subresourceAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /availability_days:
    get:
      operationId: getAvailabilityDayCollection
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves the collection of AvailabilityDay resources.'
      description: 'Retrieves the collection of AvailabilityDay resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/availability_days/{id}':
    get:
      operationId: getAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AvailabilityDay resource.'
      description: 'Retrieves a AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /documents:
    get:
      operationId: getDocumentCollection
      tags:
        - Document
      responses:
        200:
          description: 'Document collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
      summary: 'Retrieves the collection of Document resources.'
      description: 'Retrieves the collection of Document resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postDocumentCollection
      tags:
        - Document
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document-read'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Document resource.'
      description: 'Creates a Document resource.'
      parameters: []
      requestBody:
        description: 'The new Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document-write'
        required: true
      deprecated: false
    parameters: []
  '/documents/{id}':
    get:
      operationId: getDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Document resource.'
      description: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: deleteDocumentItem
      tags:
        - Document
      responses:
        204:
          description: 'Document resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Document resource.'
      description: 'Removes the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/documents/{uuid}/download':
    post:
      operationId: post_downloadDocumentCollection
      tags:
        - Document
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document-read'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Download a document'
      description: 'Download a document'
      parameters: []
      requestBody:
        description: 'The new Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document-write'
        required: true
      deprecated: false
    parameters: []
  /education:
    get:
      operationId: getEducationCollection
      tags:
        - Education
      responses:
        200:
          description: 'Education collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves the collection of Education resources.'
      description: 'Retrieves the collection of Education resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/education/{id}':
    get:
      operationId: getEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Education resource.'
      description: 'Retrieves a Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /emails:
    get:
      operationId: getEmailCollection
      tags:
        - Email
      responses:
        200:
          description: 'Email collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves the collection of Email resources.'
      description: 'Retrieves the collection of Email resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/emails/{id}':
    get:
      operationId: getEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Email resource.'
      description: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /employees:
    get:
      operationId: getEmployeeCollection
      tags:
        - Employee
      responses:
        200:
          description: 'Employee collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
      summary: 'Retrieves the collection of Employee resources.'
      description: 'Retrieves the collection of Employee resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmployeeCollection
      tags:
        - Employee
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Employee resource.'
      description: 'Creates a Employee resource.'
      parameters: []
      requestBody:
        description: 'The new Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee-write'
        required: true
      deprecated: false
    parameters: []
  '/employees/{id}':
    get:
      operationId: getEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Employee resource.'
      description: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmployeeItem
      tags:
        - Employee
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Employee resource.'
      description: 'Removes the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability':
    get:
      operationId: api_employees_availability_get_subresourceEmployeeSubresource
      tags:
        - Availability
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability/friday':
    get:
      operationId: api_employees_availability_friday_get_subresourceEmployeeSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability/monday':
    get:
      operationId: api_employees_availability_monday_get_subresourceEmployeeSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability/saturday':
    get:
      operationId: api_employees_availability_saturday_get_subresourceEmployeeSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability/sunday':
    get:
      operationId: api_employees_availability_sunday_get_subresourceEmployeeSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability/thursday':
    get:
      operationId: api_employees_availability_thursday_get_subresourceEmployeeSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability/tuesday':
    get:
      operationId: api_employees_availability_tuesday_get_subresourceEmployeeSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/availability/wednesday':
    get:
      operationId: api_employees_availability_wednesday_get_subresourceEmployeeSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/education':
    get:
      operationId: api_employees_education_get_subresourceEmployeeSubresource
      tags:
        - Education
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/following_course':
    get:
      operationId: api_employees_following_course_get_subresourceEmployeeSubresource
      tags:
        - Education
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person':
    get:
      operationId: api_employees_person_get_subresourceEmployeeSubresource
      tags:
        - Person
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person/addresses':
    get:
      operationId: api_employees_person_addresses_get_subresourceEmployeeSubresource
      tags:
        - Address
        - Person
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person/emails':
    get:
      operationId: api_employees_person_emails_get_subresourceEmployeeSubresource
      tags:
        - Email
        - Person
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person/organization':
    get:
      operationId: api_employees_person_organization_get_subresourceEmployeeSubresource
      tags:
        - Organization
        - Person
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person/organization/addresses':
    get:
      operationId: api_employees_person_organization_addresses_get_subresourceEmployeeSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person/organization/emails':
    get:
      operationId: api_employees_person_organization_emails_get_subresourceEmployeeSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person/organization/telephones':
    get:
      operationId: api_employees_person_organization_telephones_get_subresourceEmployeeSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/employees/{id}/person/telephones':
    get:
      operationId: api_employees_person_telephones_get_subresourceEmployeeSubresource
      tags:
        - Telephone
        - Person
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Employee identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /groups:
    get:
      operationId: getGroupCollection
      tags:
        - Group
      responses:
        200:
          description: 'Group collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      summary: 'Retrieves the collection of Group resources.'
      description: 'Retrieves the collection of Group resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postGroupCollection
      tags:
        - Group
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Group resource.'
      description: 'Creates a Group resource.'
      parameters: []
      requestBody:
        description: 'The new Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group-write'
        required: true
      deprecated: false
    parameters: []
  '/groups/{id}':
    get:
      operationId: getGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Group resource.'
      description: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteGroupItem
      tags:
        - Group
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Group resource.'
      description: 'Removes the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability':
    get:
      operationId: api_groups_availability_get_subresourceGroupSubresource
      tags:
        - Availability
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability/friday':
    get:
      operationId: api_groups_availability_friday_get_subresourceGroupSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability/monday':
    get:
      operationId: api_groups_availability_monday_get_subresourceGroupSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability/saturday':
    get:
      operationId: api_groups_availability_saturday_get_subresourceGroupSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability/sunday':
    get:
      operationId: api_groups_availability_sunday_get_subresourceGroupSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability/thursday':
    get:
      operationId: api_groups_availability_thursday_get_subresourceGroupSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability/tuesday':
    get:
      operationId: api_groups_availability_tuesday_get_subresourceGroupSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/availability/wednesday':
    get:
      operationId: api_groups_availability_wednesday_get_subresourceGroupSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/learning_need_out_come':
    get:
      operationId: api_groups_learning_need_out_come_get_subresourceGroupSubresource
      tags:
        - LearningNeedOutCome
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Group identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /learning_need_out_comes:
    get:
      operationId: getLearningNeedOutComeCollection
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
      summary: 'Retrieves the collection of LearningNeedOutCome resources.'
      description: 'Retrieves the collection of LearningNeedOutCome resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/learning_need_out_comes/{id}':
    get:
      operationId: getLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LearningNeedOutCome resource.'
      description: 'Retrieves a LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /learning_needs:
    get:
      operationId: getLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        201:
          description: 'LearningNeed resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LearningNeed resource.'
      description: 'Creates a LearningNeed resource.'
      parameters: []
      requestBody:
        description: 'The new LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
        required: true
      deprecated: false
    parameters: []
  '/learning_needs/{id}':
    get:
      operationId: getLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LearningNeed resource.'
      description: 'Retrieves a LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LearningNeed resource.'
      description: 'Replaces the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteLearningNeedItem
      tags:
        - LearningNeed
      responses:
        204:
          description: 'LearningNeed resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LearningNeed resource.'
      description: 'Removes the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/learning_needs/{id}/desired_learning_need_out_come':
    get:
      operationId: api_learning_needs_desired_learning_need_out_come_get_subresourceLearningNeedSubresource
      tags:
        - LearningNeedOutCome
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
      summary: 'Retrieves a LearningNeed resource.'
      description: 'Retrieves a LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'LearningNeed identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/organization/{uuid}/user_roles':
    get:
      operationId: get_user_rolesOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      summary: 'Get the user roles of this organization'
      description: 'Get the user roles of this organization'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /organizations:
    get:
      operationId: getOrganizationCollection
      tags:
        - Organization
      responses:
        200:
          description: 'Organization collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves the collection of Organization resources.'
      description: 'Retrieves the collection of Organization resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postOrganizationCollection
      tags:
        - Organization
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Organization resource.'
      description: 'Creates a Organization resource.'
      parameters: []
      requestBody:
        description: 'The new Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Organization-write'
        required: true
      deprecated: false
    parameters: []
  '/organizations/{id}':
    get:
      operationId: getOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Organization resource.'
      description: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Organization-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteOrganizationItem
      tags:
        - Organization
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Organization resource.'
      description: 'Removes the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/organizations/{id}/addresses':
    get:
      operationId: api_organizations_addresses_get_subresourceOrganizationSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/organizations/{id}/emails':
    get:
      operationId: api_organizations_emails_get_subresourceOrganizationSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/organizations/{id}/telephones':
    get:
      operationId: api_organizations_telephones_get_subresourceOrganizationSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /participations:
    get:
      operationId: getParticipationCollection
      tags:
        - Participation
      responses:
        200:
          description: 'Participation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
      summary: 'Retrieves the collection of Participation resources.'
      description: 'Retrieves the collection of Participation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{id}':
    get:
      operationId: getParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Participation resource.'
      description: 'Retrieves a Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Participation resource.'
      description: 'Replaces the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteParticipationItem
      tags:
        - Participation
      responses:
        204:
          description: 'Participation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Participation resource.'
      description: 'Removes the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/participations/{id}/learning_need_out_come':
    get:
      operationId: api_participations_learning_need_out_come_get_subresourceParticipationSubresource
      tags:
        - LearningNeedOutCome
        - Participation
      responses:
        200:
          description: 'Participation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
      summary: 'Retrieves a Participation resource.'
      description: 'Retrieves a Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Participation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/participations/{uuid}/group':
    post:
      operationId: update_groupParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Update the Participation presence properties for the group connected to this participation.'
      description: 'Update the Participation presence properties for the group connected to this participation.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{uuid}/group/{groupId}':
    post:
      operationId: add_or_remove_groupParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Add a group to this Participation, or remove the one connected to it.'
      description: 'Add a group to this Participation, or remove the one connected to it.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{uuid}/mentor':
    post:
      operationId: update_mentorParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Update the Participation presence properties for the mentor connected to this participation.'
      description: 'Update the Participation presence properties for the mentor connected to this participation.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{uuid}/mentor/{mentorId}':
    post:
      operationId: add_or_remove_mentorParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Add a mentor to this Participation, or remove the one connected to it.'
      description: 'Add a mentor to this Participation, or remove the one connected to it.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  /people:
    get:
      operationId: getPersonCollection
      tags:
        - Person
      responses:
        200:
          description: 'Person collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves the collection of Person resources.'
      description: 'Retrieves the collection of Person resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}':
    get:
      operationId: getPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}/addresses':
    get:
      operationId: api_people_addresses_get_subresourcePersonSubresource
      tags:
        - Address
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}/emails':
    get:
      operationId: api_people_emails_get_subresourcePersonSubresource
      tags:
        - Email
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}/organization':
    get:
      operationId: api_people_organization_get_subresourcePersonSubresource
      tags:
        - Organization
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}/organization/addresses':
    get:
      operationId: api_people_organization_addresses_get_subresourcePersonSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}/organization/emails':
    get:
      operationId: api_people_organization_emails_get_subresourcePersonSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}/organization/telephones':
    get:
      operationId: api_people_organization_telephones_get_subresourcePersonSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/people/{id}/telephones':
    get:
      operationId: api_people_telephones_get_subresourcePersonSubresource
      tags:
        - Telephone
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /registrations:
    get:
      operationId: getRegistrationCollection
      tags:
        - Registration
      responses:
        200:
          description: 'Registration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
      summary: 'Retrieves the collection of Registration resources.'
      description: 'Retrieves the collection of Registration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postRegistrationCollection
      tags:
        - Registration
      responses:
        201:
          description: 'Registration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration-read'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Registration resource.'
      description: 'Creates a Registration resource.'
      parameters: []
      requestBody:
        description: 'The new Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration-write'
        required: true
      deprecated: false
    parameters: []
  '/registrations/{id}':
    get:
      operationId: getRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration-read'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Registration resource.'
      description: 'Replaces the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteRegistrationItem
      tags:
        - Registration
      responses:
        204:
          description: 'Registration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Registration resource.'
      description: 'Removes the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar':
    get:
      operationId: api_registrations_registrar_get_subresourceRegistrationSubresource
      tags:
        - Person
        - Registration
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar/addresses':
    get:
      operationId: api_registrations_registrar_addresses_get_subresourceRegistrationSubresource
      tags:
        - Address
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar/emails':
    get:
      operationId: api_registrations_registrar_emails_get_subresourceRegistrationSubresource
      tags:
        - Email
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar/organization':
    get:
      operationId: api_registrations_registrar_organization_get_subresourceRegistrationSubresource
      tags:
        - Organization
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar/organization/addresses':
    get:
      operationId: api_registrations_registrar_organization_addresses_get_subresourceRegistrationSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar/organization/emails':
    get:
      operationId: api_registrations_registrar_organization_emails_get_subresourceRegistrationSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar/organization/telephones':
    get:
      operationId: api_registrations_registrar_organization_telephones_get_subresourceRegistrationSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/registrar/telephones':
    get:
      operationId: api_registrations_registrar_telephones_get_subresourceRegistrationSubresource
      tags:
        - Telephone
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student':
    get:
      operationId: api_registrations_student_get_subresourceRegistrationSubresource
      tags:
        - Person
        - Registration
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student/addresses':
    get:
      operationId: api_registrations_student_addresses_get_subresourceRegistrationSubresource
      tags:
        - Address
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: student
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student/emails':
    get:
      operationId: api_registrations_student_emails_get_subresourceRegistrationSubresource
      tags:
        - Email
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: student
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student/organization':
    get:
      operationId: api_registrations_student_organization_get_subresourceRegistrationSubresource
      tags:
        - Organization
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: student
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student/organization/addresses':
    get:
      operationId: api_registrations_student_organization_addresses_get_subresourceRegistrationSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: student
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student/organization/emails':
    get:
      operationId: api_registrations_student_organization_emails_get_subresourceRegistrationSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: student
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student/organization/telephones':
    get:
      operationId: api_registrations_student_organization_telephones_get_subresourceRegistrationSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: student
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/registrations/{id}/student/telephones':
    get:
      operationId: api_registrations_student_telephones_get_subresourceRegistrationSubresource
      tags:
        - Telephone
        - Person
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Registration identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: student
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /reports:
    get:
      operationId: getReportCollection
      tags:
        - Report
      responses:
        200:
          description: 'Report collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
      summary: 'Retrieves the collection of Report resources.'
      description: 'Retrieves the collection of Report resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Report resource.'
      description: 'Creates a Report resource.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  /reports/desired_learning_outcomes:
    post:
      operationId: desired_learning_outcomes_reportReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a learning outcomes report.'
      description: 'Creates a learning outcomes report.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  /reports/participants:
    post:
      operationId: participants_reportReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a participants report of a provider.'
      description: 'Creates a participants report of a provider.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  /reports/volunteers:
    post:
      operationId: volunteers_reportReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a volunteers report of a provider.'
      description: 'Creates a volunteers report of a provider.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  '/reports/{id}':
    get:
      operationId: getReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Report resource.'
      description: 'Retrieves a Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Report resource.'
      description: 'Replaces the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteReportItem
      tags:
        - Report
      responses:
        204:
          description: 'Report resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Report resource.'
      description: 'Removes the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_availabilities:
    get:
      operationId: getStudentAvailabilityCollection
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
      summary: 'Retrieves the collection of StudentAvailability resources.'
      description: 'Retrieves the collection of StudentAvailability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}':
    get:
      operationId: getStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability':
    get:
      operationId: api_student_availabilities_availability_get_subresourceStudentAvailabilitySubresource
      tags:
        - Availability
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability/friday':
    get:
      operationId: api_student_availabilities_availability_friday_get_subresourceStudentAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability/monday':
    get:
      operationId: api_student_availabilities_availability_monday_get_subresourceStudentAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability/saturday':
    get:
      operationId: api_student_availabilities_availability_saturday_get_subresourceStudentAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability/sunday':
    get:
      operationId: api_student_availabilities_availability_sunday_get_subresourceStudentAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability/thursday':
    get:
      operationId: api_student_availabilities_availability_thursday_get_subresourceStudentAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability/tuesday':
    get:
      operationId: api_student_availabilities_availability_tuesday_get_subresourceStudentAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_availabilities/{id}/availability/wednesday':
    get:
      operationId: api_student_availabilities_availability_wednesday_get_subresourceStudentAvailabilitySubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_backgrounds:
    get:
      operationId: getStudentBackgroundCollection
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
      summary: 'Retrieves the collection of StudentBackground resources.'
      description: 'Retrieves the collection of StudentBackground resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_backgrounds/{id}':
    get:
      operationId: getStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentBackground resource.'
      description: 'Retrieves a StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_civic_integrations:
    get:
      operationId: getStudentCivicIntegrationCollection
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
      summary: 'Retrieves the collection of StudentCivicIntegration resources.'
      description: 'Retrieves the collection of StudentCivicIntegration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_civic_integrations/{id}':
    get:
      operationId: getStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCivicIntegration resource.'
      description: 'Retrieves a StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_courses:
    get:
      operationId: getStudentCourseCollection
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
      summary: 'Retrieves the collection of StudentCourse resources.'
      description: 'Retrieves the collection of StudentCourse resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_courses/{id}':
    get:
      operationId: getStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCourse resource.'
      description: 'Retrieves a StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_courses/{id}/course':
    get:
      operationId: api_student_courses_course_get_subresourceStudentCourseSubresource
      tags:
        - Education
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves a StudentCourse resource.'
      description: 'Retrieves a StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentCourse identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_dossier_events:
    get:
      operationId: getStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
      summary: 'Retrieves the collection of StudentDossierEvent resources.'
      description: 'Retrieves the collection of StudentDossierEvent resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        201:
          description: 'StudentDossierEvent resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentDossierEvent resource.'
      description: 'Creates a StudentDossierEvent resource.'
      parameters: []
      requestBody:
        description: 'The new StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
        required: true
      deprecated: false
    parameters: []
  '/student_dossier_events/{id}':
    get:
      operationId: getStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDossierEvent resource.'
      description: 'Retrieves a StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentDossierEvent resource.'
      description: 'Replaces the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        204:
          description: 'StudentDossierEvent resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentDossierEvent resource.'
      description: 'Removes the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_dutch_n_ts:
    get:
      operationId: getStudentDutchNTCollection
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
      summary: 'Retrieves the collection of StudentDutchNT resources.'
      description: 'Retrieves the collection of StudentDutchNT resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_dutch_n_ts/{id}':
    get:
      operationId: getStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDutchNT resource.'
      description: 'Retrieves a StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_educations:
    get:
      operationId: getStudentEducationCollection
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
      summary: 'Retrieves the collection of StudentEducation resources.'
      description: 'Retrieves the collection of StudentEducation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_educations/{id}':
    get:
      operationId: getStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentEducation resource.'
      description: 'Retrieves a StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_educations/{id}/education':
    get:
      operationId: api_student_educations_education_get_subresourceStudentEducationSubresource
      tags:
        - Education
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves a StudentEducation resource.'
      description: 'Retrieves a StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'StudentEducation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_generals:
    get:
      operationId: getStudentGeneralCollection
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
      summary: 'Retrieves the collection of StudentGeneral resources.'
      description: 'Retrieves the collection of StudentGeneral resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_generals/{id}':
    get:
      operationId: getStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentGeneral resource.'
      description: 'Retrieves a StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_jobs:
    get:
      operationId: getStudentJobCollection
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
      summary: 'Retrieves the collection of StudentJob resources.'
      description: 'Retrieves the collection of StudentJob resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_jobs/{id}':
    get:
      operationId: getStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentJob resource.'
      description: 'Retrieves a StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_motivations:
    get:
      operationId: getStudentMotivationCollection
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
      summary: 'Retrieves the collection of StudentMotivation resources.'
      description: 'Retrieves the collection of StudentMotivation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_motivations/{id}':
    get:
      operationId: getStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentMotivation resource.'
      description: 'Retrieves a StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_permissions:
    get:
      operationId: getStudentPermissionCollection
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
      summary: 'Retrieves the collection of StudentPermission resources.'
      description: 'Retrieves the collection of StudentPermission resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_permissions/{id}':
    get:
      operationId: getStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentPermission resource.'
      description: 'Retrieves a StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_referrers:
    get:
      operationId: getStudentReferrerCollection
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
      summary: 'Retrieves the collection of StudentReferrer resources.'
      description: 'Retrieves the collection of StudentReferrer resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/student_referrers/{id}':
    get:
      operationId: getStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentReferrer resource.'
      description: 'Retrieves a StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /students:
    get:
      operationId: getStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
      summary: 'Retrieves the collection of Student resources.'
      description: 'Retrieves the collection of Student resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCollection
      tags:
        - Student
      responses:
        201:
          description: 'Student resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student-read'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Student resource.'
      description: 'Creates a Student resource.'
      parameters: []
      requestBody:
        description: 'The new Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student-write'
        required: true
      deprecated: false
    parameters: []
  '/students/group/{uuid}':
    get:
      operationId: get_group_studentsStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
      summary: 'Get the students of a group'
      description: 'Get the students of a group'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/mentor/{uuid}':
    get:
      operationId: get_mentor_studentsStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
      summary: 'Get the students of a mentor'
      description: 'Get the students of a mentor'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}':
    get:
      operationId: getStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student-read'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Student resource.'
      description: 'Replaces the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentItem
      tags:
        - Student
      responses:
        204:
          description: 'Student resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Student resource.'
      description: 'Removes the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability':
    get:
      operationId: api_students_availability_details_get_subresourceStudentSubresource
      tags:
        - StudentAvailability
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability':
    get:
      operationId: api_students_availability_details_availability_get_subresourceStudentSubresource
      tags:
        - Availability
        - StudentAvailability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability/friday':
    get:
      operationId: api_students_availability_details_availability_friday_get_subresourceStudentSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability/monday':
    get:
      operationId: api_students_availability_details_availability_monday_get_subresourceStudentSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability/saturday':
    get:
      operationId: api_students_availability_details_availability_saturday_get_subresourceStudentSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability/sunday':
    get:
      operationId: api_students_availability_details_availability_sunday_get_subresourceStudentSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability/thursday':
    get:
      operationId: api_students_availability_details_availability_thursday_get_subresourceStudentSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability/tuesday':
    get:
      operationId: api_students_availability_details_availability_tuesday_get_subresourceStudentSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/availability/availability/wednesday':
    get:
      operationId: api_students_availability_details_availability_wednesday_get_subresourceStudentSubresource
      tags:
        - AvailabilityDay
        - Availability
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availabilityDetails
          in: path
          description: 'StudentAvailability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: availability
          in: path
          description: 'Availability identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/background_details':
    get:
      operationId: api_students_background_details_get_subresourceStudentSubresource
      tags:
        - StudentBackground
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/civic_integration_details':
    get:
      operationId: api_students_civic_integration_details_get_subresourceStudentSubresource
      tags:
        - StudentCivicIntegration
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/course_details':
    get:
      operationId: api_students_course_details_get_subresourceStudentSubresource
      tags:
        - StudentCourse
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/course_details/course':
    get:
      operationId: api_students_course_details_course_get_subresourceStudentSubresource
      tags:
        - Education
        - StudentCourse
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: courseDetails
          in: path
          description: 'StudentCourse identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/dutch_n_t_details':
    get:
      operationId: api_students_dutch_n_t_details_get_subresourceStudentSubresource
      tags:
        - StudentDutchNT
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/education_details':
    get:
      operationId: api_students_education_details_get_subresourceStudentSubresource
      tags:
        - StudentEducation
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/education_details/education':
    get:
      operationId: api_students_education_details_education_get_subresourceStudentSubresource
      tags:
        - Education
        - StudentEducation
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: educationDetails
          in: path
          description: 'StudentEducation identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/general_details':
    get:
      operationId: api_students_general_details_get_subresourceStudentSubresource
      tags:
        - StudentGeneral
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/job_details':
    get:
      operationId: api_students_job_details_get_subresourceStudentSubresource
      tags:
        - StudentJob
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/motivation_details':
    get:
      operationId: api_students_motivation_details_get_subresourceStudentSubresource
      tags:
        - StudentMotivation
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/permission_details':
    get:
      operationId: api_students_permission_details_get_subresourceStudentSubresource
      tags:
        - StudentPermission
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person':
    get:
      operationId: api_students_person_get_subresourceStudentSubresource
      tags:
        - Person
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person/addresses':
    get:
      operationId: api_students_person_addresses_get_subresourceStudentSubresource
      tags:
        - Address
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person/emails':
    get:
      operationId: api_students_person_emails_get_subresourceStudentSubresource
      tags:
        - Email
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person/organization':
    get:
      operationId: api_students_person_organization_get_subresourceStudentSubresource
      tags:
        - Organization
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person/organization/addresses':
    get:
      operationId: api_students_person_organization_addresses_get_subresourceStudentSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person/organization/emails':
    get:
      operationId: api_students_person_organization_emails_get_subresourceStudentSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person/organization/telephones':
    get:
      operationId: api_students_person_organization_telephones_get_subresourceStudentSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/person/telephones':
    get:
      operationId: api_students_person_telephones_get_subresourceStudentSubresource
      tags:
        - Telephone
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/referrer_details':
    get:
      operationId: api_students_referrer_details_get_subresourceStudentSubresource
      tags:
        - StudentReferrer
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar':
    get:
      operationId: api_students_registrar_get_subresourceStudentSubresource
      tags:
        - Person
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar/addresses':
    get:
      operationId: api_students_registrar_addresses_get_subresourceStudentSubresource
      tags:
        - Address
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar/emails':
    get:
      operationId: api_students_registrar_emails_get_subresourceStudentSubresource
      tags:
        - Email
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar/organization':
    get:
      operationId: api_students_registrar_organization_get_subresourceStudentSubresource
      tags:
        - Organization
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar/organization/addresses':
    get:
      operationId: api_students_registrar_organization_addresses_get_subresourceStudentSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar/organization/emails':
    get:
      operationId: api_students_registrar_organization_emails_get_subresourceStudentSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar/organization/telephones':
    get:
      operationId: api_students_registrar_organization_telephones_get_subresourceStudentSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}/registrar/telephones':
    get:
      operationId: api_students_registrar_telephones_get_subresourceStudentSubresource
      tags:
        - Telephone
        - Person
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Student identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: registrar
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /telephones:
    get:
      operationId: getTelephoneCollection
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves the collection of Telephone resources.'
      description: 'Retrieves the collection of Telephone resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/telephones/{id}':
    get:
      operationId: getTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Telephone resource.'
      description: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /test_results:
    get:
      operationId: getTestResultCollection
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
      summary: 'Retrieves the collection of TestResult resources.'
      description: 'Retrieves the collection of TestResult resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postTestResultCollection
      tags:
        - TestResult
      responses:
        201:
          description: 'TestResult resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult-read'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a TestResult resource.'
      description: 'Creates a TestResult resource.'
      parameters: []
      requestBody:
        description: 'The new TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult-write'
        required: true
      deprecated: false
    parameters: []
  '/test_results/{id}':
    get:
      operationId: getTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a TestResult resource.'
      description: 'Retrieves a TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult-read'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the TestResult resource.'
      description: 'Replaces the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteTestResultItem
      tags:
        - TestResult
      responses:
        204:
          description: 'TestResult resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the TestResult resource.'
      description: 'Removes the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/test_results/{id}/learning_need_out_come':
    get:
      operationId: api_test_results_learning_need_out_come_get_subresourceTestResultSubresource
      tags:
        - LearningNeedOutCome
        - TestResult
      responses:
        200:
          description: 'TestResult resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
      summary: 'Retrieves a TestResult resource.'
      description: 'Retrieves a TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'TestResult identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users:
    get:
      operationId: getUserCollection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/current_user:
    get:
      operationId: get_current_userUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Get the current user.'
      description: 'Get the current user.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users/login:
    post:
      operationId: loginUserCollection
      tags:
        - User
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }
              example:
                token: eyJhbGciOiJSUzUxMiJ9.eyJ1c2VySWQiOiI2ZWZjYzNkYy0wN2IzLTQ5YzQtOGU1ZS1jOGIwMTQyYTk4ODYiLCJ0eXBlIjoibG9naW4iLCJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3QiLCJpYXMiOjE2MjczMDk0NDMsImV4cCI6MTYyODE3MzQ0M30.aA3rHw69mzIF2ycf36eD1DhLcnZtFtKK6r7ymajI0OTx7FvKJal7XR_sxfx-Adefps3RTc_VDAw8VOcFtl6S3P7tWgXPJCnZ2DchAlZTBAUhym0SqApW6mlouZLjBRuxL_rsz6kAHcFMWWQYyfN5jzRO1A_Qyo53IF2bs_EdiebXe-TKrAk_FTovcbxgFnznQ-P3l1IDe9v9Q3RrWfwUVI-i97pCOTvh77RtuHtvT-6mO4dW-GuKQOmYHQVijNgFVf3vuQiZk3kNeQi33jdwl0ij6e9PtVupSmroBEpZ0-SOJwv0aEfQSm3ZzLuA3gBbjXM29Evv4RobaQsT7XbSzCqkdY_VbqD4OvoQzWTuRrjufYOld1m6eFJ5-jducJBVf14QJiUkrUa0iz3IOAgcBmsMdaZOYw9IBLbJYCjzKl0SluNr0ltncySY2E3Qk8KOv7ZOoxmzjzSbrr39USgUjTePEgKXKNtU4q-363SL6cs5PD51lo2obFOZ4E-Eo12SPryCmrhixIFgQSqEKFTaOIOy1fQLd-KF8XEs-K9Op_W01sLYXA1TeW6vszHg8Lv9HtzKpoh31-Tj-hHTzpMUYHIv0Kj6y4DWUJRkAGmjdJAnmxwNy3B_WhFxYnqvcFWMi0W3d-lBx3PFFJCa3lMPHXYfBpvBBHzKzb3sFGiyZCs
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Login a user with a username and password.'
      description: 'Login a user with a username and password.'
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: JohnDoe@gmail.com
              password: 'n$5Ssqs]eCDT!$})'
        required: false
      deprecated: false
    parameters: []
  /users/logout:
    post:
      operationId: logoutUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Logout the currently logged in user.'
      description: 'Logout the currently logged in user.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/request_password_reset:
    post:
      operationId: request_password_resetUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Request a password reset token for a user.'
      description: 'Request a password reset token for a user.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/reset_password:
    post:
      operationId: reset_passwordUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Reset the password of a User with a token.'
      description: 'Reset the password of a User with a token.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  '/users/{id}':
    get:
      operationId: getUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the User resource.'
      description: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteUserItem
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person':
    get:
      operationId: api_users_person_get_subresourceUserSubresource
      tags:
        - Person
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person/addresses':
    get:
      operationId: api_users_person_addresses_get_subresourceUserSubresource
      tags:
        - Address
        - Person
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person/emails':
    get:
      operationId: api_users_person_emails_get_subresourceUserSubresource
      tags:
        - Email
        - Person
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person/organization':
    get:
      operationId: api_users_person_organization_get_subresourceUserSubresource
      tags:
        - Organization
        - Person
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person/organization/addresses':
    get:
      operationId: api_users_person_organization_addresses_get_subresourceUserSubresource
      tags:
        - Address
        - Organization
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person/organization/emails':
    get:
      operationId: api_users_person_organization_emails_get_subresourceUserSubresource
      tags:
        - Email
        - Organization
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person/organization/telephones':
    get:
      operationId: api_users_person_organization_telephones_get_subresourceUserSubresource
      tags:
        - Telephone
        - Organization
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: organization
          in: path
          description: 'Organization identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/person/telephones':
    get:
      operationId: api_users_person_telephones_get_subresourceUserSubresource
      tags:
        - Telephone
        - Person
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: person
          in: path
          description: 'Person identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Address-read:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          type: string
          example: 'Address of this person/organization'
          description: 'Name of this address.'
          nullable: true
        street:
          maxLength: 255
          example: Dam
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          example: '1'
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          example: A
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          example: '1000 AA'
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          example: Amsterdam
          description: 'Locality of this address.'
          type: string
      required:
        - street
        - houseNumber
        - postalCode
        - locality
    Address-write:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      properties:
        name:
          maxLength: 255
          type: string
          example: 'Address of this person/organization'
          description: 'Name of this address.'
          nullable: true
        street:
          maxLength: 255
          example: Dam
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          example: '1'
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          example: A
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          example: '1000 AA'
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          example: Amsterdam
          description: 'Locality of this address.'
          type: string
      required:
        - street
        - houseNumber
        - postalCode
        - locality
    Address.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          type: string
          example: 'Address of this person/organization'
          description: 'Name of this address.'
          nullable: true
        street:
          maxLength: 255
          example: Dam
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          example: '1'
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          example: A
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          example: '1000 AA'
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          example: Amsterdam
          description: 'Locality of this address.'
          type: string
      required:
        - street
        - houseNumber
        - postalCode
        - locality
    Address.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
          example: 'Address of this person/organization'
          description: 'Name of this address.'
          nullable: true
        street:
          maxLength: 255
          example: Dam
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          example: '1'
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          example: A
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          example: '1000 AA'
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          example: Amsterdam
          description: 'Locality of this address.'
          type: string
      required:
        - street
        - houseNumber
        - postalCode
        - locality
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Availability-read:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
    Availability-write:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
    Availability.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
    Availability.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
    AvailabilityDay-read:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      required:
        - morning
        - afternoon
        - evening
      properties:
        morning:
          type: bool
          example: true
          description: 'Morning of this availability day (6:00 -> 12:00).'
        afternoon:
          type: bool
          example: true
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
        evening:
          type: bool
          example: true
          description: 'Evening of this availability day (18:00 -> 00:00).'
    AvailabilityDay-write:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      required:
        - morning
        - afternoon
        - evening
      properties:
        morning:
          type: bool
          example: true
          description: 'Morning of this availability day (6:00 -> 12:00).'
        afternoon:
          type: bool
          example: true
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
        evening:
          type: bool
          example: true
          description: 'Evening of this availability day (18:00 -> 00:00).'
    AvailabilityDay.jsonld-read:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      required:
        - morning
        - afternoon
        - evening
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        morning:
          type: bool
          example: true
          description: 'Morning of this availability day (6:00 -> 12:00).'
        afternoon:
          type: bool
          example: true
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
        evening:
          type: bool
          example: true
          description: 'Evening of this availability day (18:00 -> 00:00).'
    AvailabilityDay.jsonld-write:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      required:
        - morning
        - afternoon
        - evening
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        morning:
          type: bool
          example: true
          description: 'Morning of this availability day (6:00 -> 12:00).'
        afternoon:
          type: bool
          example: true
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
        evening:
          type: bool
          example: true
          description: 'Evening of this availability day (18:00 -> 00:00).'
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Document-read:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        filename:
          maxLength: 255
          type: string
          example: 'Document X'
          description: 'Filename of this document.'
        base64:
          type: string
          example: base64
          description: 'Base64 of this document.'
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Student id of this document.'
          type: string
        providerEmployeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Provider employee id of this document.'
          type: string
      required:
        - filename
        - base64
    Document-write:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      required:
        - filename
        - base64
      properties:
        filename:
          maxLength: 255
          type: string
          example: 'Document X'
          description: 'Filename of this document.'
        base64:
          type: string
          example: base64
          description: 'Base64 of this document.'
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Student id of this document.'
          type: string
        providerEmployeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Provider employee id of this document.'
          type: string
    Document.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        filename:
          maxLength: 255
          type: string
          example: 'Document X'
          description: 'Filename of this document.'
        base64:
          type: string
          example: base64
          description: 'Base64 of this document.'
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Student id of this document.'
          type: string
        providerEmployeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Provider employee id of this document.'
          type: string
      required:
        - filename
        - base64
    Document.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      required:
        - filename
        - base64
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        filename:
          maxLength: 255
          type: string
          example: 'Document X'
          description: 'Filename of this document.'
        base64:
          type: string
          example: base64
          description: 'Base64 of this document.'
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Student id of this document.'
          type: string
        providerEmployeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'Provider employee id of this document.'
          type: string
    Education-read:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          type: string
          example: 'Language course'
          description: 'The name of the course this student is following.'
          nullable: true
        startDate:
          type: DateTime
          example: 12-07-2021
          description: 'Start date of this education.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 12-10-2021
          description: 'End date of this education.'
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          type: string
          example: 'Institution X'
          description: 'Institution of this education.'
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          type: string
          example: HBO
          description: 'Isced education level code of this education.'
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          type: string
          example: Granted
          description: 'Degree granted status of this education.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          type: bool
          example: true
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          nullable: true
        amountOfHours:
          type: int
          example: '25'
          description: 'The amount of hours the course takes, that this student is following.'
          nullable: true
    Education-write:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        name:
          type: string
          example: 'Language course'
          description: 'The name of the course this student is following.'
          nullable: true
        startDate:
          type: DateTime
          example: 12-07-2021
          description: 'Start date of this education.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 12-10-2021
          description: 'End date of this education.'
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          type: string
          example: 'Institution X'
          description: 'Institution of this education.'
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          type: string
          example: HBO
          description: 'Isced education level code of this education.'
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          type: string
          example: Granted
          description: 'Degree granted status of this education.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          type: bool
          example: true
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          nullable: true
        amountOfHours:
          type: int
          example: '25'
          description: 'The amount of hours the course takes, that this student is following.'
          nullable: true
    Education.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          type: string
          example: 'Language course'
          description: 'The name of the course this student is following.'
          nullable: true
        startDate:
          type: DateTime
          example: 12-07-2021
          description: 'Start date of this education.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 12-10-2021
          description: 'End date of this education.'
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          type: string
          example: 'Institution X'
          description: 'Institution of this education.'
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          type: string
          example: HBO
          description: 'Isced education level code of this education.'
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          type: string
          example: Granted
          description: 'Degree granted status of this education.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          type: bool
          example: true
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          nullable: true
        amountOfHours:
          type: int
          example: '25'
          description: 'The amount of hours the course takes, that this student is following.'
          nullable: true
    Education.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type: string
          example: 'Language course'
          description: 'The name of the course this student is following.'
          nullable: true
        startDate:
          type: DateTime
          example: 12-07-2021
          description: 'Start date of this education.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 12-10-2021
          description: 'End date of this education.'
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          type: string
          example: 'Institution X'
          description: 'Institution of this education.'
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          type: string
          example: HBO
          description: 'Isced education level code of this education.'
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          type: string
          example: Granted
          description: 'Degree granted status of this education.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          type: bool
          example: true
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          nullable: true
        amountOfHours:
          type: int
          example: '25'
          description: 'The amount of hours the course takes, that this student is following.'
          nullable: true
    Email-read:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          type: string
          example: 'Primary email address'
          description: 'Name of this email'
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          type: string
          example: john@doe.com
          description: 'The actual mail address'
      required:
        - email
    Email-write:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        name:
          maxLength: 255
          type: string
          example: 'Primary email address'
          description: 'Name of this email'
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          type: string
          example: john@doe.com
          description: 'The actual mail address'
      required:
        - email
    Email.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          type: string
          example: 'Primary email address'
          description: 'Name of this email'
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          type: string
          example: john@doe.com
          description: 'The actual mail address'
      required:
        - email
    Email.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
          example: 'Primary email address'
          description: 'Name of this email'
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          type: string
          example: john@doe.com
          description: 'The actual mail address'
      required:
        - email
    Employee-read:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource.'
          type: string
          format: uuid
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-read'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'The Availability Note of this Employee.'
          nullable: true
        targetGroupPreferences:
          type: array
          items:
            type: string
            enum:
              - NT1
              - NT2
            example: NT1
          description: 'Target Group Preference of this Employee.'
          nullable: true
        volunteeringPreference:
          maxLength: 255
          type: string
          example: 'Language cafe'
          description: 'Volunteering Preference of this Employee.'
          nullable: true
        gotHereVia:
          maxLength: 255
          type: string
          example: 'The Internet'
          description: 'Got here via of this Employee.'
          nullable: true
        hasExperienceWithTargetGroup:
          type: bool
          example: true
          description: 'Has experience with target group of this Employee.'
          nullable: true
        experienceWithTargetGroupYesReason:
          type: string
          example: 'Worked in an asylum seekers center'
          description: 'The reason for the experience with the target group?'
          nullable: true
        currentEducation:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Current education of this Employee.'
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
        doesCurrentlyFollowCourse:
          type: bool
          example: true
          description: 'Does currently follow course of this Employee.'
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
        otherRelevantCertificates:
          maxLength: 255
          type: string
          example: 'Dutch language certificate'
          description: 'Other relevant certificates of this Employee.'
          nullable: true
        isVOGChecked:
          type: bool
          example: true
          description: 'Whether the employee has submitted a police certificate'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          nullable: true
        userGroupIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
        userId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User id of this Employee.'
          nullable: true
      required:
        - person
        - userGroupIds
    Employee-write:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      required:
        - person
        - userGroupIds
      properties:
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-write'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'The Availability Note of this Employee.'
          nullable: true
        targetGroupPreferences:
          type: array
          items:
            type: string
            enum:
              - NT1
              - NT2
            example: NT1
          description: 'Target Group Preference of this Employee.'
          nullable: true
        volunteeringPreference:
          maxLength: 255
          type: string
          example: 'Language cafe'
          description: 'Volunteering Preference of this Employee.'
          nullable: true
        gotHereVia:
          maxLength: 255
          type: string
          example: 'The Internet'
          description: 'Got here via of this Employee.'
          nullable: true
        hasExperienceWithTargetGroup:
          type: bool
          example: true
          description: 'Has experience with target group of this Employee.'
          nullable: true
        experienceWithTargetGroupYesReason:
          type: string
          example: 'Worked in an asylum seekers center'
          description: 'The reason for the experience with the target group?'
          nullable: true
        currentEducation:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Current education of this Employee.'
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
        doesCurrentlyFollowCourse:
          type: bool
          example: true
          description: 'Does currently follow course of this Employee.'
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
        otherRelevantCertificates:
          maxLength: 255
          type: string
          example: 'Dutch language certificate'
          description: 'Other relevant certificates of this Employee.'
          nullable: true
        isVOGChecked:
          type: bool
          example: true
          description: 'Whether the employee has submitted a police certificate'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          nullable: true
        userGroupIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
        userId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User id of this Employee.'
          nullable: true
    Employee.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource.'
          type: string
          format: uuid
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-read'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'The Availability Note of this Employee.'
          nullable: true
        targetGroupPreferences:
          type: array
          items:
            type: string
            enum:
              - NT1
              - NT2
            example: NT1
          description: 'Target Group Preference of this Employee.'
          nullable: true
        volunteeringPreference:
          maxLength: 255
          type: string
          example: 'Language cafe'
          description: 'Volunteering Preference of this Employee.'
          nullable: true
        gotHereVia:
          maxLength: 255
          type: string
          example: 'The Internet'
          description: 'Got here via of this Employee.'
          nullable: true
        hasExperienceWithTargetGroup:
          type: bool
          example: true
          description: 'Has experience with target group of this Employee.'
          nullable: true
        experienceWithTargetGroupYesReason:
          type: string
          example: 'Worked in an asylum seekers center'
          description: 'The reason for the experience with the target group?'
          nullable: true
        currentEducation:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Current education of this Employee.'
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
        doesCurrentlyFollowCourse:
          type: bool
          example: true
          description: 'Does currently follow course of this Employee.'
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
        otherRelevantCertificates:
          maxLength: 255
          type: string
          example: 'Dutch language certificate'
          description: 'Other relevant certificates of this Employee.'
          nullable: true
        isVOGChecked:
          type: bool
          example: true
          description: 'Whether the employee has submitted a police certificate'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          nullable: true
        userGroupIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
        userId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User id of this Employee.'
          nullable: true
      required:
        - person
        - userGroupIds
    Employee.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      required:
        - person
        - userGroupIds
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-write'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'The Availability Note of this Employee.'
          nullable: true
        targetGroupPreferences:
          type: array
          items:
            type: string
            enum:
              - NT1
              - NT2
            example: NT1
          description: 'Target Group Preference of this Employee.'
          nullable: true
        volunteeringPreference:
          maxLength: 255
          type: string
          example: 'Language cafe'
          description: 'Volunteering Preference of this Employee.'
          nullable: true
        gotHereVia:
          maxLength: 255
          type: string
          example: 'The Internet'
          description: 'Got here via of this Employee.'
          nullable: true
        hasExperienceWithTargetGroup:
          type: bool
          example: true
          description: 'Has experience with target group of this Employee.'
          nullable: true
        experienceWithTargetGroupYesReason:
          type: string
          example: 'Worked in an asylum seekers center'
          description: 'The reason for the experience with the target group?'
          nullable: true
        currentEducation:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Current education of this Employee.'
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
        doesCurrentlyFollowCourse:
          type: bool
          example: true
          description: 'Does currently follow course of this Employee.'
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
        otherRelevantCertificates:
          maxLength: 255
          type: string
          example: 'Dutch language certificate'
          description: 'Other relevant certificates of this Employee.'
          nullable: true
        isVOGChecked:
          type: bool
          example: true
          description: 'Whether the employee has submitted a police certificate'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          nullable: true
        userGroupIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
        userId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'User id of this Employee.'
          nullable: true
    Group-read:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the cc/organization of a provider'
          nullable: true
        name:
          maxLength: 255
          type: string
          example: 'Group X'
          description: 'Name of this group.'
        typeCourse:
          maxLength: 255
          type: string
          example: 'Language course'
          description: 'Type course of this group.'
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        isFormal:
          type: bool
          example: true
          description: 'The isFormal boolean of this LearningNeedOutcome.'
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
        startDate:
          type: DateTime
          example: 20-07-2021
          description: 'Start date of this group.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 20-10-2021
          description: 'End date of this group.'
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-read'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'Availability note of this group.'
          nullable: true
        location:
          maxLength: 255
          type: string
          example: Online
          description: 'Location of this group.'
          nullable: true
        minParticipations:
          type: int
          example: '15'
          description: 'Min participation''s of this group.'
          nullable: true
        maxParticipations:
          type: int
          example: '25'
          description: 'Max participation''s of this group.'
          nullable: true
        evaluation:
          maxLength: 255
          type: string
          example: 'Group evalution'
          description: 'Evaluation of this group.'
          nullable: true
        employeeIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'Provider employee id''s of this group. (mentors)'
        status:
          type: string
          enum:
            - ACTIVE
            - COMPLETED
          example: ACTIVE
          description: 'The Status of this group.'
          nullable: true
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    Group-write:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the cc/organization of a provider'
          nullable: true
        name:
          maxLength: 255
          type: string
          example: 'Group X'
          description: 'Name of this group.'
        typeCourse:
          maxLength: 255
          type: string
          example: 'Language course'
          description: 'Type course of this group.'
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        isFormal:
          type: bool
          example: true
          description: 'The isFormal boolean of this LearningNeedOutcome.'
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
        startDate:
          type: DateTime
          example: 20-07-2021
          description: 'Start date of this group.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 20-10-2021
          description: 'End date of this group.'
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-write'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'Availability note of this group.'
          nullable: true
        location:
          maxLength: 255
          type: string
          example: Online
          description: 'Location of this group.'
          nullable: true
        minParticipations:
          type: int
          example: '15'
          description: 'Min participation''s of this group.'
          nullable: true
        maxParticipations:
          type: int
          example: '25'
          description: 'Max participation''s of this group.'
          nullable: true
        evaluation:
          maxLength: 255
          type: string
          example: 'Group evalution'
          description: 'Evaluation of this group.'
          nullable: true
        employeeIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'Provider employee id''s of this group. (mentors)'
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    Group.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the cc/organization of a provider'
          nullable: true
        name:
          maxLength: 255
          type: string
          example: 'Group X'
          description: 'Name of this group.'
        typeCourse:
          maxLength: 255
          type: string
          example: 'Language course'
          description: 'Type course of this group.'
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        isFormal:
          type: bool
          example: true
          description: 'The isFormal boolean of this LearningNeedOutcome.'
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
        startDate:
          type: DateTime
          example: 20-07-2021
          description: 'Start date of this group.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 20-10-2021
          description: 'End date of this group.'
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-read'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'Availability note of this group.'
          nullable: true
        location:
          maxLength: 255
          type: string
          example: Online
          description: 'Location of this group.'
          nullable: true
        minParticipations:
          type: int
          example: '15'
          description: 'Min participation''s of this group.'
          nullable: true
        maxParticipations:
          type: int
          example: '25'
          description: 'Max participation''s of this group.'
          nullable: true
        evaluation:
          maxLength: 255
          type: string
          example: 'Group evalution'
          description: 'Evaluation of this group.'
          nullable: true
        employeeIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'Provider employee id''s of this group. (mentors)'
        status:
          type: string
          enum:
            - ACTIVE
            - COMPLETED
          example: ACTIVE
          description: 'The Status of this group.'
          nullable: true
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    Group.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the cc/organization of a provider'
          nullable: true
        name:
          maxLength: 255
          type: string
          example: 'Group X'
          description: 'Name of this group.'
        typeCourse:
          maxLength: 255
          type: string
          example: 'Language course'
          description: 'Type course of this group.'
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        isFormal:
          type: bool
          example: true
          description: 'The isFormal boolean of this LearningNeedOutcome.'
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
        startDate:
          type: DateTime
          example: 20-07-2021
          description: 'Start date of this group.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 20-10-2021
          description: 'End date of this group.'
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-write'
        availabilityNotes:
          maxLength: 2550
          type: string
          example: 'Explanation availability'
          description: 'Availability note of this group.'
          nullable: true
        location:
          maxLength: 255
          type: string
          example: Online
          description: 'Location of this group.'
          nullable: true
        minParticipations:
          type: int
          example: '15'
          description: 'Min participation''s of this group.'
          nullable: true
        maxParticipations:
          type: int
          example: '25'
          description: 'Max participation''s of this group.'
          nullable: true
        evaluation:
          maxLength: 255
          type: string
          example: 'Group evalution'
          description: 'Evaluation of this group.'
          nullable: true
        employeeIds:
          type: array
          items:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'Provider employee id''s of this group. (mentors)'
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    LearningNeed-read:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        description:
          maxLength: 255
          type: string
          example: description
          description: 'A short description of this learning need.'
        motivation:
          maxLength: 255
          type: string
          example: 'I would like to get more experience on this topic'
          description: 'The motivation of a student, for this learning need.'
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        desiredOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis x in Amsterdam'
          description: 'The desired offer for a student learning need.'
          nullable: true
        advisedOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis y in Amsterdam'
          description: 'The advised offer of a student learning need.'
          nullable: true
        offerDifference:
          type: string
          enum:
            - 'NO'
            - YES_DISTANCE
            - YES_WAITINGLIST
            - YES_OTHER
          example: YES_WAITINGLIST
          description: 'The difference between the desired and advised offer of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          type: string
          example: 'An other reason why there is a difference.'
          description: 'Offer difference of this learning need, for when the OTHER option is selected.'
          nullable: true
        offerEngagements:
          maxLength: 255
          type: string
          example: 'An agreement'
          description: 'The offer engagements for this learning need.'
          nullable: true
        studentId:
          minLength: 36
          maxLength: 36
          type: string
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a student that this learning need is for.'
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
    LearningNeed-write:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
      properties:
        description:
          maxLength: 255
          type: string
          example: description
          description: 'A short description of this learning need.'
        motivation:
          maxLength: 255
          type: string
          example: 'I would like to get more experience on this topic'
          description: 'The motivation of a student, for this learning need.'
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        desiredOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis x in Amsterdam'
          description: 'The desired offer for a student learning need.'
          nullable: true
        advisedOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis y in Amsterdam'
          description: 'The advised offer of a student learning need.'
          nullable: true
        offerDifference:
          type: string
          enum:
            - 'NO'
            - YES_DISTANCE
            - YES_WAITINGLIST
            - YES_OTHER
          example: YES_WAITINGLIST
          description: 'The difference between the desired and advised offer of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          type: string
          example: 'An other reason why there is a difference.'
          description: 'Offer difference of this learning need, for when the OTHER option is selected.'
          nullable: true
        offerEngagements:
          maxLength: 255
          type: string
          example: 'An agreement'
          description: 'The offer engagements for this learning need.'
          nullable: true
        studentId:
          minLength: 36
          maxLength: 36
          type: string
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a student that this learning need is for.'
    LearningNeed.jsonld-read:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        description:
          maxLength: 255
          type: string
          example: description
          description: 'A short description of this learning need.'
        motivation:
          maxLength: 255
          type: string
          example: 'I would like to get more experience on this topic'
          description: 'The motivation of a student, for this learning need.'
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        desiredOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis x in Amsterdam'
          description: 'The desired offer for a student learning need.'
          nullable: true
        advisedOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis y in Amsterdam'
          description: 'The advised offer of a student learning need.'
          nullable: true
        offerDifference:
          type: string
          enum:
            - 'NO'
            - YES_DISTANCE
            - YES_WAITINGLIST
            - YES_OTHER
          example: YES_WAITINGLIST
          description: 'The difference between the desired and advised offer of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          type: string
          example: 'An other reason why there is a difference.'
          description: 'Offer difference of this learning need, for when the OTHER option is selected.'
          nullable: true
        offerEngagements:
          maxLength: 255
          type: string
          example: 'An agreement'
          description: 'The offer engagements for this learning need.'
          nullable: true
        studentId:
          minLength: 36
          maxLength: 36
          type: string
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a student that this learning need is for.'
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
    LearningNeed.jsonld-write:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        description:
          maxLength: 255
          type: string
          example: description
          description: 'A short description of this learning need.'
        motivation:
          maxLength: 255
          type: string
          example: 'I would like to get more experience on this topic'
          description: 'The motivation of a student, for this learning need.'
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        desiredOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis x in Amsterdam'
          description: 'The desired offer for a student learning need.'
          nullable: true
        advisedOffer:
          maxLength: 255
          type: string
          example: 'Taalhuis y in Amsterdam'
          description: 'The advised offer of a student learning need.'
          nullable: true
        offerDifference:
          type: string
          enum:
            - 'NO'
            - YES_DISTANCE
            - YES_WAITINGLIST
            - YES_OTHER
          example: YES_WAITINGLIST
          description: 'The difference between the desired and advised offer of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          type: string
          example: 'An other reason why there is a difference.'
          description: 'Offer difference of this learning need, for when the OTHER option is selected.'
          nullable: true
        offerEngagements:
          maxLength: 255
          type: string
          example: 'An agreement'
          description: 'The offer engagements for this learning need.'
          nullable: true
        studentId:
          minLength: 36
          maxLength: 36
          type: string
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a student that this learning need is for.'
    LearningNeedOutCome-read:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        goal:
          type: string
          example: 'Learn how to work with computers'
          description: 'The goal of this LearningNeedOutcome.'
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          type: string
          example: 'An other topic'
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          type: string
          example: 'An other application'
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          type: string
          example: 'An other level'
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
      required:
        - goal
        - topic
        - application
        - level
    LearningNeedOutCome-write:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      required:
        - goal
        - topic
        - application
        - level
      properties:
        goal:
          type: string
          example: 'Learn how to work with computers'
          description: 'The goal of this LearningNeedOutcome.'
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          type: string
          example: 'An other topic'
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          type: string
          example: 'An other application'
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          type: string
          example: 'An other level'
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
    LearningNeedOutCome.jsonld-read:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        goal:
          type: string
          example: 'Learn how to work with computers'
          description: 'The goal of this LearningNeedOutcome.'
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          type: string
          example: 'An other topic'
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          type: string
          example: 'An other application'
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          type: string
          example: 'An other level'
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
      required:
        - goal
        - topic
        - application
        - level
    LearningNeedOutCome.jsonld-write:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      required:
        - goal
        - topic
        - application
        - level
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        goal:
          type: string
          example: 'Learn how to work with computers'
          description: 'The goal of this LearningNeedOutcome.'
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          type: string
          example: 'An other topic'
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          type: string
          example: 'An other application'
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          type: string
          example: 'An other level'
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          nullable: true
    Organization-read:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          type: string
          example: 'My company'
          description: 'Name of this organization'
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization. <br /> **When creating a Provider or LanguageHouse this is required!**'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-read'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-read'
      required:
        - name
    Organization-write:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      required:
        - name
      properties:
        name:
          maxLength: 255
          type: string
          example: 'My company'
          description: 'Name of this organization'
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization. <br /> **When creating a Provider or LanguageHouse this is required!**'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-write'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-write'
    Organization.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          type: string
          example: 'My company'
          description: 'Name of this organization'
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization. <br /> **When creating a Provider or LanguageHouse this is required!**'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-read'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-read'
      required:
        - name
    Organization.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          type: string
          example: 'My company'
          description: 'Name of this organization'
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization. <br /> **When creating a Provider or LanguageHouse this is required!**'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-write'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-write'
    Participation-read:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerName:
          type: string
          example: 'Provider X'
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerNote:
          maxLength: 255
          type: string
          example: 'Explanation of Provider X'
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        offerName:
          maxLength: 255
          type: string
          example: 'Offer X'
          description: 'Offer name of this participation'
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        isFormal:
          type: bool
          example: false
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
          nullable: true
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          nullable: true
        startDate:
          type: DateTime
          example: 11-04-2021
          description: 'The start date of this participation.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 11-11-2021
          description: 'The end date of this participation.'
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          type: string
          example: 'Engagements details'
          description: 'Details engagements of this participation'
          nullable: true
        learningNeedId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the LearningNeed connected to this Participation.'
      required:
        - learningNeedId
    Participation-write:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerName:
          type: string
          example: 'Provider X'
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerNote:
          maxLength: 255
          type: string
          example: 'Explanation of Provider X'
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        offerName:
          maxLength: 255
          type: string
          example: 'Offer X'
          description: 'Offer name of this participation'
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        isFormal:
          type: bool
          example: false
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
          nullable: true
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          nullable: true
        startDate:
          type: DateTime
          example: 11-04-2021
          description: 'The start date of this participation.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 11-11-2021
          description: 'The end date of this participation.'
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          type: string
          example: 'Engagements details'
          description: 'Details engagements of this participation'
          nullable: true
        learningNeedId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the LearningNeed connected to this Participation.'
      required:
        - learningNeedId
    Participation.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerName:
          type: string
          example: 'Provider X'
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerNote:
          maxLength: 255
          type: string
          example: 'Explanation of Provider X'
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        offerName:
          maxLength: 255
          type: string
          example: 'Offer X'
          description: 'Offer name of this participation'
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        isFormal:
          type: bool
          example: false
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
          nullable: true
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          nullable: true
        startDate:
          type: DateTime
          example: 11-04-2021
          description: 'The start date of this participation.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 11-11-2021
          description: 'The end date of this participation.'
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          type: string
          example: 'Engagements details'
          description: 'Details engagements of this participation'
          nullable: true
        learningNeedId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the LearningNeed connected to this Participation.'
      required:
        - learningNeedId
    Participation.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        providerId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerName:
          type: string
          example: 'Provider X'
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        providerNote:
          maxLength: 255
          type: string
          example: 'Explanation of Provider X'
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          nullable: true
        offerName:
          maxLength: 255
          type: string
          example: 'Offer X'
          description: 'Offer name of this participation'
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        isFormal:
          type: bool
          example: false
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          type: float
          example: '30'
          description: 'The total class hours of this LearningNeedOutcome.'
          nullable: true
        certificateWillBeAwarded:
          type: bool
          example: true
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          nullable: true
        startDate:
          type: DateTime
          example: 11-04-2021
          description: 'The start date of this participation.'
          format: date-time
          nullable: true
        endDate:
          type: DateTime
          example: 11-11-2021
          description: 'The end date of this participation.'
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          type: string
          example: 'Engagements details'
          description: 'Details engagements of this participation'
          nullable: true
        learningNeedId:
          minLength: 36
          maxLength: 36
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The id of the LearningNeed connected to this Participation.'
      required:
        - learningNeedId
    Person-read:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          type: string
          example: John
          description: 'Given name of this person'
        additionalName:
          type: string
          example: von
          description: 'Additional name of this person'
          nullable: true
        familyName:
          type: string
          example: Doe
          description: 'Family name of this person'
        gender:
          type: string
          enum:
            - Male
            - Female
            - X
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          type: DateTime
          example: 12-02-1999
          description: 'Birthday of this person'
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-read'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-read'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          type: string
          example: 'Send contact person a message'
          description: 'The contact preference of the person for when the OTHER option is selected.'
          nullable: true
      required:
        - givenName
        - familyName
    Person-write:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      required:
        - givenName
        - familyName
      properties:
        givenName:
          type: string
          example: John
          description: 'Given name of this person'
        additionalName:
          type: string
          example: von
          description: 'Additional name of this person'
          nullable: true
        familyName:
          type: string
          example: Doe
          description: 'Family name of this person'
        gender:
          type: string
          enum:
            - Male
            - Female
            - X
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          type: DateTime
          example: 12-02-1999
          description: 'Birthday of this person'
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-write'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-write'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          type: string
          example: 'Send contact person a message'
          description: 'The contact preference of the person for when the OTHER option is selected.'
          nullable: true
    Person.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          type: string
          example: John
          description: 'Given name of this person'
        additionalName:
          type: string
          example: von
          description: 'Additional name of this person'
          nullable: true
        familyName:
          type: string
          example: Doe
          description: 'Family name of this person'
        gender:
          type: string
          enum:
            - Male
            - Female
            - X
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          type: DateTime
          example: 12-02-1999
          description: 'Birthday of this person'
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-read'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-read'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-read'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          type: string
          example: 'Send contact person a message'
          description: 'The contact preference of the person for when the OTHER option is selected.'
          nullable: true
      required:
        - givenName
        - familyName
    Person.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      required:
        - givenName
        - familyName
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        givenName:
          type: string
          example: John
          description: 'Given name of this person'
        additionalName:
          type: string
          example: von
          description: 'Additional name of this person'
          nullable: true
        familyName:
          type: string
          example: Doe
          description: 'Family name of this person'
        gender:
          type: string
          enum:
            - Male
            - Female
            - X
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          type: DateTime
          example: 12-02-1999
          description: 'Birthday of this person'
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-write'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-write'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-write'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          type: string
          example: 'Send contact person a message'
          description: 'The contact preference of the person for when the OTHER option is selected.'
          nullable: true
    Registration-read:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A language house for this registration.'
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        memo:
          type: string
          example: 'Explanation of the registration'
          description: 'A note for/with this registration.'
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
      required:
        - languageHouseId
        - student
        - registrar
    Registration-write:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      required:
        - languageHouseId
        - student
        - registrar
      properties:
        languageHouseId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A language house for this registration.'
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        memo:
          type: string
          example: 'Explanation of the registration'
          description: 'A note for/with this registration.'
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
    Registration.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A language house for this registration.'
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        memo:
          type: string
          example: 'Explanation of the registration'
          description: 'A note for/with this registration.'
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
      required:
        - languageHouseId
        - student
        - registrar
    Registration.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      required:
        - languageHouseId
        - student
        - registrar
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        languageHouseId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'A language house for this registration.'
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        memo:
          type: string
          example: 'Explanation of the registration'
          description: 'A note for/with this registration.'
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
    Report-read:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        organizationId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The organization the report applies to.'
          nullable: true
        dateFrom:
          type: string
          example: 12-06-2021
          description: 'A date from which you want data in the report.'
          nullable: true
        dateUntil:
          type: string
          example: 12-06-2022
          description: 'A date until which you want data in the report.'
          nullable: true
        filename:
          type: string
          example: 'Report X'
          description: 'The filename of the report.'
          nullable: true
        base64:
          type: string
          example: base64
          description: 'A base64 encoded string containing the file''s contents.'
          nullable: true
    Report-write:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        organizationId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The organization the report applies to.'
          nullable: true
        dateFrom:
          type: string
          example: 12-06-2021
          description: 'A date from which you want data in the report.'
          nullable: true
        dateUntil:
          type: string
          example: 12-06-2022
          description: 'A date until which you want data in the report.'
          nullable: true
        filename:
          type: string
          example: 'Report X'
          description: 'The filename of the report.'
          nullable: true
        base64:
          type: string
          example: base64
          description: 'A base64 encoded string containing the file''s contents.'
          nullable: true
    Report.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        organizationId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The organization the report applies to.'
          nullable: true
        dateFrom:
          type: string
          example: 12-06-2021
          description: 'A date from which you want data in the report.'
          nullable: true
        dateUntil:
          type: string
          example: 12-06-2022
          description: 'A date until which you want data in the report.'
          nullable: true
        filename:
          type: string
          example: 'Report X'
          description: 'The filename of the report.'
          nullable: true
        base64:
          type: string
          example: base64
          description: 'A base64 encoded string containing the file''s contents.'
          nullable: true
    Report.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organizationId:
          type: string
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: 'The organization the report applies to.'
          nullable: true
        dateFrom:
          type: string
          example: 12-06-2021
          description: 'A date from which you want data in the report.'
          nullable: true
        dateUntil:
          type: string
          example: 12-06-2022
          description: 'A date until which you want data in the report.'
          nullable: true
        filename:
          type: string
          example: 'Report X'
          description: 'The filename of the report.'
          nullable: true
        base64:
          type: string
          example: base64
          description: 'A base64 encoded string containing the file''s contents.'
          nullable: true
    Student-read:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration-read'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral-read'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer-read'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground-read'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT-read'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation-read'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse-read'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob-read'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation-read'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability-read'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission-read'
        languageHouseId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of the cc/organization of a languageHouse'
          type: string
        status:
          type: string
          enum:
            - REFERRRED
            - ACTIVE
            - COMPLETED
          example: REFERRED
          description: 'The Status of this group.'
          nullable: true
      required:
        - person
        - permissionDetails
        - languageHouseId
    Student-write:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration-write'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral-write'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer-write'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground-write'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT-write'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation-write'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse-write'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob-write'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation-write'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability-write'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission-write'
        languageHouseId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of the cc/organization of a languageHouse'
          type: string
      required:
        - person
        - permissionDetails
        - languageHouseId
    Student.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral.jsonld-read'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer.jsonld-read'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground.jsonld-read'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation.jsonld-read'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse.jsonld-read'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob.jsonld-read'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation.jsonld-read'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability.jsonld-read'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission.jsonld-read'
        languageHouseId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of the cc/organization of a languageHouse'
          type: string
        status:
          type: string
          enum:
            - REFERRRED
            - ACTIVE
            - COMPLETED
          example: REFERRED
          description: 'The Status of this group.'
          nullable: true
      required:
        - person
        - permissionDetails
        - languageHouseId
    Student.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-write'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral.jsonld-write'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer.jsonld-write'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground.jsonld-write'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT.jsonld-write'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation.jsonld-write'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse.jsonld-write'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob.jsonld-write'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation.jsonld-write'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability.jsonld-write'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission.jsonld-write'
        languageHouseId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of the cc/organization of a languageHouse'
          type: string
      required:
        - person
        - permissionDetails
        - languageHouseId
    StudentAvailability-read:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-read'
        availabilityNotes:
          example: 'An note with this availability'
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentAvailability-write:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-write'
        availabilityNotes:
          example: 'An note with this availability'
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentAvailability.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-read'
        availabilityNotes:
          example: 'An note with this availability'
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentAvailability.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-write'
        availabilityNotes:
          example: 'An note with this availability'
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentBackground-read:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          example: 'An other way to find a languageHouse'
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          example: 'Went to this languageHouse before, because...'
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          example: 2016
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          example: 4
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentBackground-write:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          example: 'An other way to find a languageHouse'
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          example: 'Went to this languageHouse before, because...'
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          example: 2016
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          example: 4
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentBackground.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          example: 'An other way to find a languageHouse'
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          example: 'Went to this languageHouse before, because...'
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          example: 2016
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          example: 4
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentBackground.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          example: 'An other way to find a languageHouse'
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          example: 'Went to this languageHouse before, because...'
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          example: 2016
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          example: 4
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentCivicIntegration-read:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration-write:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCourse-read:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
    StudentCourse-write:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
    StudentCourse.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
    StudentCourse.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
    StudentDossierEvent-read:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          example: 'A dossier event'
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDossierEvent-write:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
      properties:
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          example: 'A dossier event'
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
    StudentDossierEvent.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          example: 'A dossier event'
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDossierEvent.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          example: 'A dossier event'
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
    StudentDutchNT-read:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          example: 2003
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          example: Dutch
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentDutchNT-write:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          example: 2003
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          example: Dutch
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentDutchNT.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          example: 2003
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          example: Dutch
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentDutchNT.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          example: 2003
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          example: Dutch
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentEducation-read:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        followingEducationRightNow:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Following education right now of this studentEducation.'
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
    StudentEducation-write:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        followingEducationRightNow:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Following education right now of this studentEducation.'
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
    StudentEducation.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        followingEducationRightNow:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Following education right now of this studentEducation.'
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
    StudentEducation.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        followingEducationRightNow:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: 'Following education right now of this studentEducation.'
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
    StudentGeneral-read:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          example: 'The Netherlands'
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          minLength: 2
          maxLength: 3
          example: NL
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          example: 'English, Spanish'
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          example: 2
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          example: '01-01-2006, 04-08-1999'
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentGeneral-write:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        countryOfOrigin:
          example: 'The Netherlands'
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          minLength: 2
          maxLength: 3
          example: NL
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          example: 'English, Spanish'
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          example: 2
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          example: '01-01-2006, 04-08-1999'
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentGeneral.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          example: 'The Netherlands'
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          minLength: 2
          maxLength: 3
          example: NL
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          example: 'English, Spanish'
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          example: 2
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          example: '01-01-2006, 04-08-1999'
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentGeneral.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        countryOfOrigin:
          example: 'The Netherlands'
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          minLength: 2
          maxLength: 3
          example: NL
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          example: 'English, Spanish'
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          example: 2
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          example: '01-01-2006, 04-08-1999'
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentJob-read:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          example: 'Software Developer'
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          example: 'Software Developer'
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          example: 'An other daytime activity'
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentJob-write:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        trainedForJob:
          example: 'Software Developer'
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          example: 'Software Developer'
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          example: 'An other daytime activity'
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentJob.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          example: 'Software Developer'
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          example: 'Software Developer'
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          example: 'An other daytime activity'
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentJob.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        trainedForJob:
          example: 'Software Developer'
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          example: 'Software Developer'
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          example: 'An other daytime activity'
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentMotivation-read:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          example: 'An other desired skill'
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          example: 'I have tried this before because...'
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          example: 'I want to become better at it'
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          example: 'Because i was inspired to do so'
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          example: 'Extra motivation note'
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentMotivation-write:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          example: 'An other desired skill'
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          example: 'I have tried this before because...'
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          example: 'I want to become better at it'
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          example: 'Because i was inspired to do so'
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          example: 'Extra motivation note'
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentMotivation.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          example: 'An other desired skill'
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          example: 'I have tried this before because...'
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          example: 'I want to become better at it'
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          example: 'Because i was inspired to do so'
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          example: 'Extra motivation note'
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentMotivation.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          example: 'An other desired skill'
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          example: 'I have tried this before because...'
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          example: 'I want to become better at it'
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          example: 'Because i was inspired to do so'
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          example: 'Extra motivation note'
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentPermission-read:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
    StudentPermission-write:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
      properties:
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
    StudentPermission.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
    StudentPermission.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
    StudentReferrer-read:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          example: 'An other organization'
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          example: johnDoe@gmail.com
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    StudentReferrer-write:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          example: 'An other organization'
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          example: johnDoe@gmail.com
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    StudentReferrer.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          example: 'An other organization'
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          example: johnDoe@gmail.com
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    StudentReferrer.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          example: 'An other organization'
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          minLength: 3
          maxLength: 320
          example: johnDoe@gmail.com
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    Telephone-read:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          example: 'Primary phone number'
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 20
          example: '+31 (0)20 1234567'
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    Telephone-write:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        name:
          maxLength: 255
          example: 'Primary phone number'
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 20
          example: '+31 (0)20 1234567'
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    Telephone.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          example: 'Primary phone number'
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 20
          example: '+31 (0)20 1234567'
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    Telephone.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          example: 'Primary phone number'
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 20
          example: '+31 (0)20 1234567'
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    TestResult-read:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        usedExam:
          example: 'Exam x about computers'
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
          format: date-time
        examMemo:
          example: 'This test was very hard!'
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
    TestResult-write:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
      properties:
        participationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        usedExam:
          example: 'Exam x about computers'
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
          format: date-time
        examMemo:
          example: 'This test was very hard!'
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
    TestResult.jsonld-read:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        usedExam:
          example: 'Exam x about computers'
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
          format: date-time
        examMemo:
          example: 'This test was very hard!'
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
    TestResult.jsonld-write:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        participationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        usedExam:
          example: 'Exam x about computers'
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
          format: date-time
        examMemo:
          example: 'This test was very hard!'
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
    User-read:
      type: object
      description: 'All properties that the DTO entity User holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        username:
          maxLength: 2550
          example: JohnDoe@gmail.com
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          example: 'Taalhuis X'
          description: 'The organization name of this User.'
          type: string
          nullable: true
        token:
          maxLength: 2550
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMjk4NDQ2NS0xOTBhLTQ1NjItODI5ZS1hOGNjYTgxYWEzNWQiLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwiaXNzIjoiaXNzIiwiaWFzIjoiaWFzIiwiZXhwIjoiZXhwIn0.dBLCHRmqFyTv3tiyI0mpYnlcQ0UTRqG9JpKw5zd0I2U
          description: 'The Token for password reset.'
          type: string
          nullable: true
      required:
        - username
        - person
    User-write:
      type: object
      description: 'All properties that the DTO entity User holds.'
      required:
        - username
        - person
        - password
      properties:
        username:
          maxLength: 2550
          example: JohnDoe@gmail.com
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          example: 'Taalhuis X'
          description: 'The organization name of this User.'
          type: string
          nullable: true
        password:
          maxLength: 2550
          example: 'n$5Ssqs]eCDT!$})'
          description: 'The Password of this User.'
          type: string
        token:
          maxLength: 2550
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMjk4NDQ2NS0xOTBhLTQ1NjItODI5ZS1hOGNjYTgxYWEzNWQiLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwiaXNzIjoiaXNzIiwiaWFzIjoiaWFzIiwiZXhwIjoiZXhwIn0.dBLCHRmqFyTv3tiyI0mpYnlcQ0UTRqG9JpKw5zd0I2U
          description: 'The Token for password reset.'
          type: string
          nullable: true
    User.jsonld-read:
      type: object
      description: 'All properties that the DTO entity User holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        username:
          maxLength: 2550
          example: JohnDoe@gmail.com
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          example: 'Taalhuis X'
          description: 'The organization name of this User.'
          type: string
          nullable: true
        token:
          maxLength: 2550
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMjk4NDQ2NS0xOTBhLTQ1NjItODI5ZS1hOGNjYTgxYWEzNWQiLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwiaXNzIjoiaXNzIiwiaWFzIjoiaWFzIiwiZXhwIjoiZXhwIn0.dBLCHRmqFyTv3tiyI0mpYnlcQ0UTRqG9JpKw5zd0I2U
          description: 'The Token for password reset.'
          type: string
          nullable: true
      required:
        - username
        - person
    User.jsonld-write:
      type: object
      description: 'All properties that the DTO entity User holds.'
      required:
        - username
        - person
        - password
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        username:
          maxLength: 2550
          example: JohnDoe@gmail.com
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          minLength: 36
          maxLength: 36
          example: e2984465-190a-4562-829e-a8cca81aa35d
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          example: 'Taalhuis X'
          description: 'The organization name of this User.'
          type: string
          nullable: true
        password:
          maxLength: 2550
          example: 'n$5Ssqs]eCDT!$})'
          description: 'The Password of this User.'
          type: string
        token:
          maxLength: 2550
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJlMjk4NDQ2NS0xOTBhLTQ1NjItODI5ZS1hOGNjYTgxYWEzNWQiLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwiaXNzIjoiaXNzIiwiaWFzIjoiaWFzIiwiZXhwIjoiZXhwIn0.dBLCHRmqFyTv3tiyI0mpYnlcQ0UTRqG9JpKw5zd0I2U
          description: 'The Token for password reset.'
          type: string
          nullable: true
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
