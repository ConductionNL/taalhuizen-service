openapi: 3.0.3
info:
  title: 'Taalhuizen Service'
  description: |-
    API Details
    - Component: Taalhuizen Service
    - Reference: taalhuizen-service
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/taalhuizen-service) / [zip](https://github.com/ConductionNL/taalhuizen-service/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/taalhuizen-service.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 

    &
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /addresses:
    get:
      operationId: getAddressCollection
      tags:
        - Address
      responses:
        200:
          description: 'Address collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
      summary: 'Retrieves the collection of Address resources.'
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAddressCollection
      tags:
        - Address
      responses:
        201:
          description: 'Address resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address'
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address'
            text/html:
              schema:
                $ref: '#/components/schemas/Address'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Address resource.'
      description: 'Creates a Address resource.'
      parameters: []
      requestBody:
        description: 'The new Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address'
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address'
          text/html:
            schema:
              $ref: '#/components/schemas/Address'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      deprecated: false
    parameters: []
  '/addresses/{id}':
    get:
      operationId: getAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address'
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address'
            text/html:
              schema:
                $ref: '#/components/schemas/Address'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address'
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address'
            text/html:
              schema:
                $ref: '#/components/schemas/Address'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Address resource.'
      description: 'Replaces the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address'
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address'
          text/html:
            schema:
              $ref: '#/components/schemas/Address'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      deprecated: false
    delete:
      operationId: deleteAddressItem
      tags:
        - Address
      responses:
        204:
          description: 'Address resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Address resource.'
      description: 'Removes the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address'
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address'
            text/html:
              schema:
                $ref: '#/components/schemas/Address'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Address resource.'
      description: 'Updates the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Address'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Address'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address'
          text/html:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /availabilities:
    get:
      operationId: getAvailabilityCollection
      tags:
        - Availability
      responses:
        200:
          description: 'Availability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
      summary: 'Retrieves the collection of Availability resources.'
      description: 'Retrieves the collection of Availability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAvailabilityCollection
      tags:
        - Availability
      responses:
        201:
          description: 'Availability resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Availability resource.'
      description: 'Creates a Availability resource.'
      parameters: []
      requestBody:
        description: 'The new Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Availability'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Availability'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Availability'
        required: true
      deprecated: false
    parameters: []
  '/availabilities/{id}':
    get:
      operationId: getAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Availability resource.'
      description: 'Replaces the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Availability'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Availability'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Availability'
        required: true
      deprecated: false
    delete:
      operationId: deleteAvailabilityItem
      tags:
        - Availability
      responses:
        204:
          description: 'Availability resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Availability resource.'
      description: 'Removes the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Availability resource.'
      description: 'Updates the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Availability'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability'
        required: true
      deprecated: false
    parameters: []
  /availability_days:
    get:
      operationId: getAvailabilityDayCollection
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay'
      summary: 'Retrieves the collection of AvailabilityDay resources.'
      description: 'Retrieves the collection of AvailabilityDay resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAvailabilityDayCollection
      tags:
        - AvailabilityDay
      responses:
        201:
          description: 'AvailabilityDay resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AvailabilityDay resource.'
      description: 'Creates a AvailabilityDay resource.'
      parameters: []
      requestBody:
        description: 'The new AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
        required: true
      deprecated: false
    parameters: []
  '/availability_days/{id}':
    get:
      operationId: getAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AvailabilityDay resource.'
      description: 'Retrieves a AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AvailabilityDay resource.'
      description: 'Replaces the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
        required: true
      deprecated: false
    delete:
      operationId: deleteAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        204:
          description: 'AvailabilityDay resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AvailabilityDay resource.'
      description: 'Removes the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AvailabilityDay resource.'
      description: 'Updates the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay'
        required: true
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /documents:
    get:
      operationId: getDocumentCollection
      tags:
        - Document
      responses:
        200:
          description: 'Document collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      summary: 'Retrieves the collection of Document resources.'
      description: 'Retrieves the collection of Document resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postDocumentCollection
      tags:
        - Document
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Document resource.'
      description: 'Creates a Document resource.'
      parameters: []
      requestBody:
        description: 'The new Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      deprecated: false
    parameters: []
  '/documents/{id}':
    get:
      operationId: getDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Document resource.'
      description: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Document resource.'
      description: 'Replaces the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      deprecated: false
    delete:
      operationId: deleteDocumentItem
      tags:
        - Document
      responses:
        204:
          description: 'Document resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Document resource.'
      description: 'Removes the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Document resource.'
      description: 'Updates the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Document'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      deprecated: false
    parameters: []
  /education:
    get:
      operationId: getEducationCollection
      tags:
        - Education
      responses:
        200:
          description: 'Education collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'
      summary: 'Retrieves the collection of Education resources.'
      description: 'Retrieves the collection of Education resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEducationCollection
      tags:
        - Education
      responses:
        201:
          description: 'Education resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education'
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education'
            text/html:
              schema:
                $ref: '#/components/schemas/Education'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education'
          links:
            GetEducationItem:
              operationId: getEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Education resource.'
      description: 'Creates a Education resource.'
      parameters: []
      requestBody:
        description: 'The new Education resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education'
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education'
          text/html:
            schema:
              $ref: '#/components/schemas/Education'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      deprecated: false
    parameters: []
  '/education/{id}':
    get:
      operationId: getEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education'
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education'
            text/html:
              schema:
                $ref: '#/components/schemas/Education'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Education resource.'
      description: 'Retrieves a Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education'
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education'
            text/html:
              schema:
                $ref: '#/components/schemas/Education'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education'
          links:
            GetEducationItem:
              operationId: getEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Education resource.'
      description: 'Replaces the Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Education resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education'
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education'
          text/html:
            schema:
              $ref: '#/components/schemas/Education'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      deprecated: false
    delete:
      operationId: deleteEducationItem
      tags:
        - Education
      responses:
        204:
          description: 'Education resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Education resource.'
      description: 'Removes the Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education'
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education'
            text/html:
              schema:
                $ref: '#/components/schemas/Education'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education'
          links:
            GetEducationItem:
              operationId: getEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Education resource.'
      description: 'Updates the Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Education resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Education'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Education'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education'
          text/html:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      deprecated: false
    parameters: []
  /emails:
    get:
      operationId: getEmailCollection
      tags:
        - Email
      responses:
        200:
          description: 'Email collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
      summary: 'Retrieves the collection of Email resources.'
      description: 'Retrieves the collection of Email resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmailCollection
      tags:
        - Email
      responses:
        201:
          description: 'Email resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email'
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email'
            text/html:
              schema:
                $ref: '#/components/schemas/Email'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email'
          links:
            GetEmailItem:
              operationId: getEmailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Email resource.'
      description: 'Creates a Email resource.'
      parameters: []
      requestBody:
        description: 'The new Email resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email'
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email'
          text/html:
            schema:
              $ref: '#/components/schemas/Email'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      deprecated: false
    parameters: []
  '/emails/{id}':
    get:
      operationId: getEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email'
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email'
            text/html:
              schema:
                $ref: '#/components/schemas/Email'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Email resource.'
      description: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email'
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email'
            text/html:
              schema:
                $ref: '#/components/schemas/Email'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email'
          links:
            GetEmailItem:
              operationId: getEmailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Email resource.'
      description: 'Replaces the Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Email resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email'
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email'
          text/html:
            schema:
              $ref: '#/components/schemas/Email'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmailItem
      tags:
        - Email
      responses:
        204:
          description: 'Email resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Email resource.'
      description: 'Removes the Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email'
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email'
            text/html:
              schema:
                $ref: '#/components/schemas/Email'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email'
          links:
            GetEmailItem:
              operationId: getEmailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Email resource.'
      description: 'Updates the Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Email resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Email'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Email'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email'
          text/html:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      deprecated: false
    parameters: []
  /employees:
    get:
      operationId: getEmployeeCollection
      tags:
        - Employee
      responses:
        200:
          description: 'Employee collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
      summary: 'Retrieves the collection of Employee resources.'
      description: 'Retrieves the collection of Employee resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmployeeCollection
      tags:
        - Employee
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Employee resource.'
      description: 'Creates a Employee resource.'
      parameters: []
      requestBody:
        description: 'The new Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      deprecated: false
    parameters: []
  '/employees/{id}':
    get:
      operationId: getEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Employee resource.'
      description: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmployeeItem
      tags:
        - Employee
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Employee resource.'
      description: 'Removes the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Employee resource.'
      description: 'Updates the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      deprecated: false
    parameters: []
  /groups:
    get:
      operationId: getGroupCollection
      tags:
        - Group
      responses:
        200:
          description: 'Group collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
      summary: 'Retrieves the collection of Group resources.'
      description: 'Retrieves the collection of Group resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: aanbiederId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'aanbiederId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postGroupCollection
      tags:
        - Group
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group'
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
            text/html:
              schema:
                $ref: '#/components/schemas/Group'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Group resource.'
      description: 'Creates a Group resource.'
      parameters: []
      requestBody:
        description: 'The new Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group'
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group'
          text/html:
            schema:
              $ref: '#/components/schemas/Group'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      deprecated: false
    parameters: []
  '/groups/{id}':
    get:
      operationId: getGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group'
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
            text/html:
              schema:
                $ref: '#/components/schemas/Group'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group'
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
            text/html:
              schema:
                $ref: '#/components/schemas/Group'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Group resource.'
      description: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group'
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group'
          text/html:
            schema:
              $ref: '#/components/schemas/Group'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      deprecated: false
    delete:
      operationId: deleteGroupItem
      tags:
        - Group
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Group resource.'
      description: 'Removes the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group'
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group'
            text/html:
              schema:
                $ref: '#/components/schemas/Group'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Group resource.'
      description: 'Updates the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Group'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Group'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group'
          text/html:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      deprecated: false
    parameters: []
  /learning_need_out_comes:
    get:
      operationId: getLearningNeedOutComeCollection
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeedOutCome.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeedOutCome.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome'
      summary: 'Retrieves the collection of LearningNeedOutCome resources.'
      description: 'Retrieves the collection of LearningNeedOutCome resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postLearningNeedOutComeCollection
      tags:
        - LearningNeedOutCome
      responses:
        201:
          description: 'LearningNeedOutCome resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
          links:
            GetLearningNeedOutComeItem:
              operationId: getLearningNeedOutComeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_need_out_comes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LearningNeedOutCome resource.'
      description: 'Creates a LearningNeedOutCome resource.'
      parameters: []
      requestBody:
        description: 'The new LearningNeedOutCome resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
        required: true
      deprecated: false
    parameters: []
  '/learning_need_out_comes/{id}':
    get:
      operationId: getLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LearningNeedOutCome resource.'
      description: 'Retrieves a LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
          links:
            GetLearningNeedOutComeItem:
              operationId: getLearningNeedOutComeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_need_out_comes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LearningNeedOutCome resource.'
      description: 'Replaces the LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeedOutCome resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
        required: true
      deprecated: false
    delete:
      operationId: deleteLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        204:
          description: 'LearningNeedOutCome resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LearningNeedOutCome resource.'
      description: 'Removes the LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome'
          links:
            GetLearningNeedOutComeItem:
              operationId: getLearningNeedOutComeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_need_out_comes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the LearningNeedOutCome resource.'
      description: 'Updates the LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeedOutCome resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome'
        required: true
      deprecated: false
    parameters: []
  /learning_needs:
    get:
      operationId: getLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        201:
          description: 'LearningNeed resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LearningNeed resource.'
      description: 'Creates a LearningNeed resource.'
      parameters: []
      requestBody:
        description: 'The new LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed'
        required: true
      deprecated: false
    parameters: []
  '/learning_needs/{id}':
    get:
      operationId: get_learning_needLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    put:
      operationId: putLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LearningNeed resource.'
      description: 'Replaces the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed'
        required: true
      deprecated: false
    delete:
      operationId: deleteLearningNeedItem
      tags:
        - LearningNeed
      responses:
        204:
          description: 'LearningNeed resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LearningNeed resource.'
      description: 'Removes the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the LearningNeed resource.'
      description: 'Updates the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed'
        required: true
      deprecated: false
    parameters: []
  '/learning_needs/{id}/delete':
    get:
      operationId: delete_learning_needLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    parameters: []
  /organizations:
    get:
      operationId: getOrganizationCollection
      tags:
        - Organization
      responses:
        200:
          description: 'Organization collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
      summary: 'Retrieves the collection of Organization resources.'
      description: 'Retrieves the collection of Organization resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postOrganizationCollection
      tags:
        - Organization
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Organization resource.'
      description: 'Creates a Organization resource.'
      parameters: []
      requestBody:
        description: 'The new Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      deprecated: false
    parameters: []
  '/organizations/{id}':
    get:
      operationId: getOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Organization resource.'
      description: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      deprecated: false
    delete:
      operationId: deleteOrganizationItem
      tags:
        - Organization
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Organization resource.'
      description: 'Removes the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Organization resource.'
      description: 'Updates the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      deprecated: false
    parameters: []
  /participations:
    get:
      operationId: getParticipationCollection
      tags:
        - Participation
      responses:
        200:
          description: 'Participation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
      summary: 'Retrieves the collection of Participation resources.'
      description: 'Retrieves the collection of Participation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: learningNeedId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'learningNeedId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation'
        required: true
      deprecated: false
    parameters: []
  '/participations/{id}':
    get:
      operationId: getParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Participation resource.'
      description: 'Retrieves a Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Participation resource.'
      description: 'Replaces the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation'
        required: true
      deprecated: false
    delete:
      operationId: deleteParticipationItem
      tags:
        - Participation
      responses:
        204:
          description: 'Participation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Participation resource.'
      description: 'Removes the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Participation resource.'
      description: 'Updates the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation'
        required: true
      deprecated: false
    parameters: []
  /people:
    get:
      operationId: getPersonCollection
      tags:
        - Person
      responses:
        200:
          description: 'Person collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
      summary: 'Retrieves the collection of Person resources.'
      description: 'Retrieves the collection of Person resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postPersonCollection
      tags:
        - Person
      responses:
        201:
          description: 'Person resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person'
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
            text/html:
              schema:
                $ref: '#/components/schemas/Person'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person'
          links:
            GetPersonItem:
              operationId: getPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Person resource.'
      description: 'Creates a Person resource.'
      parameters: []
      requestBody:
        description: 'The new Person resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person'
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person'
          text/html:
            schema:
              $ref: '#/components/schemas/Person'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      deprecated: false
    parameters: []
  '/people/{id}':
    get:
      operationId: getPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person'
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
            text/html:
              schema:
                $ref: '#/components/schemas/Person'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person'
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
            text/html:
              schema:
                $ref: '#/components/schemas/Person'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person'
          links:
            GetPersonItem:
              operationId: getPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Person resource.'
      description: 'Replaces the Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Person resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person'
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person'
          text/html:
            schema:
              $ref: '#/components/schemas/Person'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      deprecated: false
    delete:
      operationId: deletePersonItem
      tags:
        - Person
      responses:
        204:
          description: 'Person resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Person resource.'
      description: 'Removes the Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person'
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
            text/html:
              schema:
                $ref: '#/components/schemas/Person'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person'
          links:
            GetPersonItem:
              operationId: getPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Person resource.'
      description: 'Updates the Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Person resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Person'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person'
          text/html:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      deprecated: false
    parameters: []
  /registrations:
    get:
      operationId: getRegistrationCollection
      tags:
        - Registration
      responses:
        200:
          description: 'Registration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
      summary: 'Retrieves the collection of Registration resources.'
      description: 'Retrieves the collection of Registration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: languageHouseId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'languageHouseId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postRegistrationCollection
      tags:
        - Registration
      responses:
        201:
          description: 'Registration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Registration resource.'
      description: 'Creates a Registration resource.'
      parameters: []
      requestBody:
        description: 'The new Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      deprecated: false
    parameters: []
  '/registrations/{id}':
    get:
      operationId: getRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Registration resource.'
      description: 'Replaces the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      deprecated: false
    delete:
      operationId: deleteRegistrationItem
      tags:
        - Registration
      responses:
        204:
          description: 'Registration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Registration resource.'
      description: 'Removes the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Registration resource.'
      description: 'Updates the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      deprecated: false
    parameters: []
  /reports:
    get:
      operationId: getReportCollection
      tags:
        - Report
      responses:
        200:
          description: 'Report collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
      summary: 'Retrieves the collection of Report resources.'
      description: 'Retrieves the collection of Report resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report'
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report'
            text/html:
              schema:
                $ref: '#/components/schemas/Report'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Report resource.'
      description: 'Creates a Report resource.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report'
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report'
          text/html:
            schema:
              $ref: '#/components/schemas/Report'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      deprecated: false
    parameters: []
  '/reports/{id}':
    get:
      operationId: getReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report'
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report'
            text/html:
              schema:
                $ref: '#/components/schemas/Report'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Report resource.'
      description: 'Retrieves a Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report'
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report'
            text/html:
              schema:
                $ref: '#/components/schemas/Report'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Report resource.'
      description: 'Replaces the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report'
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report'
          text/html:
            schema:
              $ref: '#/components/schemas/Report'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      deprecated: false
    delete:
      operationId: deleteReportItem
      tags:
        - Report
      responses:
        204:
          description: 'Report resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Report resource.'
      description: 'Removes the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report'
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report'
            text/html:
              schema:
                $ref: '#/components/schemas/Report'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Report resource.'
      description: 'Updates the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Report'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Report'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report'
          text/html:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      deprecated: false
    parameters: []
  /student_availabilities:
    get:
      operationId: getStudentAvailabilityCollection
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability'
      summary: 'Retrieves the collection of StudentAvailability resources.'
      description: 'Retrieves the collection of StudentAvailability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentAvailabilityCollection
      tags:
        - StudentAvailability
      responses:
        201:
          description: 'StudentAvailability resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentAvailability resource.'
      description: 'Creates a StudentAvailability resource.'
      parameters: []
      requestBody:
        description: 'The new StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
        required: true
      deprecated: false
    parameters: []
  '/student_availabilities/{id}':
    get:
      operationId: getStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentAvailability resource.'
      description: 'Replaces the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        204:
          description: 'StudentAvailability resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentAvailability resource.'
      description: 'Removes the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentAvailability resource.'
      description: 'Updates the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability'
        required: true
      deprecated: false
    parameters: []
  /student_backgrounds:
    get:
      operationId: getStudentBackgroundCollection
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground'
      summary: 'Retrieves the collection of StudentBackground resources.'
      description: 'Retrieves the collection of StudentBackground resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentBackgroundCollection
      tags:
        - StudentBackground
      responses:
        201:
          description: 'StudentBackground resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentBackground resource.'
      description: 'Creates a StudentBackground resource.'
      parameters: []
      requestBody:
        description: 'The new StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentBackground'
        required: true
      deprecated: false
    parameters: []
  '/student_backgrounds/{id}':
    get:
      operationId: getStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentBackground resource.'
      description: 'Retrieves a StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentBackground resource.'
      description: 'Replaces the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentBackground'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        204:
          description: 'StudentBackground resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentBackground resource.'
      description: 'Removes the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentBackground resource.'
      description: 'Updates the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground'
        required: true
      deprecated: false
    parameters: []
  /student_civic_integrations:
    get:
      operationId: getStudentCivicIntegrationCollection
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration'
      summary: 'Retrieves the collection of StudentCivicIntegration resources.'
      description: 'Retrieves the collection of StudentCivicIntegration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCivicIntegrationCollection
      tags:
        - StudentCivicIntegration
      responses:
        201:
          description: 'StudentCivicIntegration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentCivicIntegration resource.'
      description: 'Creates a StudentCivicIntegration resource.'
      parameters: []
      requestBody:
        description: 'The new StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
        required: true
      deprecated: false
    parameters: []
  '/student_civic_integrations/{id}':
    get:
      operationId: getStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCivicIntegration resource.'
      description: 'Retrieves a StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentCivicIntegration resource.'
      description: 'Replaces the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        204:
          description: 'StudentCivicIntegration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentCivicIntegration resource.'
      description: 'Removes the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentCivicIntegration resource.'
      description: 'Updates the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration'
        required: true
      deprecated: false
    parameters: []
  /student_courses:
    get:
      operationId: getStudentCourseCollection
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse'
      summary: 'Retrieves the collection of StudentCourse resources.'
      description: 'Retrieves the collection of StudentCourse resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCourseCollection
      tags:
        - StudentCourse
      responses:
        201:
          description: 'StudentCourse resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentCourse resource.'
      description: 'Creates a StudentCourse resource.'
      parameters: []
      requestBody:
        description: 'The new StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCourse'
        required: true
      deprecated: false
    parameters: []
  '/student_courses/{id}':
    get:
      operationId: getStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCourse resource.'
      description: 'Retrieves a StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentCourse resource.'
      description: 'Replaces the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCourse'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentCourseItem
      tags:
        - StudentCourse
      responses:
        204:
          description: 'StudentCourse resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentCourse resource.'
      description: 'Removes the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentCourse resource.'
      description: 'Updates the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse'
        required: true
      deprecated: false
    parameters: []
  /student_dossier_events:
    get:
      operationId: getStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent'
      summary: 'Retrieves the collection of StudentDossierEvent resources.'
      description: 'Retrieves the collection of StudentDossierEvent resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        201:
          description: 'StudentDossierEvent resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentDossierEvent resource.'
      description: 'Creates a StudentDossierEvent resource.'
      parameters: []
      requestBody:
        description: 'The new StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
        required: true
      deprecated: false
    parameters: []
  '/student_dossier_events/{id}':
    get:
      operationId: getStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDossierEvent resource.'
      description: 'Retrieves a StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentDossierEvent resource.'
      description: 'Replaces the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        204:
          description: 'StudentDossierEvent resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentDossierEvent resource.'
      description: 'Removes the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentDossierEvent resource.'
      description: 'Updates the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent'
        required: true
      deprecated: false
    parameters: []
  /student_dutch_n_ts:
    get:
      operationId: getStudentDutchNTCollection
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT'
      summary: 'Retrieves the collection of StudentDutchNT resources.'
      description: 'Retrieves the collection of StudentDutchNT resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentDutchNTCollection
      tags:
        - StudentDutchNT
      responses:
        201:
          description: 'StudentDutchNT resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentDutchNT resource.'
      description: 'Creates a StudentDutchNT resource.'
      parameters: []
      requestBody:
        description: 'The new StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
        required: true
      deprecated: false
    parameters: []
  '/student_dutch_n_ts/{id}':
    get:
      operationId: getStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDutchNT resource.'
      description: 'Retrieves a StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentDutchNT resource.'
      description: 'Replaces the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        204:
          description: 'StudentDutchNT resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentDutchNT resource.'
      description: 'Removes the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentDutchNT resource.'
      description: 'Updates the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT'
        required: true
      deprecated: false
    parameters: []
  /student_educations:
    get:
      operationId: getStudentEducationCollection
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation'
      summary: 'Retrieves the collection of StudentEducation resources.'
      description: 'Retrieves the collection of StudentEducation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentEducationCollection
      tags:
        - StudentEducation
      responses:
        201:
          description: 'StudentEducation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentEducation resource.'
      description: 'Creates a StudentEducation resource.'
      parameters: []
      requestBody:
        description: 'The new StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentEducation'
        required: true
      deprecated: false
    parameters: []
  '/student_educations/{id}':
    get:
      operationId: getStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentEducation resource.'
      description: 'Retrieves a StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentEducation resource.'
      description: 'Replaces the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentEducation'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentEducationItem
      tags:
        - StudentEducation
      responses:
        204:
          description: 'StudentEducation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentEducation resource.'
      description: 'Removes the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentEducation resource.'
      description: 'Updates the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation'
        required: true
      deprecated: false
    parameters: []
  /student_generals:
    get:
      operationId: getStudentGeneralCollection
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral'
      summary: 'Retrieves the collection of StudentGeneral resources.'
      description: 'Retrieves the collection of StudentGeneral resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentGeneralCollection
      tags:
        - StudentGeneral
      responses:
        201:
          description: 'StudentGeneral resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentGeneral resource.'
      description: 'Creates a StudentGeneral resource.'
      parameters: []
      requestBody:
        description: 'The new StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
        required: true
      deprecated: false
    parameters: []
  '/student_generals/{id}':
    get:
      operationId: getStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentGeneral resource.'
      description: 'Retrieves a StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentGeneral resource.'
      description: 'Replaces the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        204:
          description: 'StudentGeneral resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentGeneral resource.'
      description: 'Removes the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentGeneral resource.'
      description: 'Updates the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral'
        required: true
      deprecated: false
    parameters: []
  /student_jobs:
    get:
      operationId: getStudentJobCollection
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob'
      summary: 'Retrieves the collection of StudentJob resources.'
      description: 'Retrieves the collection of StudentJob resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentJobCollection
      tags:
        - StudentJob
      responses:
        201:
          description: 'StudentJob resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentJob resource.'
      description: 'Creates a StudentJob resource.'
      parameters: []
      requestBody:
        description: 'The new StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentJob'
        required: true
      deprecated: false
    parameters: []
  '/student_jobs/{id}':
    get:
      operationId: getStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentJob resource.'
      description: 'Retrieves a StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentJob resource.'
      description: 'Replaces the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentJob'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentJobItem
      tags:
        - StudentJob
      responses:
        204:
          description: 'StudentJob resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentJob resource.'
      description: 'Removes the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentJob resource.'
      description: 'Updates the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentJob'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob'
        required: true
      deprecated: false
    parameters: []
  /student_motivations:
    get:
      operationId: getStudentMotivationCollection
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation'
      summary: 'Retrieves the collection of StudentMotivation resources.'
      description: 'Retrieves the collection of StudentMotivation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentMotivationCollection
      tags:
        - StudentMotivation
      responses:
        201:
          description: 'StudentMotivation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentMotivation resource.'
      description: 'Creates a StudentMotivation resource.'
      parameters: []
      requestBody:
        description: 'The new StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
        required: true
      deprecated: false
    parameters: []
  '/student_motivations/{id}':
    get:
      operationId: getStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentMotivation resource.'
      description: 'Retrieves a StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentMotivation resource.'
      description: 'Replaces the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        204:
          description: 'StudentMotivation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentMotivation resource.'
      description: 'Removes the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentMotivation resource.'
      description: 'Updates the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation'
        required: true
      deprecated: false
    parameters: []
  /student_permissions:
    get:
      operationId: getStudentPermissionCollection
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission'
      summary: 'Retrieves the collection of StudentPermission resources.'
      description: 'Retrieves the collection of StudentPermission resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentPermissionCollection
      tags:
        - StudentPermission
      responses:
        201:
          description: 'StudentPermission resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentPermission resource.'
      description: 'Creates a StudentPermission resource.'
      parameters: []
      requestBody:
        description: 'The new StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPermission'
        required: true
      deprecated: false
    parameters: []
  '/student_permissions/{id}':
    get:
      operationId: getStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentPermission resource.'
      description: 'Retrieves a StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentPermission resource.'
      description: 'Replaces the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPermission'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        204:
          description: 'StudentPermission resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentPermission resource.'
      description: 'Removes the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentPermission resource.'
      description: 'Updates the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission'
        required: true
      deprecated: false
    parameters: []
  /student_referrers:
    get:
      operationId: getStudentReferrerCollection
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer'
      summary: 'Retrieves the collection of StudentReferrer resources.'
      description: 'Retrieves the collection of StudentReferrer resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentReferrerCollection
      tags:
        - StudentReferrer
      responses:
        201:
          description: 'StudentReferrer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentReferrer resource.'
      description: 'Creates a StudentReferrer resource.'
      parameters: []
      requestBody:
        description: 'The new StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
        required: true
      deprecated: false
    parameters: []
  '/student_referrers/{id}':
    get:
      operationId: getStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentReferrer resource.'
      description: 'Retrieves a StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentReferrer resource.'
      description: 'Replaces the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        204:
          description: 'StudentReferrer resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentReferrer resource.'
      description: 'Removes the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentReferrer resource.'
      description: 'Updates the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer'
        required: true
      deprecated: false
    parameters: []
  /students:
    get:
      operationId: getStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
      summary: 'Retrieves the collection of Student resources.'
      description: 'Retrieves the collection of Student resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: languageHouseId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'languageHouseId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: providerId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'providerId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: groupId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'groupId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: providerEmployeeId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'providerEmployeeId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCollection
      tags:
        - Student
      responses:
        201:
          description: 'Student resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Student resource.'
      description: 'Creates a Student resource.'
      parameters: []
      requestBody:
        description: 'The new Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student'
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student'
          text/html:
            schema:
              $ref: '#/components/schemas/Student'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      deprecated: false
    parameters: []
  '/students/{id}':
    get:
      operationId: getStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Student resource.'
      description: 'Replaces the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student'
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student'
          text/html:
            schema:
              $ref: '#/components/schemas/Student'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentItem
      tags:
        - Student
      responses:
        204:
          description: 'Student resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Student resource.'
      description: 'Removes the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Student resource.'
      description: 'Updates the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Student'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student'
          text/html:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      deprecated: false
    parameters: []
  /telephones:
    get:
      operationId: getTelephoneCollection
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone'
      summary: 'Retrieves the collection of Telephone resources.'
      description: 'Retrieves the collection of Telephone resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postTelephoneCollection
      tags:
        - Telephone
      responses:
        201:
          description: 'Telephone resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone'
          links:
            GetTelephoneItem:
              operationId: getTelephoneItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Telephone resource.'
      description: 'Creates a Telephone resource.'
      parameters: []
      requestBody:
        description: 'The new Telephone resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Telephone'
        required: true
      deprecated: false
    parameters: []
  '/telephones/{id}':
    get:
      operationId: getTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Telephone resource.'
      description: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone'
          links:
            GetTelephoneItem:
              operationId: getTelephoneItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Telephone resource.'
      description: 'Replaces the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Telephone resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Telephone'
        required: true
      deprecated: false
    delete:
      operationId: deleteTelephoneItem
      tags:
        - Telephone
      responses:
        204:
          description: 'Telephone resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Telephone resource.'
      description: 'Removes the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone'
          links:
            GetTelephoneItem:
              operationId: getTelephoneItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Telephone resource.'
      description: 'Updates the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Telephone resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Telephone'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone'
        required: true
      deprecated: false
    parameters: []
  /test_results:
    get:
      operationId: getTestResultCollection
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult'
      summary: 'Retrieves the collection of TestResult resources.'
      description: 'Retrieves the collection of TestResult resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: participationId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'participationId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postTestResultCollection
      tags:
        - TestResult
      responses:
        201:
          description: 'TestResult resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a TestResult resource.'
      description: 'Creates a TestResult resource.'
      parameters: []
      requestBody:
        description: 'The new TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult'
        required: true
      deprecated: false
    parameters: []
  '/test_results/{id}':
    get:
      operationId: getTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a TestResult resource.'
      description: 'Retrieves a TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the TestResult resource.'
      description: 'Replaces the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult'
        required: true
      deprecated: false
    delete:
      operationId: deleteTestResultItem
      tags:
        - TestResult
      responses:
        204:
          description: 'TestResult resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the TestResult resource.'
      description: 'Removes the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the TestResult resource.'
      description: 'Updates the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/TestResult'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult'
        required: true
      deprecated: false
    parameters: []
  /users:
    get:
      operationId: getUserCollection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  '/users/{id}':
    get:
      operationId: getUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the User resource.'
      description: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteUserItem
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the User resource.'
      description: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
components:
  schemas:
    Address:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    Address-read:
      type: object
      description: ''
      properties:
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    Address-write:
      type: object
      description: ''
      properties:
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    Address.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    Address.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    Address.jsonld-write:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Availability:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        monday:
          type: string
          format: iri-reference
        tuesday:
          type: string
          format: iri-reference
        wednesday:
          type: string
          format: iri-reference
        thursday:
          type: string
          format: iri-reference
        friday:
          type: string
          format: iri-reference
        saturday:
          type: string
          format: iri-reference
        sunday:
          type: string
          format: iri-reference
    Availability.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        monday:
          type: string
          format: iri-reference
        tuesday:
          type: string
          format: iri-reference
        wednesday:
          type: string
          format: iri-reference
        thursday:
          type: string
          format: iri-reference
        friday:
          type: string
          format: iri-reference
        saturday:
          type: string
          format: iri-reference
        sunday:
          type: string
          format: iri-reference
    AvailabilityDay:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        morning:
          type: boolean
        afternoon:
          type: boolean
        evening:
          type: boolean
    AvailabilityDay.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        morning:
          type: boolean
        afternoon:
          type: boolean
        evening:
          type: boolean
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Document:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this document.'
          type: string
        base64:
          description: 'Base64 of this document.'
          type: string
        studentId:
          maxLength: 255
          description: 'Student id of this document'
          type: string
          nullable: true
        aanbiederEmployeeId:
          maxLength: 255
          description: 'Aanbieder employee id of this document'
          type: string
          nullable: true
    Document.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this document.'
          type: string
        base64:
          description: 'Base64 of this document.'
          type: string
        studentId:
          maxLength: 255
          description: 'Student id of this document'
          type: string
          nullable: true
        aanbiederEmployeeId:
          maxLength: 255
          description: 'Aanbieder employee id of this document'
          type: string
          nullable: true
    Education:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        startDate:
          description: |-
            Start date of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          format: date-time
          nullable: true
        enddate:
          description: |-
            End date of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: |-
            Start date of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          description: |-
            Isced education level code of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          description: |-
            Degree granted status of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
    Education.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        startDate:
          description: |-
            Start date of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          format: date-time
          nullable: true
        enddate:
          description: |-
            End date of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: |-
            Start date of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          description: |-
            Isced education level code of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          description: |-
            Degree granted status of this education.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
    Email:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this email'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
    Email-read:
      type: object
      description: ''
      properties:
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
    Email-write:
      type: object
      description: ''
      properties:
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
    Email.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this email'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
    Email.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
    Email.jsonld-write:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
    Employee:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        person:
          description: 'Person of this employee'
          type: string
          format: iri-reference
        addresses:
          description: 'Address of this employee'
          type: string
          format: iri-reference
          nullable: true
        telephones:
          description: 'Telephone of this employee'
          type: string
          format: iri-reference
          nullable: true
        emails:
          description: 'Email of this employee'
          type: string
          format: iri-reference
          nullable: true
        contactTelephone:
          maxLength: 255
          description: 'Contact telephone of this Employee.'
          type: string
          nullable: true
        contactPreference:
          description: 'Contact Preference of this Employee.**PHONECALL**, **WHATSAPP**, **EMAIL**, **OTHER**'
          type: string
          nullable: true
        contactPreferenceOther:
          type: string
          nullable: true
        availability:
          description: 'The availability for this employee'
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        targetGroupPreferences:
          description: 'Target Preference of this Employee. **NT1**, **NT2**'
          type: array
          items:
            type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: |-
            Volunteering Preference of this Employee.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        gotHereVia:
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          type: boolean
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'Shouldn''t this be a string to provide the reason for the experience with the target group?'
          type: boolean
          nullable: true
        currentEducation:
          type: string
          nullable: true
        currentEducationYes:
          type: array
          items:
            type: string
          nullable: true
        currentEducationNoButDidFollow:
          type: array
          items:
            type: string
          nullable: true
        doesCurrentlyFollowCourse:
          type: boolean
          nullable: true
        currentlyFollowingCourseName:
          type: string
          nullable: true
        currentlyFollowingCourseInstitute:
          type: string
          nullable: true
        currentlyFollowingCourseTeacherProfessionalism:
          type: string
          nullable: true
        currentlyFollowingCourseCourseProfessionalism:
          type: string
          nullable: true
        doesCurrentlyFollowingCourseProvideCertificate:
          type: boolean
          nullable: true
        otherRelevantCertificates:
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        organization:
          description: 'Organization of this person'
          type: string
          format: iri-reference
          nullable: true
        biscEmployeeId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        userRoles:
          description: 'The user roles of this employee'
          type: array
          items:
            type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        userGroupIds:
          type: array
          items:
            type: string
          nullable: true
    Employee.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        person:
          description: 'Person of this employee'
          type: string
          format: iri-reference
        addresses:
          description: 'Address of this employee'
          type: string
          format: iri-reference
          nullable: true
        telephones:
          description: 'Telephone of this employee'
          type: string
          format: iri-reference
          nullable: true
        emails:
          description: 'Email of this employee'
          type: string
          format: iri-reference
          nullable: true
        contactTelephone:
          maxLength: 255
          description: 'Contact telephone of this Employee.'
          type: string
          nullable: true
        contactPreference:
          description: 'Contact Preference of this Employee.**PHONECALL**, **WHATSAPP**, **EMAIL**, **OTHER**'
          type: string
          nullable: true
        contactPreferenceOther:
          type: string
          nullable: true
        availability:
          description: 'The availability for this employee'
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        targetGroupPreferences:
          description: 'Target Preference of this Employee. **NT1**, **NT2**'
          type: array
          items:
            type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: |-
            Volunteering Preference of this Employee.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        gotHereVia:
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          type: boolean
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'Shouldn''t this be a string to provide the reason for the experience with the target group?'
          type: boolean
          nullable: true
        currentEducation:
          type: string
          nullable: true
        currentEducationYes:
          type: array
          items:
            type: string
          nullable: true
        currentEducationNoButDidFollow:
          type: array
          items:
            type: string
          nullable: true
        doesCurrentlyFollowCourse:
          type: boolean
          nullable: true
        currentlyFollowingCourseName:
          type: string
          nullable: true
        currentlyFollowingCourseInstitute:
          type: string
          nullable: true
        currentlyFollowingCourseTeacherProfessionalism:
          type: string
          nullable: true
        currentlyFollowingCourseCourseProfessionalism:
          type: string
          nullable: true
        doesCurrentlyFollowingCourseProvideCertificate:
          type: boolean
          nullable: true
        otherRelevantCertificates:
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        organization:
          description: 'Organization of this person'
          type: string
          format: iri-reference
          nullable: true
        biscEmployeeId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        userRoles:
          description: 'The user roles of this employee'
          type: array
          items:
            type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
        userGroupIds:
          type: array
          items:
            type: string
          nullable: true
    Group:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        aanbiederId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        typeCourse:
          type: string
          nullable: true
        learningNeedOutCome:
          type: string
          format: iri-reference
          nullable: true
        availability:
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
        generalLocation:
          type: string
          nullable: true
        generalParticipantsMin:
          type: integer
          nullable: true
        generalParticipantsMax:
          type: integer
          nullable: true
        generalEvaluation:
          type: string
          nullable: true
        aanbiederEmployeeIds:
          type: array
          items:
            type: string
          nullable: true
    Group.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        aanbiederId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        typeCourse:
          type: string
          nullable: true
        learningNeedOutCome:
          type: string
          format: iri-reference
          nullable: true
        availability:
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
        generalLocation:
          type: string
          nullable: true
        generalParticipantsMin:
          type: integer
          nullable: true
        generalParticipantsMax:
          type: integer
          nullable: true
        generalEvaluation:
          type: string
          nullable: true
        aanbiederEmployeeIds:
          type: array
          items:
            type: string
          nullable: true
    LearningNeed:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        learningNeedDescription:
          type: string
        learningNeedMotivation:
          type: string
        desiredOutComesGoal:
          type: string
        desiredOutComesTopic:
          type: string
        desiredOutComesTopicOther:
          type: string
          nullable: true
        desiredOutComesApplication:
          type: string
        desiredOutComesApplicationOther:
          type: string
          nullable: true
        desiredOutComesLevel:
          type: string
        desiredOutComesLevelOther:
          type: string
          nullable: true
        offerDesiredOffer:
          type: string
        offerAdvisedOffer:
          type: string
        offerDifference:
          type: string
        offerDifferenceOther:
          type: string
          nullable: true
        offerEngagements:
          type: string
          nullable: true
        participations:
          type: array
          items:
            type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        dateCreated:
          description: 'The dateCreated of a learningNeed, used for reports.'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    LearningNeed.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        learningNeedDescription:
          type: string
        learningNeedMotivation:
          type: string
        desiredOutComesGoal:
          type: string
        desiredOutComesTopic:
          type: string
        desiredOutComesTopicOther:
          type: string
          nullable: true
        desiredOutComesApplication:
          type: string
        desiredOutComesApplicationOther:
          type: string
          nullable: true
        desiredOutComesLevel:
          type: string
        desiredOutComesLevelOther:
          type: string
          nullable: true
        offerDesiredOffer:
          type: string
        offerAdvisedOffer:
          type: string
        offerDifference:
          type: string
        offerDifferenceOther:
          type: string
          nullable: true
        offerEngagements:
          type: string
          nullable: true
        participations:
          type: array
          items:
            type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        dateCreated:
          description: 'The dateCreated of a learningNeed, used for reports.'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    LearningNeedOutCome:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        goal:
          type: string
        topic:
          type: string
        topicOther:
          type: string
          nullable: true
        application:
          type: string
        applicationOther:
          type: string
          nullable: true
        level:
          type: string
        levelOther:
          type: string
          nullable: true
        isFormal:
          type: boolean
          nullable: true
        groupFormation:
          type: string
          nullable: true
        totalClassHours:
          type: number
          nullable: true
        certificateWillBeAwarded:
          type: boolean
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
    LearningNeedOutCome.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        goal:
          type: string
        topic:
          type: string
        topicOther:
          type: string
          nullable: true
        application:
          type: string
        applicationOther:
          type: string
          nullable: true
        level:
          type: string
        levelOther:
          type: string
          nullable: true
        isFormal:
          type: boolean
          nullable: true
        groupFormation:
          type: string
          nullable: true
        totalClassHours:
          type: number
          nullable: true
        certificateWillBeAwarded:
          type: boolean
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
    Organization:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this organization'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        telephones:
          description: 'Telephone of this organization'
          type: string
          format: iri-reference
          nullable: true
        emails:
          description: 'Email of this organization'
          type: string
          format: iri-reference
          nullable: true
        type:
          maxLength: 255
          description: 'Type of this organization'
          type: string
          nullable: true
        addresses:
          description: 'Address of this organization'
          type: string
          format: iri-reference
          nullable: true
      required:
        - name
    Organization-read:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-read'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-read'
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
    Organization-write:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-write'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-write'
        type:
          maxLength: 255
          description: 'Type of this organization'
          type: string
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
    Organization.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this organization'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        telephones:
          description: 'Telephone of this organization'
          type: string
          format: iri-reference
          nullable: true
        emails:
          description: 'Email of this organization'
          type: string
          format: iri-reference
          nullable: true
        type:
          maxLength: 255
          description: 'Type of this organization'
          type: string
          nullable: true
        addresses:
          description: 'Address of this organization'
          type: string
          format: iri-reference
          nullable: true
      required:
        - name
    Organization.jsonld-read:
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-read'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-read'
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
    Organization.jsonld-write:
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-write'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-write'
        type:
          maxLength: 255
          description: 'Type of this organization'
          type: string
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
    Participation:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        providerId:
          type: string
          nullable: true
        providerName:
          type: string
          nullable: true
        providerNote:
          type: string
          nullable: true
        offerName:
          type: string
          nullable: true
        offerCourse:
          type: string
          nullable: true
        learningNeedOutCome:
          type: string
          format: iri-reference
          nullable: true
        detailsEngagements:
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        presenceEngagements:
          type: string
          nullable: true
        presenceStartDate:
          type: string
          format: date-time
          nullable: true
        presenceEndDate:
          type: string
          format: date-time
          nullable: true
        presenceEndParticipationReason:
          type: string
          nullable: true
        providerEmployeeId:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true
    Participation.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        providerId:
          type: string
          nullable: true
        providerName:
          type: string
          nullable: true
        providerNote:
          type: string
          nullable: true
        offerName:
          type: string
          nullable: true
        offerCourse:
          type: string
          nullable: true
        learningNeedOutCome:
          type: string
          format: iri-reference
          nullable: true
        detailsEngagements:
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        presenceEngagements:
          type: string
          nullable: true
        presenceStartDate:
          type: string
          format: date-time
          nullable: true
        presenceEndDate:
          type: string
          format: date-time
          nullable: true
        presenceEndParticipationReason:
          type: string
          nullable: true
        providerEmployeeId:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true
    Person:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this telephone'
          type: string
          format: uuid
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        gender:
          description: 'Gender of this person'
          type: string
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          nullable: true
        addresses:
          description: 'Address of this person'
          type: string
          format: iri-reference
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: string
          format: iri-reference
          nullable: true
        emails:
          description: 'Email of this person'
          type: string
          format: iri-reference
          nullable: true
        organization:
          description: 'Organization of this person'
          type: string
          format: iri-reference
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
        contactPreferenceOther:
          description: 'The contact preference of the person for when the OTHER option is selected.'
          type: string
          nullable: true
    Person-read:
      type: object
      description: ''
      properties:
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        gender:
          description: 'Gender of this person'
          type: string
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        telephones:
          description: 'Telephone of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-read'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-read'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
    Person-write:
      type: object
      description: ''
      properties:
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        gender:
          description: 'Gender of this person'
          type: string
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        telephones:
          description: 'Telephone of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-write'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-write'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
    Person.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this telephone'
          type: string
          format: uuid
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        gender:
          description: 'Gender of this person'
          type: string
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          nullable: true
        addresses:
          description: 'Address of this person'
          type: string
          format: iri-reference
          nullable: true
        telephones:
          description: 'Telephone of this person'
          type: string
          format: iri-reference
          nullable: true
        emails:
          description: 'Email of this person'
          type: string
          format: iri-reference
          nullable: true
        organization:
          description: 'Organization of this person'
          type: string
          format: iri-reference
          nullable: true
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
        contactPreferenceOther:
          description: 'The contact preference of the person for when the OTHER option is selected.'
          type: string
          nullable: true
    Person.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        gender:
          description: 'Gender of this person'
          type: string
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
        telephones:
          description: 'Telephone of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-read'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-read'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-read'
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
    Person.jsonld-write:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
          nullable: true
        gender:
          description: 'Gender of this person'
          type: string
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
        telephones:
          description: 'Telephone of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-write'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-write'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-write'
        contactPreference:
          description: 'The contact preference of the person.'
          type: string
          nullable: true
    Registration:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        languageHouseId:
          type: string
          nullable: true
        student:
          type: string
          format: iri-reference
          nullable: true
        registrar:
          description: 'a contact catalogue person for the registrar, this person should have a organization with a name set.'
          type: string
          format: iri-reference
          nullable: true
        memo:
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        civicIntegrationDetails:
          type: array
          items:
            type: string
          nullable: true
        personDetails:
          type: array
          items:
            type: string
          nullable: true
        contactDetails:
          type: array
          items:
            type: string
          nullable: true
        generalDetails:
          type: array
          items:
            type: string
          nullable: true
        referrerDetails:
          type: array
          items:
            type: string
          nullable: true
        backgroundDetails:
          type: array
          items:
            type: string
          nullable: true
        dutchNTDetails:
          type: array
          items:
            type: string
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: array
          items:
            type: string
          nullable: true
        courseDetails:
          type: array
          items:
            type: string
          nullable: true
        jobDetails:
          type: array
          items:
            type: string
          nullable: true
        motivationDetails:
          type: array
          items:
            type: string
          nullable: true
        availabilityDetails:
          type: array
          items:
            type: string
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: array
          items:
            type: string
          nullable: true
        intakeDetail:
          readOnly: true
          type: string
          nullable: true
        intakeDetails:
          writeOnly: true
          type: string
          nullable: true
    Registration.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        languageHouseId:
          type: string
          nullable: true
        student:
          type: string
          format: iri-reference
          nullable: true
        registrar:
          description: 'a contact catalogue person for the registrar, this person should have a organization with a name set.'
          type: string
          format: iri-reference
          nullable: true
        memo:
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        civicIntegrationDetails:
          type: array
          items:
            type: string
          nullable: true
        personDetails:
          type: array
          items:
            type: string
          nullable: true
        contactDetails:
          type: array
          items:
            type: string
          nullable: true
        generalDetails:
          type: array
          items:
            type: string
          nullable: true
        referrerDetails:
          type: array
          items:
            type: string
          nullable: true
        backgroundDetails:
          type: array
          items:
            type: string
          nullable: true
        dutchNTDetails:
          type: array
          items:
            type: string
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: array
          items:
            type: string
          nullable: true
        courseDetails:
          type: array
          items:
            type: string
          nullable: true
        jobDetails:
          type: array
          items:
            type: string
          nullable: true
        motivationDetails:
          type: array
          items:
            type: string
          nullable: true
        availabilityDetails:
          type: array
          items:
            type: string
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: array
          items:
            type: string
          nullable: true
        intakeDetail:
          readOnly: true
          type: string
          nullable: true
        intakeDetails:
          writeOnly: true
          type: string
          nullable: true
    Report:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          description: 'The language house the report applies to'
          type: string
          nullable: true
        providerId:
          description: 'The provider this report applies to'
          type: string
          nullable: true
        dateFrom:
          type: string
          nullable: true
        dateUntil:
          type: string
          nullable: true
        filename:
          description: 'The filename of the report'
          type: string
          nullable: true
        base64:
          description: 'A base64 encoded string containing the file''s contents'
          type: string
          nullable: true
    Report.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          description: 'The language house the report applies to'
          type: string
          nullable: true
        providerId:
          description: 'The provider this report applies to'
          type: string
          nullable: true
        dateFrom:
          type: string
          nullable: true
        dateUntil:
          type: string
          nullable: true
        filename:
          description: 'The filename of the report'
          type: string
          nullable: true
        base64:
          description: 'A base64 encoded string containing the file''s contents'
          type: string
          nullable: true
    Student:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        registrar:
          description: 'a contact catalogue person for the registrar, this person should have a organization with a name set.'
          type: string
          format: iri-reference
          nullable: true
        civicIntegrationDetails:
          type: string
          format: iri-reference
          nullable: true
        person:
          description: 'a contact catalogue person for the student.'
          type: string
          format: iri-reference
          nullable: true
        generalDetails:
          type: string
          format: iri-reference
          nullable: true
        referrerDetails:
          type: string
          format: iri-reference
          nullable: true
        backgroundDetails:
          type: string
          format: iri-reference
          nullable: true
        dutchNTDetails:
          type: string
          format: iri-reference
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: string
          format: iri-reference
          nullable: true
        courseDetails:
          type: string
          format: iri-reference
          nullable: true
        jobDetails:
          type: string
          format: iri-reference
          nullable: true
        motivationDetails:
          type: string
          format: iri-reference
          nullable: true
        availabilityDetails:
          type: string
          format: iri-reference
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: string
          format: iri-reference
          nullable: true
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse.'
          type: string
          nullable: true
        providerId:
          description: 'The id of the cc/organization of a provider.'
          type: string
          nullable: true
        groupId:
          description: 'The id of the edu/group of a group.'
          type: string
          nullable: true
        providerEmployeeId:
          description: 'The id of the mrc/employee of a mentor.'
          type: string
          nullable: true
    Student.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        registrar:
          description: 'a contact catalogue person for the registrar, this person should have a organization with a name set.'
          type: string
          format: iri-reference
          nullable: true
        civicIntegrationDetails:
          type: string
          format: iri-reference
          nullable: true
        person:
          description: 'a contact catalogue person for the student.'
          type: string
          format: iri-reference
          nullable: true
        generalDetails:
          type: string
          format: iri-reference
          nullable: true
        referrerDetails:
          type: string
          format: iri-reference
          nullable: true
        backgroundDetails:
          type: string
          format: iri-reference
          nullable: true
        dutchNTDetails:
          type: string
          format: iri-reference
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: string
          format: iri-reference
          nullable: true
        courseDetails:
          type: string
          format: iri-reference
          nullable: true
        jobDetails:
          type: string
          format: iri-reference
          nullable: true
        motivationDetails:
          type: string
          format: iri-reference
          nullable: true
        availabilityDetails:
          type: string
          format: iri-reference
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: string
          format: iri-reference
          nullable: true
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse.'
          type: string
          nullable: true
        providerId:
          description: 'The id of the cc/organization of a provider.'
          type: string
          nullable: true
        groupId:
          description: 'The id of the edu/group of a group.'
          type: string
          nullable: true
        providerEmployeeId:
          description: 'The id of the mrc/employee of a mentor.'
          type: string
          nullable: true
    StudentAvailability:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          type: string
          format: iri-reference
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
    StudentAvailability.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          type: string
          format: iri-reference
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
    StudentBackground:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          nullable: true
        foundViaOther:
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
          nullable: true
        participationLadder:
          type: integer
          nullable: true
    StudentBackground.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          nullable: true
        foundViaOther:
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
          nullable: true
        participationLadder:
          type: integer
          nullable: true
    StudentCivicIntegration:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          nullable: true
        civivIntegrationRequirementFinishDate:
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          nullable: true
        civivIntegrationRequirementFinishDate:
          type: string
          format: date-time
          nullable: true
    StudentCourse:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          type: boolean
          nullable: true
        courseName:
          type: string
          nullable: true
        courseTeacher:
          type: string
          nullable: true
        courseGroup:
          type: string
          nullable: true
        amountOfHours:
          type: integer
          nullable: true
        doesCourseProvideCertificate:
          type: boolean
          nullable: true
    StudentCourse.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          type: boolean
          nullable: true
        courseName:
          type: string
          nullable: true
        courseTeacher:
          type: string
          nullable: true
        courseGroup:
          type: string
          nullable: true
        amountOfHours:
          type: integer
          nullable: true
        doesCourseProvideCertificate:
          type: boolean
          nullable: true
    StudentDossierEvent:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          description: 'The Event of this Student.'
          type: string
        eventDate:
          description: 'date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'description of this student Dossier.'
          type: string
        studentId:
          description: 'studentId of this student Dossier.'
          type: string
        creatorGivenName:
          description: 'creator of this student Dossier.'
          type: string
          nullable: true
        employeeId:
          description: 'employeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDossierEvent.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          description: 'The Event of this Student.'
          type: string
        eventDate:
          description: 'date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'description of this student Dossier.'
          type: string
        studentId:
          description: 'studentId of this student Dossier.'
          type: string
        creatorGivenName:
          description: 'creator of this student Dossier.'
          type: string
          nullable: true
        employeeId:
          description: 'employeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDutchNT:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          nullable: true
        inNetherlandsSinceYear:
          type: number
          nullable: true
        languageInDailyLife:
          type: string
          nullable: true
        knowsLatinAlphabet:
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          nullable: true
    StudentDutchNT.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          nullable: true
        inNetherlandsSinceYear:
          type: number
          nullable: true
        languageInDailyLife:
          type: string
          nullable: true
        knowsLatinAlphabet:
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          nullable: true
    StudentEducation:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        lastFollowedEducation:
          type: string
          nullable: true
        didGraduate:
          type: boolean
          nullable: true
        followingEducationRightNow:
          type: string
          nullable: true
        followingEducationRightNowYesStartDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesLevel:
          type: string
          nullable: true
        followingEducationRightNowYesInstitute:
          type: string
          nullable: true
        followingEducationRightNowYesProvidesCertificate:
          type: boolean
          nullable: true
        followingEducationRightNowNoEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowNoLevel:
          type: string
          nullable: true
        followingEducationRightNowNoGotCertificate:
          type: boolean
          nullable: true
    StudentEducation.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        lastFollowedEducation:
          type: string
          nullable: true
        didGraduate:
          type: boolean
          nullable: true
        followingEducationRightNow:
          type: string
          nullable: true
        followingEducationRightNowYesStartDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesLevel:
          type: string
          nullable: true
        followingEducationRightNowYesInstitute:
          type: string
          nullable: true
        followingEducationRightNowYesProvidesCertificate:
          type: boolean
          nullable: true
        followingEducationRightNowNoEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowNoLevel:
          type: string
          nullable: true
        followingEducationRightNowNoGotCertificate:
          type: boolean
          nullable: true
    StudentGeneral:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          type: string
          nullable: true
        nativeLanguage:
          type: string
          nullable: true
        otherLanguages:
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
          nullable: true
        childrenCount:
          type: integer
          nullable: true
        childrenDatesOfBirth:
          type: string
          nullable: true
    StudentGeneral.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          type: string
          nullable: true
        nativeLanguage:
          type: string
          nullable: true
        otherLanguages:
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
          nullable: true
        childrenCount:
          type: integer
          nullable: true
        childrenDatesOfBirth:
          type: string
          nullable: true
    StudentJob:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          type: string
          nullable: true
        lastJob:
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
          nullable: true
        dayTimeActivitiesOther:
          type: string
          nullable: true
    StudentJob.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          type: string
          nullable: true
        lastJob:
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
          nullable: true
        dayTimeActivitiesOther:
          type: string
          nullable: true
    StudentMotivation:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
          nullable: true
        desiredSkillsOther:
          type: string
          nullable: true
        hasTriedThisBefore:
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          type: string
          nullable: true
        whyWantTheseSkills:
          type: string
          nullable: true
        whyWantThisNow:
          type: string
          nullable: true
        desiredLearingMethod:
          type: array
          items:
            type: string
          nullable: true
        remarks:
          type: string
          nullable: true
    StudentMotivation.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
          nullable: true
        desiredSkillsOther:
          type: string
          nullable: true
        hasTriedThisBefore:
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          type: string
          nullable: true
        whyWantTheseSkills:
          type: string
          nullable: true
        whyWantThisNow:
          type: string
          nullable: true
        desiredLearingMethod:
          type: array
          items:
            type: string
          nullable: true
        remarks:
          type: string
          nullable: true
    StudentPermission:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          type: boolean
        hasPermissionToShareDataWithAanbieders:
          type: boolean
        hasPermissionToShareDataWithLibraries:
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          type: boolean
    StudentPermission.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          type: boolean
        hasPermissionToShareDataWithAanbieders:
          type: boolean
        hasPermissionToShareDataWithLibraries:
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          type: boolean
    StudentReferrer:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          nullable: true
        referringOrganizationOther:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    StudentReferrer.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          nullable: true
        referringOrganizationOther:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    Telephone:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this telephone'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number'
          type: string
    Telephone-read:
      type: object
      description: ''
      properties:
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number'
          type: string
    Telephone-write:
      type: object
      description: ''
      properties:
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number'
          type: string
    Telephone.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this telephone'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number'
          type: string
    Telephone.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number'
          type: string
    Telephone.jsonld-write:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this telephone'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number'
          type: string
    TestResult:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          type: string
        learningNeedOutCome:
          type: string
          format: iri-reference
          nullable: true
        usedExam:
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
        examMemo:
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
    TestResult.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          type: string
        learningNeedOutCome:
          type: string
          format: iri-reference
          nullable: true
        usedExam:
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
        examMemo:
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
    User-read:
      type: object
      description: ''
      properties:
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
          nullable: true
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        userEnvironment:
          maxLength: 2550
          description: 'The userEnvironment of this User.'
          type: string
          nullable: true
        organization:
          description: 'A contact component organization of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
    User-write:
      type: object
      description: ''
      properties:
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
          nullable: true
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        userEnvironment:
          maxLength: 2550
          description: 'The userEnvironment of this User.'
          type: string
          nullable: true
        organization:
          description: 'A contact component organization of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        password:
          maxLength: 2550
          description: 'The Password of this User.'
          type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
    User.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
          nullable: true
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        userEnvironment:
          maxLength: 2550
          description: 'The userEnvironment of this User.'
          type: string
          nullable: true
        organization:
          description: 'A contact component organization of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-read'
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
    User.jsonld-write:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
          nullable: true
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        userEnvironment:
          maxLength: 2550
          description: 'The userEnvironment of this User.'
          type: string
          nullable: true
        organization:
          description: 'A contact component organization of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-write'
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        password:
          maxLength: 2550
          description: 'The Password of this User.'
          type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
