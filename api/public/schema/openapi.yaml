openapi: 3.0.3
info:
  title: 'Taalhuizen Service'
  description: |-
    API Details
    - Component: Taalhuizen Service
    - Reference: taalhuizen-service
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/taalhuizen-service) / [zip](https://github.com/ConductionNL/taalhuizen-service/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/taalhuizen-service.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 

    &
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /addresses:
    get:
      operationId: getAddressCollection
      tags:
        - Address
      responses:
        200:
          description: 'Address collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address-read'
      summary: 'Retrieves the collection of Address resources.'
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAddressCollection
      tags:
        - Address
      responses:
        201:
          description: 'Address resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Address resource.'
      description: 'Creates a Address resource.'
      parameters: []
      requestBody:
        description: 'The new Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Address-write'
        required: true
      deprecated: false
    parameters: []
  '/addresses/{id}':
    get:
      operationId: getAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Address-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address-read'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Address resource.'
      description: 'Replaces the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Address-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Address-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAddressItem
      tags:
        - Address
      responses:
        204:
          description: 'Address resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Address resource.'
      description: 'Removes the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /availabilities:
    get:
      operationId: getAvailabilityCollection
      tags:
        - Availability
      responses:
        200:
          description: 'Availability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability-read'
      summary: 'Retrieves the collection of Availability resources.'
      description: 'Retrieves the collection of Availability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAvailabilityCollection
      tags:
        - Availability
      responses:
        201:
          description: 'Availability resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Availability resource.'
      description: 'Creates a Availability resource.'
      parameters: []
      requestBody:
        description: 'The new Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Availability.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Availability-write'
        required: true
      deprecated: false
    parameters: []
  '/availabilities/{id}':
    get:
      operationId: getAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability-read'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Availability resource.'
      description: 'Replaces the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Availability.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Availability-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAvailabilityItem
      tags:
        - Availability
      responses:
        204:
          description: 'Availability resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Availability resource.'
      description: 'Removes the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /availability_days:
    get:
      operationId: getAvailabilityDayCollection
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityDay-read'
      summary: 'Retrieves the collection of AvailabilityDay resources.'
      description: 'Retrieves the collection of AvailabilityDay resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAvailabilityDayCollection
      tags:
        - AvailabilityDay
      responses:
        201:
          description: 'AvailabilityDay resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AvailabilityDay resource.'
      description: 'Creates a AvailabilityDay resource.'
      parameters: []
      requestBody:
        description: 'The new AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
        required: true
      deprecated: false
    parameters: []
  '/availability_days/{id}':
    get:
      operationId: getAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AvailabilityDay resource.'
      description: 'Retrieves a AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay-read'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AvailabilityDay resource.'
      description: 'Replaces the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AvailabilityDay-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        204:
          description: 'AvailabilityDay resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AvailabilityDay resource.'
      description: 'Removes the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /documents:
    get:
      operationId: getDocumentCollection
      tags:
        - Document
      responses:
        200:
          description: 'Document collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document-read'
      summary: 'Retrieves the collection of Document resources.'
      description: 'Retrieves the collection of Document resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postDocumentCollection
      tags:
        - Document
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document-read'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Document resource.'
      description: 'Creates a Document resource.'
      parameters: []
      requestBody:
        description: 'The new Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document-write'
        required: true
      deprecated: false
    parameters: []
  '/documents/{id}':
    get:
      operationId: getDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Document resource.'
      description: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: deleteDocumentItem
      tags:
        - Document
      responses:
        204:
          description: 'Document resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Document resource.'
      description: 'Removes the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/documents/{uuid}/download':
    post:
      operationId: post_downloadDocumentCollection
      tags:
        - Document
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Document-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document-read'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Document resource.'
      description: 'Creates a Document resource.'
      parameters: []
      requestBody:
        description: 'The new Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document-write'
        required: true
      deprecated: false
    parameters: []
  /education:
    get:
      operationId: getEducationCollection
      tags:
        - Education
      responses:
        200:
          description: 'Education collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Education.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education-read'
      summary: 'Retrieves the collection of Education resources.'
      description: 'Retrieves the collection of Education resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEducationCollection
      tags:
        - Education
      responses:
        201:
          description: 'Education resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
          links:
            GetEducationItem:
              operationId: getEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Education resource.'
      description: 'Creates a Education resource.'
      parameters: []
      requestBody:
        description: 'The new Education resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Education-write'
        required: true
      deprecated: false
    parameters: []
  '/education/{id}':
    get:
      operationId: getEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Education resource.'
      description: 'Retrieves a Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEducationItem
      tags:
        - Education
      responses:
        200:
          description: 'Education resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Education.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Education-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Education-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Education-read'
          links:
            GetEducationItem:
              operationId: getEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Education resource.'
      description: 'Replaces the Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Education resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Education.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Education-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Education-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Education-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteEducationItem
      tags:
        - Education
      responses:
        204:
          description: 'Education resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Education resource.'
      description: 'Removes the Education resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /emails:
    get:
      operationId: getEmailCollection
      tags:
        - Email
      responses:
        200:
          description: 'Email collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Email.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email-read'
      summary: 'Retrieves the collection of Email resources.'
      description: 'Retrieves the collection of Email resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmailCollection
      tags:
        - Email
      responses:
        201:
          description: 'Email resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
          links:
            GetEmailItem:
              operationId: getEmailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Email resource.'
      description: 'Creates a Email resource.'
      parameters: []
      requestBody:
        description: 'The new Email resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Email-write'
        required: true
      deprecated: false
    parameters: []
  '/emails/{id}':
    get:
      operationId: getEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Email resource.'
      description: 'Retrieves a Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmailItem
      tags:
        - Email
      responses:
        200:
          description: 'Email resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Email.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Email-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Email-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Email-read'
          links:
            GetEmailItem:
              operationId: getEmailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /emails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Email resource.'
      description: 'Replaces the Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Email resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Email.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Email-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Email-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Email-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmailItem
      tags:
        - Email
      responses:
        204:
          description: 'Email resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Email resource.'
      description: 'Removes the Email resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /employees:
    get:
      operationId: getEmployeeCollection
      tags:
        - Employee
      responses:
        200:
          description: 'Employee collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee-read'
      summary: 'Retrieves the collection of Employee resources.'
      description: 'Retrieves the collection of Employee resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmployeeCollection
      tags:
        - Employee
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Employee resource.'
      description: 'Creates a Employee resource.'
      parameters: []
      requestBody:
        description: 'The new Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee-write'
        required: true
      deprecated: false
    parameters: []
  '/employees/{id}':
    get:
      operationId: getEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee-read'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Employee resource.'
      description: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmployeeItem
      tags:
        - Employee
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Employee resource.'
      description: 'Removes the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /groups:
    get:
      operationId: getGroupCollection
      tags:
        - Group
      responses:
        200:
          description: 'Group collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      summary: 'Retrieves the collection of Group resources.'
      description: 'Retrieves the collection of Group resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'startDate[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endDate[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postGroupCollection
      tags:
        - Group
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Group resource.'
      description: 'Creates a Group resource.'
      parameters: []
      requestBody:
        description: 'The new Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group-write'
        required: true
      deprecated: false
    parameters: []
  '/groups/{id}':
    get:
      operationId: getGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Group resource.'
      description: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteGroupItem
      tags:
        - Group
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Group resource.'
      description: 'Removes the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /learning_need_out_comes:
    get:
      operationId: getLearningNeedOutComeCollection
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeedOutCome-read'
      summary: 'Retrieves the collection of LearningNeedOutCome resources.'
      description: 'Retrieves the collection of LearningNeedOutCome resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postLearningNeedOutComeCollection
      tags:
        - LearningNeedOutCome
      responses:
        201:
          description: 'LearningNeedOutCome resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
          links:
            GetLearningNeedOutComeItem:
              operationId: getLearningNeedOutComeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_need_out_comes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LearningNeedOutCome resource.'
      description: 'Creates a LearningNeedOutCome resource.'
      parameters: []
      requestBody:
        description: 'The new LearningNeedOutCome resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        required: true
      deprecated: false
    parameters: []
  '/learning_need_out_comes/{id}':
    get:
      operationId: getLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LearningNeedOutCome resource.'
      description: 'Retrieves a LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        200:
          description: 'LearningNeedOutCome resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeedOutCome-read'
          links:
            GetLearningNeedOutComeItem:
              operationId: getLearningNeedOutComeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_need_out_comes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LearningNeedOutCome resource.'
      description: 'Replaces the LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeedOutCome resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteLearningNeedOutComeItem
      tags:
        - LearningNeedOutCome
      responses:
        204:
          description: 'LearningNeedOutCome resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LearningNeedOutCome resource.'
      description: 'Removes the LearningNeedOutCome resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /learning_needs:
    get:
      operationId: getLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed-read'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        201:
          description: 'LearningNeed resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LearningNeed resource.'
      description: 'Creates a LearningNeed resource.'
      parameters: []
      requestBody:
        description: 'The new LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
        required: true
      deprecated: false
    parameters: []
  '/learning_needs/{id}':
    get:
      operationId: getLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LearningNeed resource.'
      description: 'Retrieves a LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed-read'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LearningNeed resource.'
      description: 'Replaces the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteLearningNeedItem
      tags:
        - LearningNeed
      responses:
        204:
          description: 'LearningNeed resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LearningNeed resource.'
      description: 'Removes the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/organization/{uuid}/user_roles':
    get:
      operationId: get_user_rolesOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /organizations:
    get:
      operationId: getOrganizationCollection
      tags:
        - Organization
      responses:
        200:
          description: 'Organization collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      summary: 'Retrieves the collection of Organization resources.'
      description: 'Retrieves the collection of Organization resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postOrganizationCollection
      tags:
        - Organization
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Organization resource.'
      description: 'Creates a Organization resource.'
      parameters: []
      requestBody:
        description: 'The new Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Organization-write'
        required: true
      deprecated: false
    parameters: []
  '/organizations/{id}':
    get:
      operationId: getOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Organization resource.'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putOrganizationItem
      tags:
        - Organization
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              operationId: getOrganizationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Organization resource.'
      description: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Organization resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Organization-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteOrganizationItem
      tags:
        - Organization
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Organization resource.'
      description: 'Removes the Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /participations:
    get:
      operationId: getParticipationCollection
      tags:
        - Participation
      responses:
        200:
          description: 'Participation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation-read'
      summary: 'Retrieves the collection of Participation resources.'
      description: 'Retrieves the collection of Participation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{id}':
    get:
      operationId: getParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Participation resource.'
      description: 'Retrieves a Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Participation resource.'
      description: 'Replaces the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteParticipationItem
      tags:
        - Participation
      responses:
        204:
          description: 'Participation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Participation resource.'
      description: 'Removes the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/participations/{uuid}/group':
    post:
      operationId: update_groupParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{uuid}/group/{groupId}':
    post:
      operationId: add_or_remove_groupParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{uuid}/mentor':
    post:
      operationId: update_mentorParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  '/participations/{uuid}/mentor/{mentorId}':
    post:
      operationId: add_or_remove_mentorParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation-read'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation-write'
        required: true
      deprecated: false
    parameters: []
  /people:
    get:
      operationId: getPersonCollection
      tags:
        - Person
      responses:
        200:
          description: 'Person collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Person.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-read'
      summary: 'Retrieves the collection of Person resources.'
      description: 'Retrieves the collection of Person resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postPersonCollection
      tags:
        - Person
      responses:
        201:
          description: 'Person resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
          links:
            GetPersonItem:
              operationId: getPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Person resource.'
      description: 'Creates a Person resource.'
      parameters: []
      requestBody:
        description: 'The new Person resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Person-write'
        required: true
      deprecated: false
    parameters: []
  '/people/{id}':
    get:
      operationId: getPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Person resource.'
      description: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putPersonItem
      tags:
        - Person
      responses:
        200:
          description: 'Person resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Person.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Person-read'
          links:
            GetPersonItem:
              operationId: getPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Person resource.'
      description: 'Replaces the Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Person resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Person.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Person-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Person-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Person-write'
        required: true
      deprecated: false
    delete:
      operationId: deletePersonItem
      tags:
        - Person
      responses:
        204:
          description: 'Person resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Person resource.'
      description: 'Removes the Person resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /registrations:
    get:
      operationId: getRegistrationCollection
      tags:
        - Registration
      responses:
        200:
          description: 'Registration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration-read'
      summary: 'Retrieves the collection of Registration resources.'
      description: 'Retrieves the collection of Registration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postRegistrationCollection
      tags:
        - Registration
      responses:
        201:
          description: 'Registration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration-read'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Registration resource.'
      description: 'Creates a Registration resource.'
      parameters: []
      requestBody:
        description: 'The new Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration-write'
        required: true
      deprecated: false
    parameters: []
  '/registrations/{id}':
    get:
      operationId: getRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration-read'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Registration resource.'
      description: 'Replaces the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteRegistrationItem
      tags:
        - Registration
      responses:
        204:
          description: 'Registration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Registration resource.'
      description: 'Removes the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /reports:
    get:
      operationId: getReportCollection
      tags:
        - Report
      responses:
        200:
          description: 'Report collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report-read'
      summary: 'Retrieves the collection of Report resources.'
      description: 'Retrieves the collection of Report resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Report resource.'
      description: 'Creates a Report resource.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  /reports/desired_learning_outcomes:
    post:
      operationId: desired_learning_outcomes_reportReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Report resource.'
      description: 'Creates a Report resource.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  /reports/participants:
    post:
      operationId: participants_reportReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Report resource.'
      description: 'Creates a Report resource.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  /reports/volunteers:
    post:
      operationId: volunteers_reportReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Report resource.'
      description: 'Creates a Report resource.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    parameters: []
  '/reports/{id}':
    get:
      operationId: getReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Report resource.'
      description: 'Retrieves a Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Report-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report-read'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Report resource.'
      description: 'Replaces the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Report-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteReportItem
      tags:
        - Report
      responses:
        204:
          description: 'Report resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Report resource.'
      description: 'Removes the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_availabilities:
    get:
      operationId: getStudentAvailabilityCollection
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentAvailability-read'
      summary: 'Retrieves the collection of StudentAvailability resources.'
      description: 'Retrieves the collection of StudentAvailability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentAvailabilityCollection
      tags:
        - StudentAvailability
      responses:
        201:
          description: 'StudentAvailability resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentAvailability resource.'
      description: 'Creates a StudentAvailability resource.'
      parameters: []
      requestBody:
        description: 'The new StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
        required: true
      deprecated: false
    parameters: []
  '/student_availabilities/{id}':
    get:
      operationId: getStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability-read'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentAvailability resource.'
      description: 'Replaces the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentAvailability-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        204:
          description: 'StudentAvailability resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentAvailability resource.'
      description: 'Removes the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_backgrounds:
    get:
      operationId: getStudentBackgroundCollection
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentBackground-read'
      summary: 'Retrieves the collection of StudentBackground resources.'
      description: 'Retrieves the collection of StudentBackground resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentBackgroundCollection
      tags:
        - StudentBackground
      responses:
        201:
          description: 'StudentBackground resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentBackground resource.'
      description: 'Creates a StudentBackground resource.'
      parameters: []
      requestBody:
        description: 'The new StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
        required: true
      deprecated: false
    parameters: []
  '/student_backgrounds/{id}':
    get:
      operationId: getStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentBackground resource.'
      description: 'Retrieves a StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground-read'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentBackground resource.'
      description: 'Replaces the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentBackground-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        204:
          description: 'StudentBackground resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentBackground resource.'
      description: 'Removes the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_civic_integrations:
    get:
      operationId: getStudentCivicIntegrationCollection
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCivicIntegration-read'
      summary: 'Retrieves the collection of StudentCivicIntegration resources.'
      description: 'Retrieves the collection of StudentCivicIntegration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCivicIntegrationCollection
      tags:
        - StudentCivicIntegration
      responses:
        201:
          description: 'StudentCivicIntegration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentCivicIntegration resource.'
      description: 'Creates a StudentCivicIntegration resource.'
      parameters: []
      requestBody:
        description: 'The new StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
        required: true
      deprecated: false
    parameters: []
  '/student_civic_integrations/{id}':
    get:
      operationId: getStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCivicIntegration resource.'
      description: 'Retrieves a StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration-read'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentCivicIntegration resource.'
      description: 'Replaces the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        204:
          description: 'StudentCivicIntegration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentCivicIntegration resource.'
      description: 'Removes the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_courses:
    get:
      operationId: getStudentCourseCollection
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentCourse-read'
      summary: 'Retrieves the collection of StudentCourse resources.'
      description: 'Retrieves the collection of StudentCourse resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCourseCollection
      tags:
        - StudentCourse
      responses:
        201:
          description: 'StudentCourse resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentCourse resource.'
      description: 'Creates a StudentCourse resource.'
      parameters: []
      requestBody:
        description: 'The new StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
        required: true
      deprecated: false
    parameters: []
  '/student_courses/{id}':
    get:
      operationId: getStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCourse resource.'
      description: 'Retrieves a StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse-read'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentCourse resource.'
      description: 'Replaces the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCourse-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentCourseItem
      tags:
        - StudentCourse
      responses:
        204:
          description: 'StudentCourse resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentCourse resource.'
      description: 'Removes the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_dossier_events:
    get:
      operationId: getStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDossierEvent-read'
      summary: 'Retrieves the collection of StudentDossierEvent resources.'
      description: 'Retrieves the collection of StudentDossierEvent resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        201:
          description: 'StudentDossierEvent resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentDossierEvent resource.'
      description: 'Creates a StudentDossierEvent resource.'
      parameters: []
      requestBody:
        description: 'The new StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
        required: true
      deprecated: false
    parameters: []
  '/student_dossier_events/{id}':
    get:
      operationId: getStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDossierEvent resource.'
      description: 'Retrieves a StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent-read'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentDossierEvent resource.'
      description: 'Replaces the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        204:
          description: 'StudentDossierEvent resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentDossierEvent resource.'
      description: 'Removes the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_dutch_n_ts:
    get:
      operationId: getStudentDutchNTCollection
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDutchNT-read'
      summary: 'Retrieves the collection of StudentDutchNT resources.'
      description: 'Retrieves the collection of StudentDutchNT resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentDutchNTCollection
      tags:
        - StudentDutchNT
      responses:
        201:
          description: 'StudentDutchNT resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentDutchNT resource.'
      description: 'Creates a StudentDutchNT resource.'
      parameters: []
      requestBody:
        description: 'The new StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
        required: true
      deprecated: false
    parameters: []
  '/student_dutch_n_ts/{id}':
    get:
      operationId: getStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDutchNT resource.'
      description: 'Retrieves a StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT-read'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentDutchNT resource.'
      description: 'Replaces the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDutchNT-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        204:
          description: 'StudentDutchNT resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentDutchNT resource.'
      description: 'Removes the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_educations:
    get:
      operationId: getStudentEducationCollection
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEducation-read'
      summary: 'Retrieves the collection of StudentEducation resources.'
      description: 'Retrieves the collection of StudentEducation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentEducationCollection
      tags:
        - StudentEducation
      responses:
        201:
          description: 'StudentEducation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentEducation resource.'
      description: 'Creates a StudentEducation resource.'
      parameters: []
      requestBody:
        description: 'The new StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
        required: true
      deprecated: false
    parameters: []
  '/student_educations/{id}':
    get:
      operationId: getStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentEducation resource.'
      description: 'Retrieves a StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation-read'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentEducation resource.'
      description: 'Replaces the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentEducation-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentEducationItem
      tags:
        - StudentEducation
      responses:
        204:
          description: 'StudentEducation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentEducation resource.'
      description: 'Removes the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_generals:
    get:
      operationId: getStudentGeneralCollection
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGeneral-read'
      summary: 'Retrieves the collection of StudentGeneral resources.'
      description: 'Retrieves the collection of StudentGeneral resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentGeneralCollection
      tags:
        - StudentGeneral
      responses:
        201:
          description: 'StudentGeneral resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentGeneral resource.'
      description: 'Creates a StudentGeneral resource.'
      parameters: []
      requestBody:
        description: 'The new StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
        required: true
      deprecated: false
    parameters: []
  '/student_generals/{id}':
    get:
      operationId: getStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentGeneral resource.'
      description: 'Retrieves a StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral-read'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentGeneral resource.'
      description: 'Replaces the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentGeneral-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        204:
          description: 'StudentGeneral resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentGeneral resource.'
      description: 'Removes the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_jobs:
    get:
      operationId: getStudentJobCollection
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentJob-read'
      summary: 'Retrieves the collection of StudentJob resources.'
      description: 'Retrieves the collection of StudentJob resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentJobCollection
      tags:
        - StudentJob
      responses:
        201:
          description: 'StudentJob resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentJob resource.'
      description: 'Creates a StudentJob resource.'
      parameters: []
      requestBody:
        description: 'The new StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
        required: true
      deprecated: false
    parameters: []
  '/student_jobs/{id}':
    get:
      operationId: getStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentJob resource.'
      description: 'Retrieves a StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob-read'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentJob resource.'
      description: 'Replaces the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentJob-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentJobItem
      tags:
        - StudentJob
      responses:
        204:
          description: 'StudentJob resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentJob resource.'
      description: 'Removes the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_motivations:
    get:
      operationId: getStudentMotivationCollection
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentMotivation-read'
      summary: 'Retrieves the collection of StudentMotivation resources.'
      description: 'Retrieves the collection of StudentMotivation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentMotivationCollection
      tags:
        - StudentMotivation
      responses:
        201:
          description: 'StudentMotivation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentMotivation resource.'
      description: 'Creates a StudentMotivation resource.'
      parameters: []
      requestBody:
        description: 'The new StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
        required: true
      deprecated: false
    parameters: []
  '/student_motivations/{id}':
    get:
      operationId: getStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentMotivation resource.'
      description: 'Retrieves a StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation-read'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentMotivation resource.'
      description: 'Replaces the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentMotivation-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        204:
          description: 'StudentMotivation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentMotivation resource.'
      description: 'Removes the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_permissions:
    get:
      operationId: getStudentPermissionCollection
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPermission-read'
      summary: 'Retrieves the collection of StudentPermission resources.'
      description: 'Retrieves the collection of StudentPermission resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentPermissionCollection
      tags:
        - StudentPermission
      responses:
        201:
          description: 'StudentPermission resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentPermission resource.'
      description: 'Creates a StudentPermission resource.'
      parameters: []
      requestBody:
        description: 'The new StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
        required: true
      deprecated: false
    parameters: []
  '/student_permissions/{id}':
    get:
      operationId: getStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentPermission resource.'
      description: 'Retrieves a StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission-read'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentPermission resource.'
      description: 'Replaces the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPermission-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        204:
          description: 'StudentPermission resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentPermission resource.'
      description: 'Removes the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /student_referrers:
    get:
      operationId: getStudentReferrerCollection
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentReferrer-read'
      summary: 'Retrieves the collection of StudentReferrer resources.'
      description: 'Retrieves the collection of StudentReferrer resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentReferrerCollection
      tags:
        - StudentReferrer
      responses:
        201:
          description: 'StudentReferrer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentReferrer resource.'
      description: 'Creates a StudentReferrer resource.'
      parameters: []
      requestBody:
        description: 'The new StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
        required: true
      deprecated: false
    parameters: []
  '/student_referrers/{id}':
    get:
      operationId: getStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentReferrer resource.'
      description: 'Retrieves a StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer-read'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentReferrer resource.'
      description: 'Replaces the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentReferrer-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        204:
          description: 'StudentReferrer resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentReferrer resource.'
      description: 'Removes the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /students:
    get:
      operationId: getStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
      summary: 'Retrieves the collection of Student resources.'
      description: 'Retrieves the collection of Student resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCollection
      tags:
        - Student
      responses:
        201:
          description: 'Student resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student-read'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Student resource.'
      description: 'Creates a Student resource.'
      parameters: []
      requestBody:
        description: 'The new Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student-write'
        required: true
      deprecated: false
    parameters: []
  '/students/group/{uuid}':
    get:
      operationId: get_group_studentsStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
      summary: 'Retrieves the collection of Student resources.'
      description: 'Retrieves the collection of Student resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/mentor/{uuid}':
    get:
      operationId: get_mentor_studentsStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student-read'
      summary: 'Retrieves the collection of Student resources.'
      description: 'Retrieves the collection of Student resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    parameters: []
  '/students/{id}':
    get:
      operationId: getStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Student-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student-read'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Student resource.'
      description: 'Replaces the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Student-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentItem
      tags:
        - Student
      responses:
        204:
          description: 'Student resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Student resource.'
      description: 'Removes the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /telephones:
    get:
      operationId: getTelephoneCollection
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Telephone.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telephone-read'
      summary: 'Retrieves the collection of Telephone resources.'
      description: 'Retrieves the collection of Telephone resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postTelephoneCollection
      tags:
        - Telephone
      responses:
        201:
          description: 'Telephone resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
          links:
            GetTelephoneItem:
              operationId: getTelephoneItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Telephone resource.'
      description: 'Creates a Telephone resource.'
      parameters: []
      requestBody:
        description: 'The new Telephone resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Telephone-write'
        required: true
      deprecated: false
    parameters: []
  '/telephones/{id}':
    get:
      operationId: getTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Telephone resource.'
      description: 'Retrieves a Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTelephoneItem
      tags:
        - Telephone
      responses:
        200:
          description: 'Telephone resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Telephone.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Telephone-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Telephone-read'
          links:
            GetTelephoneItem:
              operationId: getTelephoneItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /telephones/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Telephone resource.'
      description: 'Replaces the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Telephone resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Telephone.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Telephone-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Telephone-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteTelephoneItem
      tags:
        - Telephone
      responses:
        204:
          description: 'Telephone resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Telephone resource.'
      description: 'Removes the Telephone resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /test_results:
    get:
      operationId: getTestResultCollection
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestResult-read'
      summary: 'Retrieves the collection of TestResult resources.'
      description: 'Retrieves the collection of TestResult resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postTestResultCollection
      tags:
        - TestResult
      responses:
        201:
          description: 'TestResult resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult-read'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a TestResult resource.'
      description: 'Creates a TestResult resource.'
      parameters: []
      requestBody:
        description: 'The new TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult-write'
        required: true
      deprecated: false
    parameters: []
  '/test_results/{id}':
    get:
      operationId: getTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a TestResult resource.'
      description: 'Retrieves a TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult-read'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the TestResult resource.'
      description: 'Replaces the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteTestResultItem
      tags:
        - TestResult
      responses:
        204:
          description: 'TestResult resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the TestResult resource.'
      description: 'Removes the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users:
    get:
      operationId: getUserCollection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/current_user:
    get:
      operationId: get_current_userUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users/login:
    post:
      operationId: loginUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/logout:
    post:
      operationId: logoutUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/request_password_reset:
    post:
      operationId: request_password_resetUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/reset_password:
    post:
      operationId: reset_passwordUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  '/users/{id}':
    get:
      operationId: getUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the User resource.'
      description: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteUserItem
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Address-read:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          maxLength: 255
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          description: 'Locality of this address.'
          type: string
      required:
        - street
        - houseNumber
        - postalCode
        - locality
    Address-write:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      required:
        - street
        - houseNumber
        - postalCode
        - locality
      properties:
        street:
          maxLength: 255
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          description: 'Locality of this address.'
          type: string
    Address.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          maxLength: 255
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          description: 'Locality of this address.'
          type: string
      required:
        - street
        - houseNumber
        - postalCode
        - locality
    Address.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Address holds.'
      required:
        - street
        - houseNumber
        - postalCode
        - locality
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        street:
          maxLength: 255
          description: 'Street of this address.'
          type: string
        houseNumber:
          minLength: 1
          maxLength: 4
          description: 'House number of this address.'
          type: string
        houseNumberSuffix:
          minLength: 1
          maxLength: 255
          description: 'House number suffix of this address.'
          type: string
          nullable: true
        postalCode:
          minLength: 5
          maxLength: 10
          description: 'Postal code of this address.'
          type: string
        locality:
          minLength: 2
          maxLength: 255
          description: 'Locality of this address.'
          type: string
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Availability-read:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-read'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    Availability-write:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay-write'
    Availability.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-read'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    Availability.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Availability holds.'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        monday:
          description: 'Monday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        tuesday:
          description: 'Tuesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        wednesday:
          description: 'Wednesday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        thursday:
          description: 'Thursday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        friday:
          description: 'Friday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        saturday:
          description: 'Saturday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
        sunday:
          description: 'Sunday of this availability'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/AvailabilityDay.jsonld-write'
    AvailabilityDay-read:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        morning:
          description: 'Morning of this availability day (6:00 -> 12:00).'
          type: boolean
        afternoon:
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
          type: boolean
        evening:
          description: 'Evening of this availability day (18:00 -> 00:00).'
          type: boolean
      required:
        - morning
        - afternoon
        - evening
    AvailabilityDay-write:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      required:
        - morning
        - afternoon
        - evening
      properties:
        morning:
          description: 'Morning of this availability day (6:00 -> 12:00).'
          type: boolean
        afternoon:
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
          type: boolean
        evening:
          description: 'Evening of this availability day (18:00 -> 00:00).'
          type: boolean
    AvailabilityDay.jsonld-read:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        morning:
          description: 'Morning of this availability day (6:00 -> 12:00).'
          type: boolean
        afternoon:
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
          type: boolean
        evening:
          description: 'Evening of this availability day (18:00 -> 00:00).'
          type: boolean
      required:
        - morning
        - afternoon
        - evening
    AvailabilityDay.jsonld-write:
      type: object
      description: 'All properties that the DTO entity AvailabilityDay holds.'
      required:
        - morning
        - afternoon
        - evening
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        morning:
          description: 'Morning of this availability day (6:00 -> 12:00).'
          type: boolean
        afternoon:
          description: 'Afternoon of this availability day (12:00 -> 18:00).'
          type: boolean
        evening:
          description: 'Evening of this availability day (18:00 -> 00:00).'
          type: boolean
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Document-read:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        filename:
          maxLength: 255
          description: 'Filename of this document.'
          type: string
        base64:
          description: 'Base64 of this document.'
          type: string
      required:
        - filename
        - base64
    Document-write:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      required:
        - filename
        - base64
      properties:
        filename:
          maxLength: 255
          description: 'Filename of this document.'
          type: string
        base64:
          description: 'Base64 of this document.'
          type: string
    Document.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        filename:
          maxLength: 255
          description: 'Filename of this document.'
          type: string
        base64:
          description: 'Base64 of this document.'
          type: string
      required:
        - filename
        - base64
    Document.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Document holds.'
      required:
        - filename
        - base64
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        filename:
          maxLength: 255
          description: 'Filename of this document.'
          type: string
        base64:
          description: 'Base64 of this document.'
          type: string
    Education-read:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          description: 'The name of the course this student is following.'
          type: string
          nullable: true
        startDate:
          description: 'Start date of this education.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this education.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'Institution of this education.'
          type: string
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          description: 'Isced education level code of this education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          description: 'Degree granted status of this education.'
          type: string
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          type: boolean
          nullable: true
        amountOfHours:
          description: 'The amount of hours the course takes, that this student is following.'
          type: integer
          nullable: true
    Education-write:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        name:
          description: 'The name of the course this student is following.'
          type: string
          nullable: true
        startDate:
          description: 'Start date of this education.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this education.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'Institution of this education.'
          type: string
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          description: 'Isced education level code of this education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          description: 'Degree granted status of this education.'
          type: string
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          type: boolean
          nullable: true
        amountOfHours:
          description: 'The amount of hours the course takes, that this student is following.'
          type: integer
          nullable: true
    Education.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          description: 'The name of the course this student is following.'
          type: string
          nullable: true
        startDate:
          description: 'Start date of this education.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this education.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'Institution of this education.'
          type: string
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          description: 'Isced education level code of this education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          description: 'Degree granted status of this education.'
          type: string
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          type: boolean
          nullable: true
        amountOfHours:
          description: 'The amount of hours the course takes, that this student is following.'
          type: integer
          nullable: true
    Education.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Education holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the course this student is following.'
          type: string
          nullable: true
        startDate:
          description: 'Start date of this education.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this education.'
          type: string
          format: date-time
          nullable: true
        institution:
          maxLength: 255
          description: 'Institution of this education.'
          type: string
          nullable: true
        iscedEducationLevelCode:
          maxLength: 255
          description: 'Isced education level code of this education.'
          type: string
          nullable: true
        degreeGrantedStatus:
          maxLength: 255
          description: 'Degree granted status of this education.'
          type: string
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - GROUP
          example: INDIVIDUALLY
          description: 'The group formation type of this (course) Education.'
          nullable: true
        teacherProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of the teacher for this Education.'
          nullable: true
        courseProfessionalism:
          type: string
          enum:
            - PROFESSIONAL
            - VOLUNTEER
            - BOTH
          example: PROFESSIONAL
          description: 'The professionalism of this Education if this education is a course.'
          nullable: true
        providesCertificate:
          description: 'A boolean that is true if the Education provides a certificate when completed.'
          type: boolean
          nullable: true
        amountOfHours:
          description: 'The amount of hours the course takes, that this student is following.'
          type: integer
          nullable: true
    Email-read:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
      required:
        - email
    Email-write:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
      required:
        - email
    Email.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
      required:
        - email
    Email.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Email holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this email'
          type: string
          nullable: true
        email:
          maxLength: 255
          description: 'The actual mail address'
          type: string
      required:
        - email
    Employee-read:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource.'
          type: string
          format: uuid
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-read'
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: 'Volunteering Preference of this Employee.'
          type: string
          nullable: true
        gotHereVia:
          maxLength: 255
          description: 'Got here via of this Employee.'
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          maxLength: 255
          description: 'Has experience with target group of this Employee.'
          type: string
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'The reason for the experience with the target group?'
          type: string
          nullable: true
        currentEducation:
          maxLength: 255
          description: 'Current education of this Employee.'
          type: string
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
        doesCurrentlyFollowCourse:
          description: 'Does currently follow course of this Employee.'
          type: boolean
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
        otherRelevantCertificates:
          maxLength: 255
          description: 'Other relevant certificates of this Employee.'
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        organizationId:
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          type: string
          nullable: true
        userGroupIds:
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
          type: array
          items:
            type: string
        userId:
          maxLength: 255
          description: 'User id of this Employee.'
          type: string
          nullable: true
      required:
        - person
        - userGroupIds
    Employee-write:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      required:
        - person
        - userGroupIds
      properties:
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-write'
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: 'Volunteering Preference of this Employee.'
          type: string
          nullable: true
        gotHereVia:
          maxLength: 255
          description: 'Got here via of this Employee.'
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          maxLength: 255
          description: 'Has experience with target group of this Employee.'
          type: string
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'The reason for the experience with the target group?'
          type: string
          nullable: true
        currentEducation:
          maxLength: 255
          description: 'Current education of this Employee.'
          type: string
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
        doesCurrentlyFollowCourse:
          description: 'Does currently follow course of this Employee.'
          type: boolean
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
        otherRelevantCertificates:
          maxLength: 255
          description: 'Other relevant certificates of this Employee.'
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        organizationId:
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          type: string
          nullable: true
        userGroupIds:
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
          type: array
          items:
            type: string
        userId:
          maxLength: 255
          description: 'User id of this Employee.'
          type: string
          nullable: true
    Employee.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource.'
          type: string
          format: uuid
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-read'
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: 'Volunteering Preference of this Employee.'
          type: string
          nullable: true
        gotHereVia:
          maxLength: 255
          description: 'Got here via of this Employee.'
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          maxLength: 255
          description: 'Has experience with target group of this Employee.'
          type: string
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'The reason for the experience with the target group?'
          type: string
          nullable: true
        currentEducation:
          maxLength: 255
          description: 'Current education of this Employee.'
          type: string
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
        doesCurrentlyFollowCourse:
          description: 'Does currently follow course of this Employee.'
          type: boolean
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
        otherRelevantCertificates:
          maxLength: 255
          description: 'Other relevant certificates of this Employee.'
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        organizationId:
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          type: string
          nullable: true
        userGroupIds:
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
          type: array
          items:
            type: string
        userId:
          maxLength: 255
          description: 'User id of this Employee.'
          type: string
          nullable: true
      required:
        - person
        - userGroupIds
    Employee.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Employee holds.'
      required:
        - person
        - userGroupIds
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        person:
          description: 'Person of this employee. <br /> **This person must contain an email!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        availability:
          description: 'The Availability of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-write'
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: 'Volunteering Preference of this Employee.'
          type: string
          nullable: true
        gotHereVia:
          maxLength: 255
          description: 'Got here via of this Employee.'
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          maxLength: 255
          description: 'Has experience with target group of this Employee.'
          type: string
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'The reason for the experience with the target group?'
          type: string
          nullable: true
        currentEducation:
          maxLength: 255
          description: 'Current education of this Employee.'
          type: string
          nullable: true
        education:
          description: 'Education of this employee'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
        doesCurrentlyFollowCourse:
          description: 'Does currently follow course of this Employee.'
          type: boolean
          nullable: true
        followingCourse:
          description: 'Currently following course (Education) of this Employee.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
        otherRelevantCertificates:
          maxLength: 255
          description: 'Other relevant certificates of this Employee.'
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        organizationId:
          description: 'A contact component organization id of this Employee. <br /> **Required for creating Provider or LanguageHouse employees!**'
          type: string
          nullable: true
        userGroupIds:
          description: 'User Group ids of this Employee. <br /> **Use an empty array when creating a BISC employee!**'
          type: array
          items:
            type: string
        userId:
          maxLength: 255
          description: 'User id of this Employee.'
          type: string
          nullable: true
    Group-read:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          description: 'The id of the cc/organization of a provider'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'Name of this group.'
          type: string
        typeCourse:
          maxLength: 255
          description: 'Type course of this group.'
          type: string
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
        startDate:
          description: 'Start date of this group.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this group.'
          type: string
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-read'
        availabilityNotes:
          maxLength: 2550
          description: 'Availability note of this group.'
          type: string
          nullable: true
        location:
          maxLength: 255
          description: 'Location of this group.'
          type: string
          nullable: true
        minParticipations:
          description: 'Min participation''s of this group.'
          type: integer
          nullable: true
        maxParticipations:
          description: 'Max participation''s of this group.'
          type: integer
          nullable: true
        evaluation:
          maxLength: 255
          description: 'Evaluation of this group.'
          type: string
          nullable: true
        employeeIds:
          description: 'Provider employee id''s of this group. (mentors)'
          type: array
          items:
            type: string
        status:
          type: string
          enum:
            - ACTIVE
            - COMPLETED
          example: ACTIVE
          description: 'The Status of this group.'
          nullable: true
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    Group-write:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        providerId:
          description: 'The id of the cc/organization of a provider'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'Name of this group.'
          type: string
        typeCourse:
          maxLength: 255
          description: 'Type course of this group.'
          type: string
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
        startDate:
          description: 'Start date of this group.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this group.'
          type: string
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-write'
        availabilityNotes:
          maxLength: 2550
          description: 'Availability note of this group.'
          type: string
          nullable: true
        location:
          maxLength: 255
          description: 'Location of this group.'
          type: string
          nullable: true
        minParticipations:
          description: 'Min participation''s of this group.'
          type: integer
          nullable: true
        maxParticipations:
          description: 'Max participation''s of this group.'
          type: integer
          nullable: true
        evaluation:
          maxLength: 255
          description: 'Evaluation of this group.'
          type: string
          nullable: true
        employeeIds:
          description: 'Provider employee id''s of this group. (mentors)'
          type: array
          items:
            type: string
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    Group.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          description: 'The id of the cc/organization of a provider'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'Name of this group.'
          type: string
        typeCourse:
          maxLength: 255
          description: 'Type course of this group.'
          type: string
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
        startDate:
          description: 'Start date of this group.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this group.'
          type: string
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-read'
        availabilityNotes:
          maxLength: 2550
          description: 'Availability note of this group.'
          type: string
          nullable: true
        location:
          maxLength: 255
          description: 'Location of this group.'
          type: string
          nullable: true
        minParticipations:
          description: 'Min participation''s of this group.'
          type: integer
          nullable: true
        maxParticipations:
          description: 'Max participation''s of this group.'
          type: integer
          nullable: true
        evaluation:
          maxLength: 255
          description: 'Evaluation of this group.'
          type: string
          nullable: true
        employeeIds:
          description: 'Provider employee id''s of this group. (mentors)'
          type: array
          items:
            type: string
        status:
          type: string
          enum:
            - ACTIVE
            - COMPLETED
          example: ACTIVE
          description: 'The Status of this group.'
          nullable: true
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    Group.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Group holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        providerId:
          description: 'The id of the cc/organization of a provider'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'Name of this group.'
          type: string
        typeCourse:
          maxLength: 255
          description: 'Type course of this group.'
          type: string
        learningNeedOutCome:
          description: 'The learning need out come of this Group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
        startDate:
          description: 'Start date of this group.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'End date of this group.'
          type: string
          format: date-time
          nullable: true
        availability:
          description: 'Availability of this group.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-write'
        availabilityNotes:
          maxLength: 2550
          description: 'Availability note of this group.'
          type: string
          nullable: true
        location:
          maxLength: 255
          description: 'Location of this group.'
          type: string
          nullable: true
        minParticipations:
          description: 'Min participation''s of this group.'
          type: integer
          nullable: true
        maxParticipations:
          description: 'Max participation''s of this group.'
          type: integer
          nullable: true
        evaluation:
          maxLength: 255
          description: 'Evaluation of this group.'
          type: string
          nullable: true
        employeeIds:
          description: 'Provider employee id''s of this group. (mentors)'
          type: array
          items:
            type: string
      required:
        - name
        - typeCourse
        - learningNeedOutCome
        - isFormal
        - totalClassHours
        - certificateWillBeAwarded
        - location
        - employeeIds
    LearningNeed-read:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        description:
          maxLength: 255
          description: 'Description of this learning need.'
          type: string
        motivation:
          maxLength: 255
          description: 'Motivation of this learning need.'
          type: string
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        desiredOffer:
          maxLength: 255
          description: 'Desired offer of this learning need.'
          type: string
          nullable: true
        advisedOffer:
          maxLength: 255
          description: 'Advised offer of this learning need.'
          type: string
          nullable: true
        offerDifference:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'Offer difference of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          description: 'Offer difference other of this learning need.'
          type: string
          nullable: true
        offerEngagements:
          maxLength: 255
          description: 'Offer engagements of this learning need.'
          type: string
          nullable: true
        studentId:
          maxLength: 255
          description: 'Student id of this learning need.'
          type: string
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
    LearningNeed-write:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
      properties:
        description:
          maxLength: 255
          description: 'Description of this learning need.'
          type: string
        motivation:
          maxLength: 255
          description: 'Motivation of this learning need.'
          type: string
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        desiredOffer:
          maxLength: 255
          description: 'Desired offer of this learning need.'
          type: string
          nullable: true
        advisedOffer:
          maxLength: 255
          description: 'Advised offer of this learning need.'
          type: string
          nullable: true
        offerDifference:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'Offer difference of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          description: 'Offer difference other of this learning need.'
          type: string
          nullable: true
        offerEngagements:
          maxLength: 255
          description: 'Offer engagements of this learning need.'
          type: string
          nullable: true
        studentId:
          maxLength: 255
          description: 'Student id of this learning need.'
          type: string
    LearningNeed.jsonld-read:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        description:
          maxLength: 255
          description: 'Description of this learning need.'
          type: string
        motivation:
          maxLength: 255
          description: 'Motivation of this learning need.'
          type: string
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        desiredOffer:
          maxLength: 255
          description: 'Desired offer of this learning need.'
          type: string
          nullable: true
        advisedOffer:
          maxLength: 255
          description: 'Advised offer of this learning need.'
          type: string
          nullable: true
        offerDifference:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'Offer difference of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          description: 'Offer difference other of this learning need.'
          type: string
          nullable: true
        offerEngagements:
          maxLength: 255
          description: 'Offer engagements of this learning need.'
          type: string
          nullable: true
        studentId:
          maxLength: 255
          description: 'Student id of this learning need.'
          type: string
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
    LearningNeed.jsonld-write:
      type: object
      description: 'All properties that the DTO entity LearningNeed holds.'
      required:
        - description
        - motivation
        - desiredLearningNeedOutCome
        - desiredOffer
        - advisedOffer
        - offerDifference
        - studentId
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        description:
          maxLength: 255
          description: 'Description of this learning need.'
          type: string
        motivation:
          maxLength: 255
          description: 'Motivation of this learning need.'
          type: string
        desiredLearningNeedOutCome:
          description: 'The desired learning need out come of this learning need.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        desiredOffer:
          maxLength: 255
          description: 'Desired offer of this learning need.'
          type: string
          nullable: true
        advisedOffer:
          maxLength: 255
          description: 'Advised offer of this learning need.'
          type: string
          nullable: true
        offerDifference:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'Offer difference of this learning need.'
          nullable: true
        offerDifferenceOther:
          maxLength: 255
          description: 'Offer difference other of this learning need.'
          type: string
          nullable: true
        offerEngagements:
          maxLength: 255
          description: 'Offer engagements of this learning need.'
          type: string
          nullable: true
        studentId:
          maxLength: 255
          description: 'Student id of this learning need.'
          type: string
    LearningNeedOutCome-read:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        goal:
          description: 'The goal of this LearningNeedOutcome.'
          type: string
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
      required:
        - goal
        - topic
        - application
        - level
    LearningNeedOutCome-write:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      required:
        - goal
        - topic
        - application
        - level
      properties:
        goal:
          description: 'The goal of this LearningNeedOutcome.'
          type: string
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
    LearningNeedOutCome.jsonld-read:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        goal:
          description: 'The goal of this LearningNeedOutcome.'
          type: string
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
      required:
        - goal
        - topic
        - application
        - level
    LearningNeedOutCome.jsonld-write:
      type: object
      description: 'All properties that the DTO entity LearningNeedOutCome holds.'
      required:
        - goal
        - topic
        - application
        - level
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        goal:
          description: 'The goal of this LearningNeedOutcome.'
          type: string
        topic:
          type: string
          enum:
            - DUTCH_READING
            - DUTCH_WRITING
            - MATH_NUMBERS
            - MATH_PROPORTION
            - MATH_GEOMETRY
            - MATH_LINKS
            - DIGITAL_USING_ICT_SYSTEMS
            - DIGITAL_SEARCHING_INFORMATION
            - DIGITAL_PROCESSING_INFORMATION
            - DIGITAL_COMMUNICATION
            - KNOWLEDGE
            - SKILLS
            - ATTITUDE
            - BEHAVIOUR
            - OTHER
          example: DUTCH_READING
          description: 'The topic of this LearningNeedOutcome.'
        topicOther:
          description: 'The topic of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        application:
          type: string
          enum:
            - FAMILY_AND_PARENTING
            - LABOR_MARKET_AND_WORK
            - HEALTH_AND_WELLBEING
            - ADMINISTRATION_AND_FINANCE
            - HOUSING_AND_NEIGHBORHOOD
            - SELFRELIANCE
            - OTHER
          example: FAMILY_AND_PARENTING
          description: 'The application of this LearningNeedOutcome.'
        applicationOther:
          description: 'The application of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
        level:
          type: string
          enum:
            - INFLOW
            - NLQF1
            - NLQF2
            - NLQF3
            - NLQF4
            - OTHER
          example: INFLOW
          description: 'The level of this LearningNeedOutcome.'
        levelOther:
          description: 'The level of this LearningNeedOutcome when the OTHER option is selected.'
          type: string
          nullable: true
    Organization-read:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization.'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-read'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-read'
      required:
        - name
    Organization-write:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      required:
        - name
      properties:
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization.'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone-write'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-write'
    Organization.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization.'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-read'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-read'
      required:
        - name
    Organization.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Organization holds.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this organization'
          type: string
        type:
          type: string
          enum:
            - Provider
            - LanguageHouse
          example: LanguageHouse
          description: 'Type of this organization.'
          nullable: true
        addresses:
          description: 'Address of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
        telephones:
          description: 'Telephone of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Telephone.jsonld-write'
        emails:
          description: 'Email of this organization'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-write'
    Participation-read:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerName:
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerNote:
          maxLength: 255
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        offerName:
          maxLength: 255
          description: 'Offer name of this participation'
          type: string
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
          nullable: true
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        startDate:
          description: 'The start date of this participation.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The end date of this participation.'
          type: string
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          description: 'Details engagements of this participation'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the LearningNeed connected to this Participation.'
          type: string
      required:
        - learningNeedId
    Participation-write:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        providerId:
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerName:
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerNote:
          maxLength: 255
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        offerName:
          maxLength: 255
          description: 'Offer name of this participation'
          type: string
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
          nullable: true
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        startDate:
          description: 'The start date of this participation.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The end date of this participation.'
          type: string
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          description: 'Details engagements of this participation'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the LearningNeed connected to this Participation.'
          type: string
      required:
        - learningNeedId
    Participation.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        providerId:
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerName:
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerNote:
          maxLength: 255
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        offerName:
          maxLength: 255
          description: 'Offer name of this participation'
          type: string
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
          nullable: true
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        startDate:
          description: 'The start date of this participation.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The end date of this participation.'
          type: string
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          description: 'Details engagements of this participation'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the LearningNeed connected to this Participation.'
          type: string
      required:
        - learningNeedId
    Participation.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Participation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        providerId:
          description: 'A contact component provider id of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerName:
          description: 'The provider name of this Participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        providerNote:
          maxLength: 255
          description: 'Provider note of this participation. <br /> **Either ProviderName or; ProviderId & ProviderNote is required!**'
          type: string
          nullable: true
        offerName:
          maxLength: 255
          description: 'Offer name of this participation'
          type: string
          nullable: true
        offerCourse:
          type: string
          enum:
            - LANGUAGE
            - MATH
            - DIGITAL
            - OTHER
          example: LANGUAGE
          description: 'Offer course of this participation.'
          nullable: true
        learningNeedOutCome:
          description: 'The learning need out come of this participation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        isFormal:
          description: 'The isFormal boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        groupFormation:
          type: string
          enum:
            - INDIVIDUALLY
            - IN_A_GROUP
          example: INDIVIDUALLY
          description: 'The group formation of this LearningNeedOutcome.'
          nullable: true
        totalClassHours:
          description: 'The total class hours of this LearningNeedOutcome.'
          type: number
          nullable: true
        certificateWillBeAwarded:
          description: 'The certificate will be awarded boolean of this LearningNeedOutcome.'
          type: boolean
          nullable: true
        startDate:
          description: 'The start date of this participation.'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The end date of this participation.'
          type: string
          format: date-time
          nullable: true
        engagements:
          maxLength: 255
          description: 'Details engagements of this participation'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the LearningNeed connected to this Participation.'
          type: string
      required:
        - learningNeedId
    Person-read:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-read'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-read'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-read'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          description: 'The contact preference of the person for when the OTHER option is selected.'
          type: string
          nullable: true
      required:
        - givenName
        - familyName
    Person-write:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      required:
        - givenName
        - familyName
      properties:
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address-write'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone-write'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email-write'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          description: 'The contact preference of the person for when the OTHER option is selected.'
          type: string
          nullable: true
    Person.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-read'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-read'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-read'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-read'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          description: 'The contact preference of the person for when the OTHER option is selected.'
          type: string
          nullable: true
      required:
        - givenName
        - familyName
    Person.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Person holds.'
      required:
        - givenName
        - familyName
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        givenName:
          description: 'Given name of this person'
          type: string
        additionalName:
          description: 'Additional name of this person'
          type: string
          nullable: true
        familyName:
          description: 'Family name of this person'
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
          example: Male
          description: 'Gender of this person'
          nullable: true
        birthday:
          description: 'Birthday of this person'
          type: string
          format: date-time
          nullable: true
        addresses:
          description: 'Address of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Address.jsonld-write'
        telephones:
          description: 'Telephones of this person'
          type: array
          items:
            $ref: '#/components/schemas/Telephone.jsonld-write'
        emails:
          description: 'Email of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Email.jsonld-write'
        organization:
          description: 'Organization of this person'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization.jsonld-write'
        contactPreference:
          type: string
          enum:
            - PHONECALL
            - WHATSAPP
            - EMAIL
            - OTHER
          example: PHONECALL
          description: 'The contact preference of the person.'
          nullable: true
        contactPreferenceOther:
          description: 'The contact preference of the person for when the OTHER option is selected.'
          type: string
          nullable: true
    Registration-read:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          description: 'A language house for this registration.'
          type: string
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        memo:
          description: 'A note for/with this registration.'
          type: string
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
      required:
        - languageHouseId
        - student
        - registrar
    Registration-write:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      required:
        - languageHouseId
        - student
        - registrar
      properties:
        languageHouseId:
          description: 'A language house for this registration.'
          type: string
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        memo:
          description: 'A note for/with this registration.'
          type: string
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
    Registration.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          description: 'A language house for this registration.'
          type: string
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        memo:
          description: 'A note for/with this registration.'
          type: string
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
      required:
        - languageHouseId
        - student
        - registrar
    Registration.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Registration holds.'
      required:
        - languageHouseId
        - student
        - registrar
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        languageHouseId:
          description: 'A language house for this registration.'
          type: string
        student:
          description: 'A contact catalogue person for the student. <br /> **This person must contain an Email and Telephone!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        registrar:
          description: 'A contact catalogue person for the registrar. <br /> **This person must contain an Organization!**'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        memo:
          description: 'A note for/with this registration.'
          type: string
          nullable: true
        status:
          type: string
          enum:
            - Pending
            - Accepted
          example: Pending
          description: 'The Status of this registration.'
          default: Pending
          nullable: true
    Report-read:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dateFrom:
          description: 'A date from which you want data in the report.'
          type: string
          nullable: true
        dateUntil:
          description: 'A date until which you want data in the report.'
          type: string
          nullable: true
        filename:
          description: 'The filename of the report.'
          type: string
          nullable: true
        base64:
          description: 'A base64 encoded string containing the file''s contents.'
          type: string
          nullable: true
    Report-write:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        dateFrom:
          description: 'A date from which you want data in the report.'
          type: string
          nullable: true
        dateUntil:
          description: 'A date until which you want data in the report.'
          type: string
          nullable: true
        filename:
          description: 'The filename of the report.'
          type: string
          nullable: true
        base64:
          description: 'A base64 encoded string containing the file''s contents.'
          type: string
          nullable: true
    Report.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dateFrom:
          description: 'A date from which you want data in the report.'
          type: string
          nullable: true
        dateUntil:
          description: 'A date until which you want data in the report.'
          type: string
          nullable: true
        filename:
          description: 'The filename of the report.'
          type: string
          nullable: true
        base64:
          description: 'A base64 encoded string containing the file''s contents.'
          type: string
          nullable: true
    Report.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Report holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        dateFrom:
          description: 'A date from which you want data in the report.'
          type: string
          nullable: true
        dateUntil:
          description: 'A date until which you want data in the report.'
          type: string
          nullable: true
        filename:
          description: 'The filename of the report.'
          type: string
          nullable: true
        base64:
          description: 'A base64 encoded string containing the file''s contents.'
          type: string
          nullable: true
    Student-read:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration-read'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral-read'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer-read'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground-read'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT-read'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation-read'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse-read'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob-read'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation-read'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability-read'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission-read'
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse'
          type: string
        status:
          type: string
          enum:
            - REFERRRED
            - ACTIVE
            - COMPLETED
          example: REFERRED
          description: 'The Status of this group.'
          nullable: true
      required:
        - person
        - permissionDetails
        - languageHouseId
    Student-write:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration-write'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral-write'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer-write'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground-write'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT-write'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation-write'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse-write'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob-write'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation-write'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability-write'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission-write'
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse'
          type: string
      required:
        - person
        - permissionDetails
        - languageHouseId
    Student.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-read'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral.jsonld-read'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer.jsonld-read'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground.jsonld-read'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT.jsonld-read'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation.jsonld-read'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse.jsonld-read'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob.jsonld-read'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation.jsonld-read'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability.jsonld-read'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission.jsonld-read'
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse'
          type: string
        status:
          type: string
          enum:
            - REFERRRED
            - ACTIVE
            - COMPLETED
          example: REFERRED
          description: 'The Status of this group.'
          nullable: true
      required:
        - person
        - permissionDetails
        - languageHouseId
    Student.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Student holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        registrar:
          description: 'A contact catalogue person for the registrar, this person should have a Organization with at least the name set.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        civicIntegrationDetails:
          description: 'The StudentCivicIntegration of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld-write'
        person:
          description: 'A contact catalogue person for the student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        generalDetails:
          description: 'The StudentGeneral of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentGeneral.jsonld-write'
        referrerDetails:
          description: 'The StudentReferrer of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentReferrer.jsonld-write'
        backgroundDetails:
          description: 'The StudentBackground of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentBackground.jsonld-write'
        dutchNTDetails:
          description: 'The StudentDutchNT of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentDutchNT.jsonld-write'
        speakingLevel:
          type: string
          enum:
            - BEGINNER
            - REASONABLE
            - ADVANCED
          example: BEGINNER
          description: 'The speakingLevel of this Student.'
          nullable: true
        educationDetails:
          description: 'The StudentEducation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentEducation.jsonld-write'
        courseDetails:
          description: 'The StudentCourse of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentCourse.jsonld-write'
        jobDetails:
          description: 'The StudentJob of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentJob.jsonld-write'
        motivationDetails:
          description: 'The StudentMotivation of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentMotivation.jsonld-write'
        availabilityDetails:
          description: 'The StudentAvailability of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentAvailability.jsonld-write'
        readingTestResult:
          type: string
          enum:
            - CAN_NOT_READ
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
          example: A0
          description: 'The reading test result of this Student.'
          nullable: true
        writingTestResult:
          type: string
          enum:
            - CAN_NOT_WRITE
            - WRITE_NAW_DETAILS
            - WRITE_SIMPLE_TEXTS
            - WRITE_SIMPLE_LETTERS
          example: WRITE_NAW_DETAILS
          description: 'The writing test result of this Student.'
          nullable: true
        permissionDetails:
          description: 'The StudentPermission of this Student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/StudentPermission.jsonld-write'
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse'
          type: string
      required:
        - person
        - permissionDetails
        - languageHouseId
    StudentAvailability-read:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-read'
        availabilityNotes:
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentAvailability-write:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability-write'
        availabilityNotes:
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentAvailability.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-read'
        availabilityNotes:
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentAvailability.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentAvailability holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        availability:
          description: 'The Availability of this student.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Availability.jsonld-write'
        availabilityNotes:
          description: 'The note for/with this Availability.'
          type: string
          nullable: true
    StudentBackground-read:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentBackground-write:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentBackground.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentBackground.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentBackground holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        foundVia:
          type: string
          enum:
            - VOLUNTEER_CENTER
            - LIBRARY_WEBSITE
            - SOCIAL_MEDIA
            - NEWSPAPER
            - VIA_VIA
            - OTHER
          example: VOLUNTEER_CENTER
          description: 'The way this student found the languageHouse.'
          nullable: true
        foundViaOther:
          description: 'The way this student found the languageHouse for if the OTHER option is selected.'
          type: string
          nullable: true
        wentToLanguageHouseBefore:
          description: 'A boolean that is true if this student went to this languageHouse before.'
          type: boolean
          nullable: true
        wentToLanguageHouseBeforeReason:
          description: 'The reason why this student went to this languageHouse before.'
          type: string
          nullable: true
        wentToLanguageHouseBeforeYear:
          description: 'The year this student went to this languageHouse before.'
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
            enum:
              - HOUSEHOLD_MEMBERS
              - NEIGHBORS
              - FAMILY_MEMBERS
              - AID_WORKERS
              - FRIENDS_ACQUAINTANCES
              - PEOPLE_AT_MOSQUE_CHURCH
              - ACQUAINTANCES_SPEAKING_OWN_LANGUAGE
              - ACQUAINTANCES_SPEAKING_DUTCH
            example: HOUSEHOLD_MEMBERS
          description: 'The network of this student.'
          nullable: true
        participationLadder:
          description: 'The place this student has on the participationLadder.'
          type: integer
          nullable: true
    StudentCivicIntegration-read:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration-write:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentCivicIntegration holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        civicIntegrationRequirement:
          type: string
          enum:
            - 'YES'
            - 'NO'
            - CURRENTLY_WORKING_ON_INTEGRATION
          example: 'YES'
          description: 'A enum for the status of the civic integration requirement of the student.'
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          enum:
            - FINISHED
            - FROM_EU_COUNTRY
            - EXEMPTED_OR_ZROUTE
          example: FINISHED
          description: 'The reason why this student has no civic integration requirement.'
          nullable: true
        civicIntegrationRequirementFinishDate:
          description: 'The civic integration requirement finish date for this student.'
          type: string
          format: date-time
          nullable: true
    StudentCourse-read:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
    StudentCourse-write:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
    StudentCourse.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
    StudentCourse.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentCourse holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        isFollowingCourseRightNow:
          description: 'A boolean that is true if this student is following a course right now.'
          type: boolean
          nullable: true
        course:
          description: 'The course Education of this studentCourse.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
    StudentDossierEvent-read:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDossierEvent-write:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
      properties:
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
    StudentDossierEvent.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDossierEvent.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentDossierEvent holds.'
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        event:
          type: string
          enum:
            - FINAL_TALK
            - REMARK
            - FOLLOW_UP_TALK
            - INFO_FOR_STORYTELLING
            - INTAKE
          example: FINAL_TALK
          description: 'The Event of this Student.'
        eventDate:
          description: 'Date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'Description of this student Dossier.'
          type: string
        studentId:
          description: 'StudentId of this student Dossier.'
          type: string
        employeeId:
          description: 'EmployeeId of this student Dossier.'
          type: string
          nullable: true
    StudentDutchNT-read:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentDutchNT-write:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentDutchNT.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentDutchNT.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentDutchNT holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        dutchNTLevel:
          type: string
          enum:
            - NT1
            - NT2
          example: NT1
          description: 'The dutch NT level of this Student.'
          nullable: true
        inNetherlandsSinceYear:
          description: 'The year since when this student is in the Netherlands.'
          type: number
          nullable: true
        languageInDailyLife:
          description: 'The language this student speaks in his/her daily life.'
          type: string
          nullable: true
        knowsLatinAlphabet:
          description: 'A boolean that is true if this student knows the latin alphabet.'
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          enum:
            - A0
            - A1
            - A2
            - B1
            - B2
            - C1
            - C2
            - UNKNOWN
          example: A0
          description: 'The last known language level of this student.'
          nullable: true
    StudentEducation-read:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        followingEducationRightNow:
          maxLength: 255
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: |-
            Following education right now of this studentEducation.

             @Assert\Length(
                max = 255
            )
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-read'
    StudentEducation-write:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        followingEducationRightNow:
          maxLength: 255
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: |-
            Following education right now of this studentEducation.

             @Assert\Length(
                max = 255
            )
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education-write'
    StudentEducation.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        followingEducationRightNow:
          maxLength: 255
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: |-
            Following education right now of this studentEducation.

             @Assert\Length(
                max = 255
            )
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-read'
    StudentEducation.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentEducation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        followingEducationRightNow:
          maxLength: 255
          type: string
          enum:
            - 'YES'
            - 'NO'
            - NO_BUT_DID_EARLIER
          example: 'YES'
          description: |-
            Following education right now of this studentEducation.

             @Assert\Length(
                max = 255
            )
          nullable: true
        education:
          description: 'Education of this studentEducation.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Education.jsonld-write'
    StudentGeneral-read:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentGeneral-write:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        countryOfOrigin:
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentGeneral.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentGeneral.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentGeneral holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        countryOfOrigin:
          description: 'The country of origin of this student.'
          type: string
          nullable: true
        nativeLanguage:
          description: 'The native language of this student.'
          type: string
          nullable: true
        otherLanguages:
          description: 'The other languages this student speaks.'
          type: string
          nullable: true
        familyComposition:
          type: array
          items:
            type: string
            enum:
              - MARRIED_PARTNER
              - SINGLE
              - DIVORCED
              - WIDOW
            example: MARRIED_PARTNER
          description: 'The family composition of this student.'
          nullable: true
        childrenCount:
          description: 'The amount of children of this student.'
          type: integer
          nullable: true
        childrenDatesOfBirth:
          description: 'The birthdays of the children of this student.'
          type: string
          nullable: true
    StudentJob-read:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentJob-write:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        trainedForJob:
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentJob.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentJob.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentJob holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        trainedForJob:
          description: 'The job this student is trained for.'
          type: string
          nullable: true
        lastJob:
          description: 'The last job of this student.'
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
            enum:
              - SEARCHING_FOR_JOB
              - RE_INTEGRATION
              - SCHOOL
              - VOLUNTEER_JOB
              - JOB
              - OTHER
            example: SEARCHING_FOR_JOB
          description: 'The daytime activities of this StudentJob.'
          nullable: true
        dayTimeActivitiesOther:
          description: 'The daytime activities for when the OTHER option is selected.'
          type: string
          nullable: true
    StudentMotivation-read:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentMotivation-write:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentMotivation.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentMotivation.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentMotivation holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        desiredSkills:
          type: array
          items:
            type: string
            enum:
              - KLIKTIK
              - USING_WHATSAPP
              - USING_SKYPE
              - DEVICE_FUNCTIONALITIES
              - DIGITAL_GOVERNMENT
              - RESERVE_BOOKS_IN_LIBRARY
              - ADS_ON_MARKTPLAATS
              - READ_FOR_CHILDREN
              - UNDERSTAND_PRESCRIPTIONS
              - WRITE_APPLICATION_LETTER
              - WRITE_POSTCARD_FOR_FAMILY
              - DO_ADMINISTRATION
              - CALCULATIONS_FOR_RECIPES
              - OTHER
            example: USING_WHATSAPP
          description: 'The desired skills for a StudentMotivation.'
          nullable: true
        desiredSkillsOther:
          description: 'The desired skills for when the OTHER option is selected.'
          type: string
          nullable: true
        hasTriedThisBefore:
          description: 'A boolean that is true when the student has tried this before.'
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          description: 'The explanation why the student has or has not tried this before.'
          type: string
          nullable: true
        whyWantTheseSkills:
          description: 'The reason why the student wants to learn these skills.'
          type: string
          nullable: true
        whyWantThisNow:
          description: 'The reason why the student wants to learn these skills right now.'
          type: string
          nullable: true
        desiredLearningMethod:
          type: array
          items:
            type: string
            enum:
              - IN_A_GROUP
              - ONE_ON_ONE
              - HOME_ENVIRONMENT
              - IN_LIBRARY_OR_OTHER
              - ONLINE
            example: IN_A_GROUP
          description: 'The desired learning methods for this StudentMotivation.'
          nullable: true
        remarks:
          description: 'The final remark/note for the StudentMotivation.'
          type: string
          nullable: true
    StudentPermission-read:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
    StudentPermission-write:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
      properties:
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
    StudentPermission.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
    StudentPermission.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentPermission holds.'
      required:
        - didSignPermissionForm
        - hasPermissionToShareDataWithProviders
        - hasPermissionToShareDataWithLibraries
        - hasPermissionToSendInformationAboutLibraries
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        didSignPermissionForm:
          description: 'A boolean that is true when the permission form was signed.'
          type: boolean
        hasPermissionToShareDataWithProviders:
          description: 'A boolean that is true when the student gives permission to share his/her data with providers.'
          type: boolean
        hasPermissionToShareDataWithLibraries:
          description: 'A boolean that is true when the student gives permission to share his/her data with libraries.'
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          description: 'A boolean that is true when the student gives permission to send information about libraries.'
          type: boolean
    StudentReferrer-read:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    StudentReferrer-write:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    StudentReferrer.jsonld-read:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    StudentReferrer.jsonld-write:
      type: object
      description: 'All properties that the DTO entity StudentReferrer holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        referringOrganization:
          type: string
          enum:
            - UWV
            - SOCIAL_SERVICE
            - LIBRARY
            - WELFARE_WORK
            - NEIGHBORHOOD_TEAM
            - VOLUNTEER_ORGANIZATION
            - LANGUAGE_PROVIDER
            - OTHER
          example: UWV
          description: 'The StudentReferrer organization name.'
          nullable: true
        referringOrganizationOther:
          description: 'The StudentReferrer organization name when the OTHER option is selected.'
          type: string
          nullable: true
        email:
          description: 'The email of this StudentReferrer.'
          type: string
          nullable: true
    Telephone-read:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    Telephone-write:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        name:
          maxLength: 255
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    Telephone.jsonld-read:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    Telephone.jsonld-write:
      type: object
      description: 'All properties that the DTO entity Telephone holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'Name of this telephone.'
          type: string
          nullable: true
        telephone:
          maxLength: 255
          description: 'The actual phone number.'
          type: string
      required:
        - telephone
    TestResult-read:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-read'
        usedExam:
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
        examMemo:
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
    TestResult-write:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
      properties:
        participationId:
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome-write'
        usedExam:
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
        examMemo:
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
    TestResult.jsonld-read:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-read'
        usedExam:
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
        examMemo:
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
    TestResult.jsonld-write:
      type: object
      description: 'All properties that the DTO entity TestResult holds.'
      required:
        - participationId
        - learningNeedOutCome
        - usedExam
        - examDate
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        participationId:
          description: 'The id of a participation this TestResult is connected to.'
          type: string
        learningNeedOutCome:
          description: 'The learningNeedOutCome of this TestResult.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/LearningNeedOutCome.jsonld-write'
        usedExam:
          description: 'The used exam for this TestResult.'
          type: string
        examDate:
          description: 'The date of the exam that this TestResult is a result of.'
          type: string
        examMemo:
          description: 'A memo/note for this TestResult.'
          type: string
          nullable: true
    User-read:
      type: object
      description: 'All properties that the DTO entity User holds.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-read'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          description: 'The organization name of this User.'
          type: string
          nullable: true
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
      required:
        - username
        - person
    User-write:
      type: object
      description: 'All properties that the DTO entity User holds.'
      required:
        - username
        - person
        - password
      properties:
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person-write'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          description: 'The organization name of this User.'
          type: string
          nullable: true
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        password:
          maxLength: 2550
          description: 'The Password of this User.'
          type: string
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
    User.jsonld-read:
      type: object
      description: 'All properties that the DTO entity User holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-read'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          description: 'The organization name of this User.'
          type: string
          nullable: true
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
      required:
        - username
        - person
    User.jsonld-write:
      type: object
      description: 'All properties that the DTO entity User holds.'
      required:
        - username
        - person
        - password
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        username:
          maxLength: 2550
          description: 'The Username of this User.'
          type: string
        person:
          description: 'A contact component person of this User.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Person.jsonld-write'
        userEnvironment:
          type: string
          enum:
            - BISC
            - TAALHUIS
            - AANBIEDER
          example: BISC
          description: 'The userEnvironment of this User.'
          nullable: true
        organizationId:
          description: 'A contact component organization id of this User.'
          type: string
          nullable: true
        organizationName:
          description: 'The organization name of this User.'
          type: string
          nullable: true
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        password:
          maxLength: 2550
          description: 'The Password of this User.'
          type: string
        token:
          maxLength: 2550
          description: 'The Token for password reset.'
          type: string
          nullable: true
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
