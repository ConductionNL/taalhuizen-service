openapi: 3.0.3
info:
  title: ''
  description: |-
    API Details
    - Component: 
    - Reference: taalhuizen-service
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/taalhuizen-service) / [zip](https://github.com/ConductionNL/taalhuizen-service/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/taalhuizen-service.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 

    &#039;Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.&#039;
  version: V1.0
servers:
  -
    url: /
    description: ''
paths:
  /addresses:
    get:
      operationId: getAddressCollection
      tags:
        - Address
      responses:
        200:
          description: 'Address collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Address.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Address resources.'
      description: 'Retrieves the collection of Address resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAddressCollection
      tags:
        - Address
      responses:
        201:
          description: 'Address resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Address resource.'
      description: 'Creates a Address resource.'
      parameters: []
      requestBody:
        description: 'The new Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/addresses/{id}':
    get:
      operationId: getAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Address resource.'
      description: 'Retrieves a Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Address resource.'
      description: 'Replaces the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteAddressItem
      tags:
        - Address
      responses:
        204:
          description: 'Address resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Address resource.'
      description: 'Removes the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAddressItem
      tags:
        - Address
      responses:
        200:
          description: 'Address resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Address.jsonld'
          links:
            GetAddressItem:
              operationId: getAddressItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Address resource.'
      description: 'Updates the Address resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Address resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Address.jsonld'
        required: true
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-read'
        required: true
      deprecated: false
    parameters: []
  /availabilities:
    get:
      operationId: getAvailabilityCollection
      tags:
        - Availability
      responses:
        200:
          description: 'Availability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Availability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Availability resources.'
      description: 'Retrieves the collection of Availability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAvailabilityCollection
      tags:
        - Availability
      responses:
        201:
          description: 'Availability resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Availability resource.'
      description: 'Creates a Availability resource.'
      parameters: []
      requestBody:
        description: 'The new Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/availabilities/{id}':
    get:
      operationId: getAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Availability resource.'
      description: 'Retrieves a Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Availability resource.'
      description: 'Replaces the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteAvailabilityItem
      tags:
        - Availability
      responses:
        204:
          description: 'Availability resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Availability resource.'
      description: 'Removes the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAvailabilityItem
      tags:
        - Availability
      responses:
        200:
          description: 'Availability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Availability.jsonld'
          links:
            GetAvailabilityItem:
              operationId: getAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Availability resource.'
      description: 'Updates the Availability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Availability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Availability.jsonld'
        required: true
      deprecated: false
    parameters: []
  /availability_days:
    get:
      operationId: getAvailabilityDayCollection
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AvailabilityDay.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of AvailabilityDay resources.'
      description: 'Retrieves the collection of AvailabilityDay resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAvailabilityDayCollection
      tags:
        - AvailabilityDay
      responses:
        201:
          description: 'AvailabilityDay resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AvailabilityDay resource.'
      description: 'Creates a AvailabilityDay resource.'
      parameters: []
      requestBody:
        description: 'The new AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/availability_days/{id}':
    get:
      operationId: getAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AvailabilityDay resource.'
      description: 'Retrieves a AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AvailabilityDay resource.'
      description: 'Replaces the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        204:
          description: 'AvailabilityDay resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AvailabilityDay resource.'
      description: 'Removes the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAvailabilityDayItem
      tags:
        - AvailabilityDay
      responses:
        200:
          description: 'AvailabilityDay resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/AvailabilityDay.jsonld'
          links:
            GetAvailabilityDayItem:
              operationId: getAvailabilityDayItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /availability_days/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AvailabilityDay resource.'
      description: 'Updates the AvailabilityDay resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AvailabilityDay resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/AvailabilityDay.jsonld'
        required: true
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/graphql:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/graphql:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-read'
        required: true
      deprecated: false
    parameters: []
  /current_education_no_but_did_follows:
    get:
      operationId: getCurrentEducationNoButDidFollowCollection
      tags:
        - CurrentEducationNoButDidFollow
      responses:
        200:
          description: 'CurrentEducationNoButDidFollow collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of CurrentEducationNoButDidFollow resources.'
      description: 'Retrieves the collection of CurrentEducationNoButDidFollow resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postCurrentEducationNoButDidFollowCollection
      tags:
        - CurrentEducationNoButDidFollow
      responses:
        201:
          description: 'CurrentEducationNoButDidFollow resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          links:
            GetCurrentEducationNoButDidFollowItem:
              operationId: getCurrentEducationNoButDidFollowItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /current_education_no_but_did_follows/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a CurrentEducationNoButDidFollow resource.'
      description: 'Creates a CurrentEducationNoButDidFollow resource.'
      parameters: []
      requestBody:
        description: 'The new CurrentEducationNoButDidFollow resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/current_education_no_but_did_follows/{id}':
    get:
      operationId: getCurrentEducationNoButDidFollowItem
      tags:
        - CurrentEducationNoButDidFollow
      responses:
        200:
          description: 'CurrentEducationNoButDidFollow resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a CurrentEducationNoButDidFollow resource.'
      description: 'Retrieves a CurrentEducationNoButDidFollow resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putCurrentEducationNoButDidFollowItem
      tags:
        - CurrentEducationNoButDidFollow
      responses:
        200:
          description: 'CurrentEducationNoButDidFollow resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          links:
            GetCurrentEducationNoButDidFollowItem:
              operationId: getCurrentEducationNoButDidFollowItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /current_education_no_but_did_follows/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the CurrentEducationNoButDidFollow resource.'
      description: 'Replaces the CurrentEducationNoButDidFollow resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated CurrentEducationNoButDidFollow resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteCurrentEducationNoButDidFollowItem
      tags:
        - CurrentEducationNoButDidFollow
      responses:
        204:
          description: 'CurrentEducationNoButDidFollow resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the CurrentEducationNoButDidFollow resource.'
      description: 'Removes the CurrentEducationNoButDidFollow resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchCurrentEducationNoButDidFollowItem
      tags:
        - CurrentEducationNoButDidFollow
      responses:
        200:
          description: 'CurrentEducationNoButDidFollow resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          links:
            GetCurrentEducationNoButDidFollowItem:
              operationId: getCurrentEducationNoButDidFollowItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /current_education_no_but_did_follows/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the CurrentEducationNoButDidFollow resource.'
      description: 'Updates the CurrentEducationNoButDidFollow resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated CurrentEducationNoButDidFollow resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/CurrentEducationNoButDidFollow.jsonld'
        required: true
      deprecated: false
    parameters: []
  /current_education_yes:
    get:
      operationId: getCurrentEducationYesCollection
      tags:
<<<<<<< HEAD
        - CurrentEducationYes
      responses:
        200:
          description: 'CurrentEducationYes collection'
=======
        - EducationRepository
      operationId: getCurrentEducationYesCollection
      summary: 'Retrieves the collection of EducationRepository resources.'
      responses:
        200:
          description: 'EducationRepository collection response'
>>>>>>> feature-sarai
          content:
            application/ld+json:
              schema:
                type: object
                properties:
<<<<<<< HEAD
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
=======
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/EducationRepository:jsonld' } }
>>>>>>> feature-sarai
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
<<<<<<< HEAD
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
=======
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/EducationRepository:jsonld' } }
>>>>>>> feature-sarai
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
<<<<<<< HEAD
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/CurrentEducationYes.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of CurrentEducationYes resources.'
      description: 'Retrieves the collection of CurrentEducationYes resources.'
=======
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
            application/graphql:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationRepository'
>>>>>>> feature-sarai
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postCurrentEducationYesCollection
      tags:
<<<<<<< HEAD
        - CurrentEducationYes
=======
        - EducationRepository
      operationId: postCurrentEducationYesCollection
      summary: 'Creates a EducationRepository resource.'
>>>>>>> feature-sarai
      responses:
        201:
          description: 'EducationRepository resource created'
          content:
            application/ld+json:
              schema:
<<<<<<< HEAD
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
=======
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/graphql:
              schema:
                $ref: '#/components/schemas/EducationRepository'
>>>>>>> feature-sarai
          links:
            GetCurrentEducationYesItem:
              operationId: getCurrentEducationYesItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /current_education_yes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a CurrentEducationYes resource.'
      description: 'Creates a CurrentEducationYes resource.'
      parameters: []
      requestBody:
        description: 'The new CurrentEducationYes resource'
        content:
          application/ld+json:
            schema:
<<<<<<< HEAD
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
        required: true
      deprecated: false
    parameters: []
=======
              $ref: '#/components/schemas/EducationRepository:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/EducationRepository:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/health+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json+health:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/xml:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          text/csv:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          text/html:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/graphql:
            schema:
              $ref: '#/components/schemas/EducationRepository'
        description: 'The new EducationRepository resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
>>>>>>> feature-sarai
  '/current_education_yes/{id}':
    get:
      operationId: getCurrentEducationYesItem
      tags:
<<<<<<< HEAD
        - CurrentEducationYes
      responses:
        200:
          description: 'CurrentEducationYes resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
=======
        - EducationRepository
      operationId: getCurrentEducationYesItem
      summary: 'Retrieves a EducationRepository resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'EducationRepository resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/graphql:
              schema:
                $ref: '#/components/schemas/EducationRepository'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - EducationRepository
      operationId: deleteCurrentEducationYesItem
      summary: 'Removes the EducationRepository resource.'
      responses:
        204:
          description: 'EducationRepository resource deleted'
>>>>>>> feature-sarai
        404:
          description: 'Resource not found'
      summary: 'Retrieves a CurrentEducationYes resource.'
      description: 'Retrieves a CurrentEducationYes resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putCurrentEducationYesItem
      tags:
<<<<<<< HEAD
        - CurrentEducationYes
=======
        - EducationRepository
      operationId: putCurrentEducationYesItem
      summary: 'Replaces the EducationRepository resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
>>>>>>> feature-sarai
      responses:
        200:
          description: 'EducationRepository resource updated'
          content:
            application/ld+json:
              schema:
<<<<<<< HEAD
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          links:
            GetCurrentEducationYesItem:
              operationId: getCurrentEducationYesItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /current_education_yes/{id}`.'
=======
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/graphql:
              schema:
                $ref: '#/components/schemas/EducationRepository'
>>>>>>> feature-sarai
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the CurrentEducationYes resource.'
      description: 'Replaces the CurrentEducationYes resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated CurrentEducationYes resource'
        content:
          application/ld+json:
            schema:
<<<<<<< HEAD
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteCurrentEducationYesItem
      tags:
        - CurrentEducationYes
      responses:
        204:
          description: 'CurrentEducationYes resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the CurrentEducationYes resource.'
      description: 'Removes the CurrentEducationYes resource.'
=======
              $ref: '#/components/schemas/EducationRepository:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/EducationRepository:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/health+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/json+health:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/xml:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          text/csv:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          text/html:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/graphql:
            schema:
              $ref: '#/components/schemas/EducationRepository'
        description: 'The updated EducationRepository resource'
    patch:
      tags:
        - EducationRepository
      operationId: patchCurrentEducationYesItem
      summary: 'Updates the EducationRepository resource.'
>>>>>>> feature-sarai
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
<<<<<<< HEAD
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchCurrentEducationYesItem
      tags:
        - CurrentEducationYes
      responses:
        200:
          description: 'CurrentEducationYes resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          links:
            GetCurrentEducationYesItem:
              operationId: getCurrentEducationYesItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /current_education_yes/{id}`.'
=======
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'EducationRepository resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationRepository:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationRepository'
            application/graphql:
              schema:
                $ref: '#/components/schemas/EducationRepository'
>>>>>>> feature-sarai
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the CurrentEducationYes resource.'
      description: 'Updates the CurrentEducationYes resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated CurrentEducationYes resource'
        content:
          application/ld+json:
            schema:
<<<<<<< HEAD
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/CurrentEducationYes.jsonld'
        required: true
      deprecated: false
    parameters: []
=======
              $ref: '#/components/schemas/EducationRepository:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          application/xml:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          text/csv:
            schema:
              $ref: '#/components/schemas/EducationRepository'
          text/html:
            schema:
              $ref: '#/components/schemas/EducationRepository'
        description: 'The updated EducationRepository resource'
>>>>>>> feature-sarai
  /documents:
    get:
      operationId: getDocumentCollection
      tags:
        - Document
      responses:
        200:
          description: 'Document collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Document resources.'
      description: 'Retrieves the collection of Document resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: aanbiederEmployeeId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'aanbiederEmployeeId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postDocumentCollection
      tags:
        - Document
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Document resource.'
      description: 'Creates a Document resource.'
      parameters: []
      requestBody:
        description: 'The new Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/documents/{id}':
    get:
      operationId: getDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Document resource.'
      description: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Document resource.'
      description: 'Replaces the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteDocumentItem
      tags:
        - Document
      responses:
        204:
          description: 'Document resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Document resource.'
      description: 'Removes the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchDocumentItem
      tags:
        - Document
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Document.jsonld'
          links:
            GetDocumentItem:
              operationId: getDocumentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Document resource.'
      description: 'Updates the Document resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Document resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Document.jsonld'
        required: true
      deprecated: false
    parameters: []
  /employees:
    get:
      operationId: getEmployeeCollection
      tags:
        - Employee
      responses:
        200:
          description: 'Employee collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Employee resources.'
      description: 'Retrieves the collection of Employee resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: languageHouseId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'languageHouseId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: providerId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'providerId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postEmployeeCollection
      tags:
        - Employee
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Employee resource.'
      description: 'Creates a Employee resource.'
      parameters: []
      requestBody:
        description: 'The new Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/employees/{id}':
    get:
      operationId: getEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Employee resource.'
      description: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Employee resource.'
      description: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteEmployeeItem
      tags:
        - Employee
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Employee resource.'
      description: 'Removes the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchEmployeeItem
      tags:
        - Employee
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Employee.jsonld'
          links:
            GetEmployeeItem:
              operationId: getEmployeeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Employee resource.'
      description: 'Updates the Employee resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Employee resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee.jsonld'
        required: true
      deprecated: false
    parameters: []
  /groups:
    get:
      operationId: getGroupCollection
      tags:
        - Group
      responses:
        200:
          description: 'Group collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Group resources.'
      description: 'Retrieves the collection of Group resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: aanbiederId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'aanbiederId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postGroupCollection
      tags:
        - Group
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Group resource.'
      description: 'Creates a Group resource.'
      parameters: []
      requestBody:
        description: 'The new Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/groups/{id}':
    get:
      operationId: getGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Group resource.'
      description: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteGroupItem
      tags:
        - Group
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Group resource.'
      description: 'Removes the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Group.jsonld'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Group resource.'
      description: 'Updates the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Group.jsonld'
        required: true
      deprecated: false
    parameters: []
  /language_houses:
    get:
      operationId: getLanguageHouseCollection
      tags:
        - LanguageHouse
      responses:
        200:
          description: 'LanguageHouse collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LanguageHouse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of LanguageHouse resources.'
      description: 'Retrieves the collection of LanguageHouse resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: languageHouseId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'languageHouseId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postLanguageHouseCollection
      tags:
        - LanguageHouse
      responses:
        201:
          description: 'LanguageHouse resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
          links:
            GetLanguageHouseItem:
              operationId: getLanguageHouseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /language_houses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LanguageHouse resource.'
      description: 'Creates a LanguageHouse resource.'
      parameters: []
      requestBody:
        description: 'The new LanguageHouse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/language_houses/{id}':
    get:
      operationId: getLanguageHouseItem
      tags:
        - LanguageHouse
      responses:
        200:
          description: 'LanguageHouse resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LanguageHouse resource.'
      description: 'Retrieves a LanguageHouse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putLanguageHouseItem
      tags:
        - LanguageHouse
      responses:
        200:
          description: 'LanguageHouse resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
          links:
            GetLanguageHouseItem:
              operationId: getLanguageHouseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /language_houses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LanguageHouse resource.'
      description: 'Replaces the LanguageHouse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LanguageHouse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteLanguageHouseItem
      tags:
        - LanguageHouse
      responses:
        204:
          description: 'LanguageHouse resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LanguageHouse resource.'
      description: 'Removes the LanguageHouse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchLanguageHouseItem
      tags:
        - LanguageHouse
      responses:
        200:
          description: 'LanguageHouse resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LanguageHouse.jsonld'
          links:
            GetLanguageHouseItem:
              operationId: getLanguageHouseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /language_houses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the LanguageHouse resource.'
      description: 'Updates the LanguageHouse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LanguageHouse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/LanguageHouse.jsonld'
        required: true
      deprecated: false
    parameters: []
  /learning_needs:
    get:
      operationId: getLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        201:
          description: 'LearningNeed resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LearningNeed resource.'
      description: 'Creates a LearningNeed resource.'
      parameters: []
      requestBody:
        description: 'The new LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/learning_needs/{id}':
    get:
      operationId: get_learning_needLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    put:
      operationId: putLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LearningNeed resource.'
      description: 'Replaces the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteLearningNeedItem
      tags:
        - LearningNeed
      responses:
        204:
          description: 'LearningNeed resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LearningNeed resource.'
      description: 'Removes the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchLearningNeedItem
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/LearningNeed.jsonld'
          links:
            GetLearningNeedItem:
              operationId: getLearningNeedItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the LearningNeed resource.'
      description: 'Updates the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LearningNeed resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/learning_needs/{id}/delete':
    get:
      operationId: delete_learning_needLearningNeedCollection
      tags:
        - LearningNeed
      responses:
        200:
          description: 'LearningNeed collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of LearningNeed resources.'
      description: 'Retrieves the collection of LearningNeed resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    parameters: []
  /participations:
    get:
      operationId: getParticipationCollection
      tags:
        - Participation
      responses:
        200:
          description: 'Participation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Participation resources.'
      description: 'Retrieves the collection of Participation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: learningNeedId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'learningNeedId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postParticipationCollection
      tags:
        - Participation
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Participation resource.'
      description: 'Creates a Participation resource.'
      parameters: []
      requestBody:
        description: 'The new Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/participations/{id}':
    get:
      operationId: getParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Participation resource.'
      description: 'Retrieves a Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Participation resource.'
      description: 'Replaces the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteParticipationItem
      tags:
        - Participation
      responses:
        204:
          description: 'Participation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Participation resource.'
      description: 'Removes the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchParticipationItem
      tags:
        - Participation
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Participation.jsonld'
          links:
            GetParticipationItem:
              operationId: getParticipationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Participation resource.'
      description: 'Updates the Participation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Participation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation.jsonld'
        required: true
      deprecated: false
    parameters: []
  /providers:
    get:
      operationId: getProviderCollection
      tags:
        - Provider
      responses:
        200:
          description: 'Provider collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Provider resources.'
      description: 'Retrieves the collection of Provider resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: providerId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'providerId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postProviderCollection
      tags:
        - Provider
      responses:
        201:
          description: 'Provider resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
          links:
            GetProviderItem:
              operationId: getProviderItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /providers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Provider resource.'
      description: 'Creates a Provider resource.'
      parameters: []
      requestBody:
        description: 'The new Provider resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/providers/{id}':
    get:
      operationId: getProviderItem
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Provider resource.'
      description: 'Retrieves a Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putProviderItem
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
          links:
            GetProviderItem:
              operationId: getProviderItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /providers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Provider resource.'
      description: 'Replaces the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Provider resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteProviderItem
      tags:
        - Provider
      responses:
        204:
          description: 'Provider resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Provider resource.'
      description: 'Removes the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchProviderItem
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Provider.jsonld'
          links:
            GetProviderItem:
              operationId: getProviderItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /providers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Provider resource.'
      description: 'Updates the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Provider resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider.jsonld'
        required: true
      deprecated: false
    parameters: []
  /register_student_registrars:
    get:
      operationId: getRegisterStudentRegistrarCollection
      tags:
        - RegisterStudentRegistrar
      responses:
        200:
          description: 'RegisterStudentRegistrar collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of RegisterStudentRegistrar resources.'
      description: 'Retrieves the collection of RegisterStudentRegistrar resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postRegisterStudentRegistrarCollection
      tags:
        - RegisterStudentRegistrar
      responses:
        201:
          description: 'RegisterStudentRegistrar resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          links:
            GetRegisterStudentRegistrarItem:
              operationId: getRegisterStudentRegistrarItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /register_student_registrars/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a RegisterStudentRegistrar resource.'
      description: 'Creates a RegisterStudentRegistrar resource.'
      parameters: []
      requestBody:
        description: 'The new RegisterStudentRegistrar resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/register_student_registrars/{id}':
    get:
      operationId: getRegisterStudentRegistrarItem
      tags:
        - RegisterStudentRegistrar
      responses:
        200:
          description: 'RegisterStudentRegistrar resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a RegisterStudentRegistrar resource.'
      description: 'Retrieves a RegisterStudentRegistrar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putRegisterStudentRegistrarItem
      tags:
        - RegisterStudentRegistrar
      responses:
        200:
          description: 'RegisterStudentRegistrar resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          links:
            GetRegisterStudentRegistrarItem:
              operationId: getRegisterStudentRegistrarItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /register_student_registrars/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the RegisterStudentRegistrar resource.'
      description: 'Replaces the RegisterStudentRegistrar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated RegisterStudentRegistrar resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteRegisterStudentRegistrarItem
      tags:
        - RegisterStudentRegistrar
      responses:
        204:
          description: 'RegisterStudentRegistrar resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the RegisterStudentRegistrar resource.'
      description: 'Removes the RegisterStudentRegistrar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchRegisterStudentRegistrarItem
      tags:
        - RegisterStudentRegistrar
      responses:
        200:
          description: 'RegisterStudentRegistrar resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          links:
            GetRegisterStudentRegistrarItem:
              operationId: getRegisterStudentRegistrarItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /register_student_registrars/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the RegisterStudentRegistrar resource.'
      description: 'Updates the RegisterStudentRegistrar resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated RegisterStudentRegistrar resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/RegisterStudentRegistrar.jsonld'
        required: true
      deprecated: false
    parameters: []
  /register_students:
    get:
      operationId: getRegisterStudentCollection
      tags:
        - RegisterStudent
      responses:
        200:
          description: 'RegisterStudent collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RegisterStudent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of RegisterStudent resources.'
      description: 'Retrieves the collection of RegisterStudent resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postRegisterStudentCollection
      tags:
        - RegisterStudent
      responses:
        201:
          description: 'RegisterStudent resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
          links:
            GetRegisterStudentItem:
              operationId: getRegisterStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /register_students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a RegisterStudent resource.'
      description: 'Creates a RegisterStudent resource.'
      parameters: []
      requestBody:
        description: 'The new RegisterStudent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/register_students/{id}':
    get:
      operationId: getRegisterStudentItem
      tags:
        - RegisterStudent
      responses:
        200:
          description: 'RegisterStudent resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a RegisterStudent resource.'
      description: 'Retrieves a RegisterStudent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putRegisterStudentItem
      tags:
        - RegisterStudent
      responses:
        200:
          description: 'RegisterStudent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
          links:
            GetRegisterStudentItem:
              operationId: getRegisterStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /register_students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the RegisterStudent resource.'
      description: 'Replaces the RegisterStudent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated RegisterStudent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteRegisterStudentItem
      tags:
        - RegisterStudent
      responses:
        204:
          description: 'RegisterStudent resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the RegisterStudent resource.'
      description: 'Removes the RegisterStudent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchRegisterStudentItem
      tags:
        - RegisterStudent
      responses:
        200:
          description: 'RegisterStudent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/RegisterStudent.jsonld'
          links:
            GetRegisterStudentItem:
              operationId: getRegisterStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /register_students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the RegisterStudent resource.'
      description: 'Updates the RegisterStudent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated RegisterStudent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/RegisterStudent.jsonld'
        required: true
      deprecated: false
    parameters: []
  /registrations:
    get:
      operationId: getRegistrationCollection
      tags:
        - Registration
      responses:
        200:
          description: 'Registration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Registration resources.'
      description: 'Retrieves the collection of Registration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: languageHouseId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'languageHouseId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postRegistrationCollection
      tags:
        - Registration
      responses:
        201:
          description: 'Registration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Registration resource.'
      description: 'Creates a Registration resource.'
      parameters: []
      requestBody:
        description: 'The new Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/registrations/{id}':
    get:
      operationId: getRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Registration resource.'
      description: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Registration resource.'
      description: 'Replaces the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteRegistrationItem
      tags:
        - Registration
      responses:
        204:
          description: 'Registration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Registration resource.'
      description: 'Removes the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchRegistrationItem
      tags:
        - Registration
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Registration.jsonld'
          links:
            GetRegistrationItem:
              operationId: getRegistrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Registration resource.'
      description: 'Updates the Registration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Registration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration.jsonld'
        required: true
      deprecated: false
    parameters: []
  /reports:
    get:
      operationId: getReportCollection
      tags:
        - Report
      responses:
        200:
          description: 'Report collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Report.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Report resources.'
      description: 'Retrieves the collection of Report resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postReportCollection
      tags:
        - Report
      responses:
        201:
          description: 'Report resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Report resource.'
      description: 'Creates a Report resource.'
      parameters: []
      requestBody:
        description: 'The new Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/reports/{id}':
    get:
      operationId: getReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Report resource.'
      description: 'Retrieves a Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Report resource.'
      description: 'Replaces the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteReportItem
      tags:
        - Report
      responses:
        204:
          description: 'Report resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Report resource.'
      description: 'Removes the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchReportItem
      tags:
        - Report
      responses:
        200:
          description: 'Report resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Report.jsonld'
          links:
            GetReportItem:
              operationId: getReportItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reports/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Report resource.'
      description: 'Updates the Report resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Report resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Report.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_availabilities:
    get:
      operationId: getStudentAvailabilityCollection
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentAvailability.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentAvailability resources.'
      description: 'Retrieves the collection of StudentAvailability resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentAvailabilityCollection
      tags:
        - StudentAvailability
      responses:
        201:
          description: 'StudentAvailability resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentAvailability resource.'
      description: 'Creates a StudentAvailability resource.'
      parameters: []
      requestBody:
        description: 'The new StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_availabilities/{id}':
    get:
      operationId: getStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentAvailability resource.'
      description: 'Retrieves a StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentAvailability resource.'
      description: 'Replaces the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        204:
          description: 'StudentAvailability resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentAvailability resource.'
      description: 'Removes the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentAvailabilityItem
      tags:
        - StudentAvailability
      responses:
        200:
          description: 'StudentAvailability resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentAvailability.jsonld'
          links:
            GetStudentAvailabilityItem:
              operationId: getStudentAvailabilityItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_availabilities/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentAvailability resource.'
      description: 'Updates the StudentAvailability resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentAvailability resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentAvailability.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_backgrounds:
    get:
      operationId: getStudentBackgroundCollection
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentBackground.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentBackground resources.'
      description: 'Retrieves the collection of StudentBackground resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentBackgroundCollection
      tags:
        - StudentBackground
      responses:
        201:
          description: 'StudentBackground resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentBackground resource.'
      description: 'Creates a StudentBackground resource.'
      parameters: []
      requestBody:
        description: 'The new StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_backgrounds/{id}':
    get:
      operationId: getStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentBackground resource.'
      description: 'Retrieves a StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentBackground resource.'
      description: 'Replaces the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        204:
          description: 'StudentBackground resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentBackground resource.'
      description: 'Removes the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentBackgroundItem
      tags:
        - StudentBackground
      responses:
        200:
          description: 'StudentBackground resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentBackground.jsonld'
          links:
            GetStudentBackgroundItem:
              operationId: getStudentBackgroundItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_backgrounds/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentBackground resource.'
      description: 'Updates the StudentBackground resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentBackground resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentBackground.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_civic_integrations:
    get:
      operationId: getStudentCivicIntegrationCollection
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCivicIntegration.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentCivicIntegration resources.'
      description: 'Retrieves the collection of StudentCivicIntegration resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCivicIntegrationCollection
      tags:
        - StudentCivicIntegration
      responses:
        201:
          description: 'StudentCivicIntegration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentCivicIntegration resource.'
      description: 'Creates a StudentCivicIntegration resource.'
      parameters: []
      requestBody:
        description: 'The new StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_civic_integrations/{id}':
    get:
      operationId: getStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCivicIntegration resource.'
      description: 'Retrieves a StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentCivicIntegration resource.'
      description: 'Replaces the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        204:
          description: 'StudentCivicIntegration resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentCivicIntegration resource.'
      description: 'Removes the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentCivicIntegrationItem
      tags:
        - StudentCivicIntegration
      responses:
        200:
          description: 'StudentCivicIntegration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          links:
            GetStudentCivicIntegrationItem:
              operationId: getStudentCivicIntegrationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_civic_integrations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentCivicIntegration resource.'
      description: 'Updates the StudentCivicIntegration resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCivicIntegration resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCivicIntegration.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_contacts:
    get:
      operationId: getStudentContactCollection
      tags:
        - StudentContact
      responses:
        200:
          description: 'StudentContact collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentContact.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentContact resources.'
      description: 'Retrieves the collection of StudentContact resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentContactCollection
      tags:
        - StudentContact
      responses:
        201:
          description: 'StudentContact resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
          links:
            GetStudentContactItem:
              operationId: getStudentContactItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_contacts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentContact resource.'
      description: 'Creates a StudentContact resource.'
      parameters: []
      requestBody:
        description: 'The new StudentContact resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_contacts/{id}':
    get:
      operationId: getStudentContactItem
      tags:
        - StudentContact
      responses:
        200:
          description: 'StudentContact resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentContact resource.'
      description: 'Retrieves a StudentContact resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentContactItem
      tags:
        - StudentContact
      responses:
        200:
          description: 'StudentContact resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
          links:
            GetStudentContactItem:
              operationId: getStudentContactItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_contacts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentContact resource.'
      description: 'Replaces the StudentContact resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentContact resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentContactItem
      tags:
        - StudentContact
      responses:
        204:
          description: 'StudentContact resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentContact resource.'
      description: 'Removes the StudentContact resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentContactItem
      tags:
        - StudentContact
      responses:
        200:
          description: 'StudentContact resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentContact.jsonld'
          links:
            GetStudentContactItem:
              operationId: getStudentContactItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_contacts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentContact resource.'
      description: 'Updates the StudentContact resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentContact resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentContact.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_courses:
    get:
      operationId: getStudentCourseCollection
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentCourse.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentCourse resources.'
      description: 'Retrieves the collection of StudentCourse resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCourseCollection
      tags:
        - StudentCourse
      responses:
        201:
          description: 'StudentCourse resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentCourse resource.'
      description: 'Creates a StudentCourse resource.'
      parameters: []
      requestBody:
        description: 'The new StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_courses/{id}':
    get:
      operationId: getStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentCourse resource.'
      description: 'Retrieves a StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentCourse resource.'
      description: 'Replaces the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentCourseItem
      tags:
        - StudentCourse
      responses:
        204:
          description: 'StudentCourse resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentCourse resource.'
      description: 'Removes the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentCourseItem
      tags:
        - StudentCourse
      responses:
        200:
          description: 'StudentCourse resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentCourse.jsonld'
          links:
            GetStudentCourseItem:
              operationId: getStudentCourseItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_courses/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentCourse resource.'
      description: 'Updates the StudentCourse resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentCourse resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentCourse.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_dossier_events:
    get:
      operationId: getStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDossierEvent.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentDossierEvent resources.'
      description: 'Retrieves the collection of StudentDossierEvent resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: studentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'studentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentDossierEventCollection
      tags:
        - StudentDossierEvent
      responses:
        201:
          description: 'StudentDossierEvent resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentDossierEvent resource.'
      description: 'Creates a StudentDossierEvent resource.'
      parameters: []
      requestBody:
        description: 'The new StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_dossier_events/{id}':
    get:
      operationId: getStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDossierEvent resource.'
      description: 'Retrieves a StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentDossierEvent resource.'
      description: 'Replaces the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        204:
          description: 'StudentDossierEvent resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentDossierEvent resource.'
      description: 'Removes the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentDossierEventItem
      tags:
        - StudentDossierEvent
      responses:
        200:
          description: 'StudentDossierEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          links:
            GetStudentDossierEventItem:
              operationId: getStudentDossierEventItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dossier_events/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentDossierEvent resource.'
      description: 'Updates the StudentDossierEvent resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDossierEvent resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDossierEvent.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_dutch_n_ts:
    get:
      operationId: getStudentDutchNTCollection
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentDutchNT.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentDutchNT resources.'
      description: 'Retrieves the collection of StudentDutchNT resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentDutchNTCollection
      tags:
        - StudentDutchNT
      responses:
        201:
          description: 'StudentDutchNT resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentDutchNT resource.'
      description: 'Creates a StudentDutchNT resource.'
      parameters: []
      requestBody:
        description: 'The new StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_dutch_n_ts/{id}':
    get:
      operationId: getStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentDutchNT resource.'
      description: 'Retrieves a StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentDutchNT resource.'
      description: 'Replaces the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        204:
          description: 'StudentDutchNT resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentDutchNT resource.'
      description: 'Removes the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentDutchNTItem
      tags:
        - StudentDutchNT
      responses:
        200:
          description: 'StudentDutchNT resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentDutchNT.jsonld'
          links:
            GetStudentDutchNTItem:
              operationId: getStudentDutchNTItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_dutch_n_ts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentDutchNT resource.'
      description: 'Updates the StudentDutchNT resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentDutchNT resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentDutchNT.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_educations:
    get:
      operationId: getStudentEducationCollection
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentEducation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentEducation resources.'
      description: 'Retrieves the collection of StudentEducation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentEducationCollection
      tags:
        - StudentEducation
      responses:
        201:
          description: 'StudentEducation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentEducation resource.'
      description: 'Creates a StudentEducation resource.'
      parameters: []
      requestBody:
        description: 'The new StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_educations/{id}':
    get:
      operationId: getStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentEducation resource.'
      description: 'Retrieves a StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentEducation resource.'
      description: 'Replaces the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentEducationItem
      tags:
        - StudentEducation
      responses:
        204:
          description: 'StudentEducation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentEducation resource.'
      description: 'Removes the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentEducationItem
      tags:
        - StudentEducation
      responses:
        200:
          description: 'StudentEducation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentEducation.jsonld'
          links:
            GetStudentEducationItem:
              operationId: getStudentEducationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_educations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentEducation resource.'
      description: 'Updates the StudentEducation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentEducation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentEducation.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_generals:
    get:
      operationId: getStudentGeneralCollection
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentGeneral.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentGeneral resources.'
      description: 'Retrieves the collection of StudentGeneral resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentGeneralCollection
      tags:
        - StudentGeneral
      responses:
        201:
          description: 'StudentGeneral resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentGeneral resource.'
      description: 'Creates a StudentGeneral resource.'
      parameters: []
      requestBody:
        description: 'The new StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_generals/{id}':
    get:
      operationId: getStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentGeneral resource.'
      description: 'Retrieves a StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentGeneral resource.'
      description: 'Replaces the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        204:
          description: 'StudentGeneral resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentGeneral resource.'
      description: 'Removes the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentGeneralItem
      tags:
        - StudentGeneral
      responses:
        200:
          description: 'StudentGeneral resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentGeneral.jsonld'
          links:
            GetStudentGeneralItem:
              operationId: getStudentGeneralItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_generals/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentGeneral resource.'
      description: 'Updates the StudentGeneral resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentGeneral resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentGeneral.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_intake_details:
    get:
      operationId: getStudentIntakeDetailCollection
      tags:
        - StudentIntakeDetail
      responses:
        200:
          description: 'StudentIntakeDetail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentIntakeDetail.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentIntakeDetail resources.'
      description: 'Retrieves the collection of StudentIntakeDetail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentIntakeDetailCollection
      tags:
        - StudentIntakeDetail
      responses:
        201:
          description: 'StudentIntakeDetail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          links:
            GetStudentIntakeDetailItem:
              operationId: getStudentIntakeDetailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_intake_details/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentIntakeDetail resource.'
      description: 'Creates a StudentIntakeDetail resource.'
      parameters: []
      requestBody:
        description: 'The new StudentIntakeDetail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_intake_details/{id}':
    get:
      operationId: getStudentIntakeDetailItem
      tags:
        - StudentIntakeDetail
      responses:
        200:
          description: 'StudentIntakeDetail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentIntakeDetail resource.'
      description: 'Retrieves a StudentIntakeDetail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentIntakeDetailItem
      tags:
        - StudentIntakeDetail
      responses:
        200:
          description: 'StudentIntakeDetail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          links:
            GetStudentIntakeDetailItem:
              operationId: getStudentIntakeDetailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_intake_details/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentIntakeDetail resource.'
      description: 'Replaces the StudentIntakeDetail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentIntakeDetail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentIntakeDetailItem
      tags:
        - StudentIntakeDetail
      responses:
        204:
          description: 'StudentIntakeDetail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentIntakeDetail resource.'
      description: 'Removes the StudentIntakeDetail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentIntakeDetailItem
      tags:
        - StudentIntakeDetail
      responses:
        200:
          description: 'StudentIntakeDetail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          links:
            GetStudentIntakeDetailItem:
              operationId: getStudentIntakeDetailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_intake_details/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentIntakeDetail resource.'
      description: 'Updates the StudentIntakeDetail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentIntakeDetail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentIntakeDetail.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_jobs:
    get:
      operationId: getStudentJobCollection
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentJob.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentJob resources.'
      description: 'Retrieves the collection of StudentJob resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentJobCollection
      tags:
        - StudentJob
      responses:
        201:
          description: 'StudentJob resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentJob resource.'
      description: 'Creates a StudentJob resource.'
      parameters: []
      requestBody:
        description: 'The new StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_jobs/{id}':
    get:
      operationId: getStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentJob resource.'
      description: 'Retrieves a StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentJob resource.'
      description: 'Replaces the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentJobItem
      tags:
        - StudentJob
      responses:
        204:
          description: 'StudentJob resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentJob resource.'
      description: 'Removes the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentJobItem
      tags:
        - StudentJob
      responses:
        200:
          description: 'StudentJob resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentJob.jsonld'
          links:
            GetStudentJobItem:
              operationId: getStudentJobItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_jobs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentJob resource.'
      description: 'Updates the StudentJob resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentJob resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentJob.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_motivations:
    get:
      operationId: getStudentMotivationCollection
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentMotivation.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentMotivation resources.'
      description: 'Retrieves the collection of StudentMotivation resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentMotivationCollection
      tags:
        - StudentMotivation
      responses:
        201:
          description: 'StudentMotivation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentMotivation resource.'
      description: 'Creates a StudentMotivation resource.'
      parameters: []
      requestBody:
        description: 'The new StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_motivations/{id}':
    get:
      operationId: getStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentMotivation resource.'
      description: 'Retrieves a StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentMotivation resource.'
      description: 'Replaces the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        204:
          description: 'StudentMotivation resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentMotivation resource.'
      description: 'Removes the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentMotivationItem
      tags:
        - StudentMotivation
      responses:
        200:
          description: 'StudentMotivation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentMotivation.jsonld'
          links:
            GetStudentMotivationItem:
              operationId: getStudentMotivationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_motivations/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentMotivation resource.'
      description: 'Updates the StudentMotivation resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentMotivation resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentMotivation.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_people:
    get:
      operationId: getStudentPersonCollection
      tags:
        - StudentPerson
      responses:
        200:
          description: 'StudentPerson collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPerson.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentPerson resources.'
      description: 'Retrieves the collection of StudentPerson resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentPersonCollection
      tags:
        - StudentPerson
      responses:
        201:
          description: 'StudentPerson resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
          links:
            GetStudentPersonItem:
              operationId: getStudentPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentPerson resource.'
      description: 'Creates a StudentPerson resource.'
      parameters: []
      requestBody:
        description: 'The new StudentPerson resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_people/{id}':
    get:
      operationId: getStudentPersonItem
      tags:
        - StudentPerson
      responses:
        200:
          description: 'StudentPerson resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentPerson resource.'
      description: 'Retrieves a StudentPerson resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentPersonItem
      tags:
        - StudentPerson
      responses:
        200:
          description: 'StudentPerson resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
          links:
            GetStudentPersonItem:
              operationId: getStudentPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentPerson resource.'
      description: 'Replaces the StudentPerson resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentPerson resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentPersonItem
      tags:
        - StudentPerson
      responses:
        204:
          description: 'StudentPerson resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentPerson resource.'
      description: 'Removes the StudentPerson resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentPersonItem
      tags:
        - StudentPerson
      responses:
        200:
          description: 'StudentPerson resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPerson.jsonld'
          links:
            GetStudentPersonItem:
              operationId: getStudentPersonItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_people/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentPerson resource.'
      description: 'Updates the StudentPerson resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentPerson resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPerson.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_permissions:
    get:
      operationId: getStudentPermissionCollection
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentPermission.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentPermission resources.'
      description: 'Retrieves the collection of StudentPermission resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentPermissionCollection
      tags:
        - StudentPermission
      responses:
        201:
          description: 'StudentPermission resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentPermission resource.'
      description: 'Creates a StudentPermission resource.'
      parameters: []
      requestBody:
        description: 'The new StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_permissions/{id}':
    get:
      operationId: getStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentPermission resource.'
      description: 'Retrieves a StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentPermission resource.'
      description: 'Replaces the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        204:
          description: 'StudentPermission resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentPermission resource.'
      description: 'Removes the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentPermissionItem
      tags:
        - StudentPermission
      responses:
        200:
          description: 'StudentPermission resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentPermission.jsonld'
          links:
            GetStudentPermissionItem:
              operationId: getStudentPermissionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_permissions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentPermission resource.'
      description: 'Updates the StudentPermission resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentPermission resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentPermission.jsonld'
        required: true
      deprecated: false
    parameters: []
  /student_referrers:
    get:
      operationId: getStudentReferrerCollection
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/StudentReferrer.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of StudentReferrer resources.'
      description: 'Retrieves the collection of StudentReferrer resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentReferrerCollection
      tags:
        - StudentReferrer
      responses:
        201:
          description: 'StudentReferrer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a StudentReferrer resource.'
      description: 'Creates a StudentReferrer resource.'
      parameters: []
      requestBody:
        description: 'The new StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/student_referrers/{id}':
    get:
      operationId: getStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a StudentReferrer resource.'
      description: 'Retrieves a StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the StudentReferrer resource.'
      description: 'Replaces the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        204:
          description: 'StudentReferrer resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the StudentReferrer resource.'
      description: 'Removes the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentReferrerItem
      tags:
        - StudentReferrer
      responses:
        200:
          description: 'StudentReferrer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/StudentReferrer.jsonld'
          links:
            GetStudentReferrerItem:
              operationId: getStudentReferrerItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /student_referrers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the StudentReferrer resource.'
      description: 'Updates the StudentReferrer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated StudentReferrer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/StudentReferrer.jsonld'
        required: true
      deprecated: false
    parameters: []
  /students:
    get:
      operationId: getStudentCollection
      tags:
        - Student
      responses:
        200:
          description: 'Student collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Student resources.'
      description: 'Retrieves the collection of Student resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: languageHouseId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'languageHouseId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: providerId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'providerId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: groupId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'groupId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: aanbiederEmployeeId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'aanbiederEmployeeId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postStudentCollection
      tags:
        - Student
      responses:
        201:
          description: 'Student resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Student resource.'
      description: 'Creates a Student resource.'
      parameters: []
      requestBody:
        description: 'The new Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/students/{id}':
    get:
      operationId: getStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Student resource.'
      description: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Student resource.'
      description: 'Replaces the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteStudentItem
      tags:
        - Student
      responses:
        204:
          description: 'Student resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Student resource.'
      description: 'Removes the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchStudentItem
      tags:
        - Student
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/Student.jsonld'
          links:
            GetStudentItem:
              operationId: getStudentItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the Student resource.'
      description: 'Updates the Student resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Student resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/Student.jsonld'
        required: true
      deprecated: false
    parameters: []
  /test_results:
    get:
      operationId: getTestResultCollection
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TestResult.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of TestResult resources.'
      description: 'Retrieves the collection of TestResult resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: participationId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'participationId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postTestResultCollection
      tags:
        - TestResult
      responses:
        201:
          description: 'TestResult resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a TestResult resource.'
      description: 'Creates a TestResult resource.'
      parameters: []
      requestBody:
        description: 'The new TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/test_results/{id}':
    get:
      operationId: getTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a TestResult resource.'
      description: 'Retrieves a TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the TestResult resource.'
      description: 'Replaces the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteTestResultItem
      tags:
        - TestResult
      responses:
        204:
          description: 'TestResult resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the TestResult resource.'
      description: 'Removes the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchTestResultItem
      tags:
        - TestResult
      responses:
        200:
          description: 'TestResult resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/TestResult.jsonld'
          links:
            GetTestResultItem:
              operationId: getTestResultItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /test_results/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the TestResult resource.'
      description: 'Updates the TestResult resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated TestResult resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/TestResult.jsonld'
        required: true
      deprecated: false
    parameters: []
  /users:
    get:
      operationId: getUserCollection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+hal:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+vnd.api:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/health+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+health:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/xml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/x-yaml:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/csv:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/graphql:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User.jsonld'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User.jsonld'
        required: true
      deprecated: false
    parameters: []
  '/users/{id}':
    get:
      operationId: getUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User.jsonld'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User.jsonld'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the User resource.'
      description: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/graphql:
            schema:
              $ref: '#/components/schemas/User.jsonld'
        required: true
      deprecated: false
    delete:
      operationId: deleteUserItem
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/xml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/csv:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/User.jsonld'
            application/graphql:
              schema:
                $ref: '#/components/schemas/User.jsonld'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the User resource.'
      description: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          application/xml:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          text/csv:
            schema:
              $ref: '#/components/schemas/User.jsonld'
          text/html:
            schema:
              $ref: '#/components/schemas/User.jsonld'
        required: true
      deprecated: false
    parameters: []
components:
  schemas:
    Address:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    Address.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
    Availability:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        monday:
          type: string
          format: iri-reference
        tuesday:
          type: string
          format: iri-reference
        wednesday:
          type: string
          format: iri-reference
        thursday:
          type: string
          format: iri-reference
        friday:
          type: string
          format: iri-reference
        saturday:
          type: string
          format: iri-reference
        sunday:
          type: string
          format: iri-reference
    Availability.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        monday:
          type: string
          format: iri-reference
        tuesday:
          type: string
          format: iri-reference
        wednesday:
          type: string
          format: iri-reference
        thursday:
          type: string
          format: iri-reference
        friday:
          type: string
          format: iri-reference
        saturday:
          type: string
          format: iri-reference
        sunday:
          type: string
          format: iri-reference
    AvailabilityDay:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        morning:
          type: boolean
        afternoon:
          type: boolean
        evening:
          type: boolean
    AvailabilityDay.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        morning:
          type: boolean
        afternoon:
          type: boolean
        evening:
          type: boolean
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
    CurrentEducationNoButDidFollow:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dateUntil:
          type: string
          format: date-time
          nullable: true
        level:
          type: string
          nullable: true
        gotCertificate:
          type: boolean
          nullable: true
    CurrentEducationNoButDidFollow.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dateUntil:
          type: string
          format: date-time
          nullable: true
        level:
          type: string
          nullable: true
        gotCertificate:
          type: boolean
          nullable: true
    CurrentEducationYes:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dateSince:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        doesProvideCertificate:
          type: boolean
          nullable: true
    CurrentEducationYes.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dateSince:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        doesProvideCertificate:
          type: boolean
          nullable: true
    Document:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        base64data:
          description: 'the base64 of the document'
          type: string
        filename:
          description: 'the name of the file'
          type: string
        aanbiederEmployeeId:
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        aanbiederEmployeeDocumentId:
          type: string
          nullable: true
        studentDocumentId:
          type: string
          nullable: true
        dateCreated:
          type: string
          nullable: true
      required:
        - base64data
        - filename
    Document.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        base64data:
          description: 'the base64 of the document'
          type: string
        filename:
          description: 'the name of the file'
          type: string
        aanbiederEmployeeId:
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        aanbiederEmployeeDocumentId:
          type: string
          nullable: true
        studentDocumentId:
          type: string
          nullable: true
        dateCreated:
          type: string
          nullable: true
      required:
        - base64data
        - filename
    Employee:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          maxLength: 255
          description: 'The Name of this Employee.'
          type: string
        additionalName:
          maxLength: 255
          description: 'The PrefixName of this Employee.'
          type: string
          nullable: true
        familyName:
          maxLength: 255
          description: 'The LastName of this Employee.'
          type: string
        telephone:
          maxLength: 255
          description: 'The Telephone of this Employee.'
          type: string
          nullable: true
        availability:
          description: 'The availability for this employee'
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        email:
          maxLength: 2550
          description: 'The Email of this Employee.'
          type: string
        userGroupIds:
          type: array
          items:
            type: string
          nullable: true
        gender:
          description: 'The Gender of this Employee. **Male**, **Female**, **X**'
          type: string
          nullable: true
        dateOfBirth:
          description: 'Date of birth of this Employee.'
          type: string
          format: date-time
          nullable: true
        address:
          description: 'The address of this Employee.'
          type: array
          items:
            type: string
          nullable: true
        contactTelephone:
          maxLength: 255
          description: 'Contact Telephone of this Employee.'
          type: string
          nullable: true
        contactPreference:
          description: 'Contact Preference of this Employee.**PHONECALL**, **WHATSAPP**, **EMAIL**, **OTHER**'
          type: string
          nullable: true
        contactPreferenceOther:
          type: string
          nullable: true
        targetGroupPreferences:
          description: 'Target Preference of this Employee. **NT1**, **NT2**'
          type: array
          items:
            type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: |-
            Volunteering Preference of this Employee.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        gotHereVia:
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          type: boolean
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'Shouldn''t this be a string to provide the reason for the experience with the target group?'
          type: boolean
          nullable: true
        currentEducation:
          type: string
          nullable: true
        currentEducationYes:
          type: array
          items:
            type: string
          nullable: true
        currentEducationNoButDidFollow:
          type: array
          items:
            type: string
          nullable: true
        doesCurrentlyFollowCourse:
          type: boolean
          nullable: true
        currentlyFollowingCourseName:
          type: string
          nullable: true
        currentlyFollowingCourseInstitute:
          type: string
          nullable: true
        currentlyFollowingCourseTeacherProfessionalism:
          type: string
          nullable: true
        currentlyFollowingCourseCourseProfessionalism:
          type: string
          nullable: true
        doesCurrentlyFollowingCourseProvideCertificate:
          type: boolean
          nullable: true
        otherRelevantCertificates:
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        providerId:
          description: 'The provider this employee works for'
          type: string
          nullable: true
        languageHouseId:
          description: 'The language house this employee works for'
          type: string
          nullable: true
        biscEmployeeId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        userRoles:
          description: 'The user roles of this employee'
          type: array
          items:
            type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Employee.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          maxLength: 255
          description: 'The Name of this Employee.'
          type: string
        additionalName:
          maxLength: 255
          description: 'The PrefixName of this Employee.'
          type: string
          nullable: true
        familyName:
          maxLength: 255
          description: 'The LastName of this Employee.'
          type: string
        telephone:
          maxLength: 255
          description: 'The Telephone of this Employee.'
          type: string
          nullable: true
        availability:
          description: 'The availability for this employee'
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          maxLength: 2550
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        email:
          maxLength: 2550
          description: 'The Email of this Employee.'
          type: string
        userGroupIds:
          type: array
          items:
            type: string
          nullable: true
        gender:
          description: 'The Gender of this Employee. **Male**, **Female**, **X**'
          type: string
          nullable: true
        dateOfBirth:
          description: 'Date of birth of this Employee.'
          type: string
          format: date-time
          nullable: true
        address:
          description: 'The address of this Employee.'
          type: array
          items:
            type: string
          nullable: true
        contactTelephone:
          maxLength: 255
          description: 'Contact Telephone of this Employee.'
          type: string
          nullable: true
        contactPreference:
          description: 'Contact Preference of this Employee.**PHONECALL**, **WHATSAPP**, **EMAIL**, **OTHER**'
          type: string
          nullable: true
        contactPreferenceOther:
          type: string
          nullable: true
        targetGroupPreferences:
          description: 'Target Preference of this Employee. **NT1**, **NT2**'
          type: array
          items:
            type: string
          nullable: true
        volunteeringPreference:
          maxLength: 255
          description: |-
            Volunteering Preference of this Employee.

             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        gotHereVia:
          type: string
          nullable: true
        hasExperienceWithTargetGroup:
          type: boolean
          nullable: true
        experienceWithTargetGroupYesReason:
          description: 'Shouldn''t this be a string to provide the reason for the experience with the target group?'
          type: boolean
          nullable: true
        currentEducation:
          type: string
          nullable: true
        currentEducationYes:
          type: array
          items:
            type: string
          nullable: true
        currentEducationNoButDidFollow:
          type: array
          items:
            type: string
          nullable: true
        doesCurrentlyFollowCourse:
          type: boolean
          nullable: true
        currentlyFollowingCourseName:
          type: string
          nullable: true
        currentlyFollowingCourseInstitute:
          type: string
          nullable: true
        currentlyFollowingCourseTeacherProfessionalism:
          type: string
          nullable: true
        currentlyFollowingCourseCourseProfessionalism:
          type: string
          nullable: true
        doesCurrentlyFollowingCourseProvideCertificate:
          type: boolean
          nullable: true
        otherRelevantCertificates:
          type: string
          nullable: true
        isVOGChecked:
          description: 'Whether the employee has submitted a police certificate'
          type: boolean
          nullable: true
        providerId:
          description: 'The provider this employee works for'
          type: string
          nullable: true
        languageHouseId:
          description: 'The language house this employee works for'
          type: string
          nullable: true
        biscEmployeeId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        userRoles:
          description: 'The user roles of this employee'
          type: array
          items:
            type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    Group:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        aanbiederId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        typeCourse:
          type: string
          nullable: true
        outComesGoal:
          type: string
          nullable: true
        outComesTopic:
          type: string
          nullable: true
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
          nullable: true
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
          nullable: true
        outComesLevelOther:
          type: string
          nullable: true
        detailsIsFormal:
          type: string
          nullable: true
        detailsTotalClassHours:
          type: integer
          nullable: true
        detailsCertificateWillBeAwarded:
          type: boolean
          nullable: true
        detailsStartDate:
          type: string
          format: date-time
          nullable: true
        detailsEndDate:
          type: string
          format: date-time
          nullable: true
        availability:
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
        generalLocation:
          type: string
          nullable: true
        generalParticipantsMin:
          type: integer
          nullable: true
        generalParticipantsMax:
          type: integer
          nullable: true
        generalEvaluation:
          type: string
          nullable: true
        aanbiederEmployeeIds:
          type: array
          items:
            type: string
          nullable: true
        groupId:
          type: string
          nullable: true
    Group.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        aanbiederId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        typeCourse:
          type: string
          nullable: true
        outComesGoal:
          type: string
          nullable: true
        outComesTopic:
          type: string
          nullable: true
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
          nullable: true
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
          nullable: true
        outComesLevelOther:
          type: string
          nullable: true
        detailsIsFormal:
          type: string
          nullable: true
        detailsTotalClassHours:
          type: integer
          nullable: true
        detailsCertificateWillBeAwarded:
          type: boolean
          nullable: true
        detailsStartDate:
          type: string
          format: date-time
          nullable: true
        detailsEndDate:
          type: string
          format: date-time
          nullable: true
        availability:
          type: array
          items:
            type: string
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
        generalLocation:
          type: string
          nullable: true
        generalParticipantsMin:
          type: integer
          nullable: true
        generalParticipantsMax:
          type: integer
          nullable: true
        generalEvaluation:
          type: string
          nullable: true
        aanbiederEmployeeIds:
          type: array
          items:
            type: string
          nullable: true
        groupId:
          type: string
          nullable: true
    LanguageHouse:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The Name of this Taalhuis.'
          type: string
          nullable: true
        address:
          description: 'The address of this Taalhuis.'
          type: array
          items:
            type: string
          nullable: true
        phoneNumber:
          maxLength: 255
          description: 'The Telephone of this Provider.'
          type: string
          nullable: true
        email:
          maxLength: 2550
          description: 'The Email of this Provider.'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type LanguageHouse'
          type: string
          nullable: true
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse.'
          type: string
          nullable: true
    LanguageHouse.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The Name of this Taalhuis.'
          type: string
          nullable: true
        address:
          description: 'The address of this Taalhuis.'
          type: array
          items:
            type: string
          nullable: true
        phoneNumber:
          maxLength: 255
          description: 'The Telephone of this Provider.'
          type: string
          nullable: true
        email:
          maxLength: 2550
          description: 'The Email of this Provider.'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type LanguageHouse'
          type: string
          nullable: true
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse.'
          type: string
          nullable: true
    LearningNeed:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        learningNeedDescription:
          type: string
        learningNeedMotivation:
          type: string
        desiredOutComesGoal:
          type: string
        desiredOutComesTopic:
          type: string
        desiredOutComesTopicOther:
          type: string
          nullable: true
        desiredOutComesApplication:
          type: string
        desiredOutComesApplicationOther:
          type: string
          nullable: true
        desiredOutComesLevel:
          type: string
        desiredOutComesLevelOther:
          type: string
          nullable: true
        offerDesiredOffer:
          type: string
        offerAdvisedOffer:
          type: string
        offerDifference:
          type: string
        offerDifferenceOther:
          type: string
          nullable: true
        offerEngagements:
          type: string
          nullable: true
        participations:
          type: array
          items:
            type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        dateCreated:
          description: 'The dateCreated of a learningNeed, used for reports.'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    LearningNeed.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        learningNeedDescription:
          type: string
        learningNeedMotivation:
          type: string
        desiredOutComesGoal:
          type: string
        desiredOutComesTopic:
          type: string
        desiredOutComesTopicOther:
          type: string
          nullable: true
        desiredOutComesApplication:
          type: string
        desiredOutComesApplicationOther:
          type: string
          nullable: true
        desiredOutComesLevel:
          type: string
        desiredOutComesLevelOther:
          type: string
          nullable: true
        offerDesiredOffer:
          type: string
        offerAdvisedOffer:
          type: string
        offerDifference:
          type: string
        offerDifferenceOther:
          type: string
          nullable: true
        offerEngagements:
          type: string
          nullable: true
        participations:
          type: array
          items:
            type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        dateCreated:
          description: 'The dateCreated of a learningNeed, used for reports.'
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    Participation:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        aanbiederId:
          type: string
          nullable: true
        aanbiederName:
          type: string
          nullable: true
        aanbiederNote:
          type: string
          nullable: true
        offerName:
          type: string
          nullable: true
        offerCourse:
          type: string
          nullable: true
        outComesGoal:
          type: string
          nullable: true
        outComesTopic:
          type: string
          nullable: true
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
          nullable: true
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
          nullable: true
        outComesLevelOther:
          type: string
          nullable: true
        detailsIsFormal:
          type: boolean
          nullable: true
        detailsGroupFormation:
          type: string
          nullable: true
        detailsTotalClassHours:
          type: number
          nullable: true
        detailsCertificateWillBeAwarded:
          type: boolean
          nullable: true
        detailsStartDate:
          type: string
          format: date-time
          nullable: true
        detailsEndDate:
          type: string
          format: date-time
          nullable: true
        detailsEngagements:
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        participationId:
          type: string
          nullable: true
        presenceEngagements:
          type: string
          nullable: true
        presenceStartDate:
          type: string
          format: date-time
          nullable: true
        presenceEndDate:
          type: string
          format: date-time
          nullable: true
        presenceEndParticipationReason:
          type: string
          nullable: true
        aanbiederEmployeeId:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true
    Participation.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        aanbiederId:
          type: string
          nullable: true
        aanbiederName:
          type: string
          nullable: true
        aanbiederNote:
          type: string
          nullable: true
        offerName:
          type: string
          nullable: true
        offerCourse:
          type: string
          nullable: true
        outComesGoal:
          type: string
          nullable: true
        outComesTopic:
          type: string
          nullable: true
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
          nullable: true
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
          nullable: true
        outComesLevelOther:
          type: string
          nullable: true
        detailsIsFormal:
          type: boolean
          nullable: true
        detailsGroupFormation:
          type: string
          nullable: true
        detailsTotalClassHours:
          type: number
          nullable: true
        detailsCertificateWillBeAwarded:
          type: boolean
          nullable: true
        detailsStartDate:
          type: string
          format: date-time
          nullable: true
        detailsEndDate:
          type: string
          format: date-time
          nullable: true
        detailsEngagements:
          type: string
          nullable: true
        learningNeedId:
          description: 'The id of the objectEntity of an eav/learning_need.'
          type: string
          nullable: true
        learningNeedUrl:
          description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        participationId:
          type: string
          nullable: true
        presenceEngagements:
          type: string
          nullable: true
        presenceStartDate:
          type: string
          format: date-time
          nullable: true
        presenceEndDate:
          type: string
          format: date-time
          nullable: true
        presenceEndParticipationReason:
          type: string
          nullable: true
        aanbiederEmployeeId:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true
    Provider:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The Name of this Provider.'
          type: string
          nullable: true
        phoneNumber:
          maxLength: 255
          description: 'The Telephone of this Provider.'
          type: string
          nullable: true
        email:
          maxLength: 2550
          description: 'The Email of this Provider.'
          type: string
          nullable: true
        address:
          description: 'The address of this Aanbieder.'
          type: array
          items:
            type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type Aanbieder'
          type: string
          nullable: true
        providerId:
          description: 'The id of the cc/organization of a provider.'
          type: string
          nullable: true
    Provider.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          maxLength: 255
          description: 'The Name of this Provider.'
          type: string
          nullable: true
        phoneNumber:
          maxLength: 255
          description: 'The Telephone of this Provider.'
          type: string
          nullable: true
        email:
          maxLength: 2550
          description: 'The Email of this Provider.'
          type: string
          nullable: true
        address:
          description: 'The address of this Aanbieder.'
          type: array
          items:
            type: string
          nullable: true
        type:
          maxLength: 255
          description: 'Type Aanbieder'
          type: string
          nullable: true
        providerId:
          description: 'The id of the cc/organization of a provider.'
          type: string
          nullable: true
    RegisterStudent:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          type: string
        additionalName:
          type: string
          nullable: true
        familyName:
          type: string
        email:
          type: string
        telephone:
          type: string
          nullable: true
        address:
          description: 'The address of this Taalhuis.'
          type: array
          items:
            type: string
          nullable: true
      required:
        - givenName
        - familyName
        - email
        - telephone
    RegisterStudent.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          type: string
        additionalName:
          type: string
          nullable: true
        familyName:
          type: string
        email:
          type: string
        telephone:
          type: string
          nullable: true
        address:
          description: 'The address of this Taalhuis.'
          type: array
          items:
            type: string
          nullable: true
      required:
        - givenName
        - familyName
        - email
        - telephone
    RegisterStudentRegistrar:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        organizationName:
          type: string
        givenName:
          type: string
        additionalName:
          type: string
          nullable: true
        familyName:
          type: string
        email:
          type: string
        telephone:
          type: string
      required:
        - organizationName
        - givenName
        - familyName
        - email
        - telephone
    RegisterStudentRegistrar.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        organizationName:
          type: string
        givenName:
          type: string
        additionalName:
          type: string
          nullable: true
        familyName:
          type: string
        email:
          type: string
        telephone:
          type: string
      required:
        - organizationName
        - givenName
        - familyName
        - email
        - telephone
    Registration:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        languageHouseId:
          type: string
          nullable: true
        student:
          description: 'The student'
          type: array
          items:
            type: string
          nullable: true
        registrar:
          type: array
          items:
            type: string
          nullable: true
        memo:
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        civicIntegrationDetails:
          type: array
          items:
            type: string
          nullable: true
        personDetails:
          type: array
          items:
            type: string
          nullable: true
        contactDetails:
          type: array
          items:
            type: string
          nullable: true
        generalDetails:
          type: array
          items:
            type: string
          nullable: true
        referrerDetails:
          type: array
          items:
            type: string
          nullable: true
        backgroundDetails:
          type: array
          items:
            type: string
          nullable: true
        dutchNTDetails:
          type: array
          items:
            type: string
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: array
          items:
            type: string
          nullable: true
        courseDetails:
          type: array
          items:
            type: string
          nullable: true
        jobDetails:
          type: array
          items:
            type: string
          nullable: true
        motivationDetails:
          type: array
          items:
            type: string
          nullable: true
        availabilityDetails:
          type: array
          items:
            type: string
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: array
          items:
            type: string
          nullable: true
        intakeDetail:
          readOnly: true
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
          nullable: true
        intakeDetails:
          writeOnly: true
          type: string
          nullable: true
    Registration.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        languageHouseId:
          type: string
          nullable: true
        student:
          description: 'The student'
          type: array
          items:
            type: string
          nullable: true
        registrar:
          type: array
          items:
            type: string
          nullable: true
        memo:
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        civicIntegrationDetails:
          type: array
          items:
            type: string
          nullable: true
        personDetails:
          type: array
          items:
            type: string
          nullable: true
        contactDetails:
          type: array
          items:
            type: string
          nullable: true
        generalDetails:
          type: array
          items:
            type: string
          nullable: true
        referrerDetails:
          type: array
          items:
            type: string
          nullable: true
        backgroundDetails:
          type: array
          items:
            type: string
          nullable: true
        dutchNTDetails:
          type: array
          items:
            type: string
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: array
          items:
            type: string
          nullable: true
        courseDetails:
          type: array
          items:
            type: string
          nullable: true
        jobDetails:
          type: array
          items:
            type: string
          nullable: true
        motivationDetails:
          type: array
          items:
            type: string
          nullable: true
        availabilityDetails:
          type: array
          items:
            type: string
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: array
          items:
            type: string
          nullable: true
        intakeDetail:
          readOnly: true
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
          nullable: true
        intakeDetails:
          writeOnly: true
          type: string
          nullable: true
    Report:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          description: 'The language house the report applies to'
          type: string
          nullable: true
        providerId:
          description: 'The provider this report applies to'
          type: string
          nullable: true
        dateFrom:
          type: string
          nullable: true
        dateUntil:
          type: string
          nullable: true
        filename:
          description: 'The filename of the report'
          type: string
          nullable: true
        base64data:
          description: 'A base64 encoded string containing the file''s contents'
          type: string
          nullable: true
    Report.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        languageHouseId:
          description: 'The language house the report applies to'
          type: string
          nullable: true
        providerId:
          description: 'The provider this report applies to'
          type: string
          nullable: true
        dateFrom:
          type: string
          nullable: true
        dateUntil:
          type: string
          nullable: true
        filename:
          description: 'The filename of the report'
          type: string
          nullable: true
        base64data:
          description: 'A base64 encoded string containing the file''s contents'
          type: string
          nullable: true
    Student:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        registrar:
          type: array
          items:
            type: string
          nullable: true
        civicIntegrationDetails:
          type: array
          items:
            type: string
          nullable: true
        personDetails:
          type: array
          items:
            type: string
          nullable: true
        contactDetails:
          type: array
          items:
            type: string
          nullable: true
        generalDetails:
          type: array
          items:
            type: string
          nullable: true
        referrerDetails:
          type: array
          items:
            type: string
          nullable: true
        backgroundDetails:
          type: array
          items:
            type: string
          nullable: true
        dutchNTDetails:
          type: array
          items:
            type: string
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: array
          items:
            type: string
          nullable: true
        courseDetails:
          type: array
          items:
            type: string
          nullable: true
        jobDetails:
          type: array
          items:
            type: string
          nullable: true
        motivationDetails:
          type: array
          items:
            type: string
          nullable: true
        availabilityDetails:
          type: array
          items:
            type: string
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: array
          items:
            type: string
          nullable: true
        intakeDetail:
          readOnly: true
          type: string
          nullable: true
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse.'
          type: string
          nullable: true
        providerId:
          description: 'The id of the cc/organization of a provider.'
          type: string
          nullable: true
        groupId:
          description: 'The id of the edu/group of a group.'
          type: string
          nullable: true
        aanbiederEmployeeId:
          description: 'The id of the mrc/employee of a mentor.'
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
          nullable: true
        intakeDetails:
          writeOnly: true
          type: string
          nullable: true
    Student.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        registrar:
          type: array
          items:
            type: string
          nullable: true
        civicIntegrationDetails:
          type: array
          items:
            type: string
          nullable: true
        personDetails:
          type: array
          items:
            type: string
          nullable: true
        contactDetails:
          type: array
          items:
            type: string
          nullable: true
        generalDetails:
          type: array
          items:
            type: string
          nullable: true
        referrerDetails:
          type: array
          items:
            type: string
          nullable: true
        backgroundDetails:
          type: array
          items:
            type: string
          nullable: true
        dutchNTDetails:
          type: array
          items:
            type: string
          nullable: true
        speakingLevel:
          type: string
          nullable: true
        educationDetails:
          type: array
          items:
            type: string
          nullable: true
        courseDetails:
          type: array
          items:
            type: string
          nullable: true
        jobDetails:
          type: array
          items:
            type: string
          nullable: true
        motivationDetails:
          type: array
          items:
            type: string
          nullable: true
        availabilityDetails:
          type: array
          items:
            type: string
          nullable: true
        readingTestResult:
          type: string
          nullable: true
        writingTestResult:
          type: string
          nullable: true
        permissionDetails:
          type: array
          items:
            type: string
          nullable: true
        intakeDetail:
          readOnly: true
          type: string
          nullable: true
        languageHouseId:
          description: 'The id of the cc/organization of a languageHouse.'
          type: string
          nullable: true
        providerId:
          description: 'The id of the cc/organization of a provider.'
          type: string
          nullable: true
        groupId:
          description: 'The id of the edu/group of a group.'
          type: string
          nullable: true
        aanbiederEmployeeId:
          description: 'The id of the mrc/employee of a mentor.'
          type: string
          nullable: true
        studentId:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
          nullable: true
        intakeDetails:
          writeOnly: true
          type: string
          nullable: true
    StudentAvailability:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          type: string
          format: iri-reference
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
    StudentAvailability.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        availability:
          type: string
          format: iri-reference
          nullable: true
        availabilityNotes:
          type: string
          nullable: true
    StudentBackground:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          nullable: true
        foundViaOther:
          type: string
          nullable: true
        wentToTaalhuisBefore:
          type: boolean
          nullable: true
        wentToTaalhuisBeforeReason:
          type: string
          nullable: true
        wentToTaalhuisBeforeYear:
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
          nullable: true
        participationLadder:
          type: integer
          nullable: true
    StudentBackground.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        foundVia:
          type: string
          nullable: true
        foundViaOther:
          type: string
          nullable: true
        wentToTaalhuisBefore:
          type: boolean
          nullable: true
        wentToTaalhuisBeforeReason:
          type: string
          nullable: true
        wentToTaalhuisBeforeYear:
          type: number
          nullable: true
        network:
          type: array
          items:
            type: string
          nullable: true
        participationLadder:
          type: integer
          nullable: true
    StudentCivicIntegration:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          nullable: true
        civivIntegrationRequirementFinishDate:
          type: string
          format: date-time
          nullable: true
    StudentCivicIntegration.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirement:
          type: string
          nullable: true
        civicIntegrationRequirementReason:
          type: string
          nullable: true
        civivIntegrationRequirementFinishDate:
          type: string
          format: date-time
          nullable: true
    StudentContact:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        contactPersonTelephone:
          type: string
          nullable: true
        contactPreference:
          type: string
          nullable: true
        contactPreferenceOther:
          type: string
          nullable: true
    StudentContact.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        street:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        contactPersonTelephone:
          type: string
          nullable: true
        contactPreference:
          type: string
          nullable: true
        contactPreferenceOther:
          type: string
          nullable: true
    StudentCourse:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          type: boolean
          nullable: true
        courseName:
          type: string
          nullable: true
        courseTeacher:
          type: string
          nullable: true
        courseGroup:
          type: string
          nullable: true
        amountOfHours:
          type: integer
          nullable: true
        doesCourseProvideCertificate:
          type: boolean
          nullable: true
    StudentCourse.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        isFollowingCourseRightNow:
          type: boolean
          nullable: true
        courseName:
          type: string
          nullable: true
        courseTeacher:
          type: string
          nullable: true
        courseGroup:
          type: string
          nullable: true
        amountOfHours:
          type: integer
          nullable: true
        doesCourseProvideCertificate:
          type: boolean
          nullable: true
    StudentDossierEvent:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          description: 'The Event of this Student.'
          type: string
        eventDate:
          description: 'date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'description of this student Dossier.'
          type: string
        studentId:
          description: 'studentId of this student Dossier.'
          type: string
        studentDossierEventId:
          type: string
          nullable: true
        creatorGivenName:
          description: 'creator of this student Dossier.'
          type: string
          nullable: true
        employeeId:
          description: 'employeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDossierEvent.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        event:
          description: 'The Event of this Student.'
          type: string
        eventDate:
          description: 'date of this student Dossier.'
          type: string
          format: date-time
        eventDescription:
          description: 'description of this student Dossier.'
          type: string
        studentId:
          description: 'studentId of this student Dossier.'
          type: string
        studentDossierEventId:
          type: string
          nullable: true
        creatorGivenName:
          description: 'creator of this student Dossier.'
          type: string
          nullable: true
        employeeId:
          description: 'employeeId of this student Dossier.'
          type: string
          nullable: true
      required:
        - event
        - eventDate
        - eventDescription
        - studentId
    StudentDutchNT:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          nullable: true
        inNetherlandsSinceYear:
          type: number
          nullable: true
        languageInDailyLife:
          type: string
          nullable: true
        knowsLatinAlphabet:
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          nullable: true
    StudentDutchNT.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        dutchNTLevel:
          type: string
          nullable: true
        inNetherlandsSinceYear:
          type: number
          nullable: true
        languageInDailyLife:
          type: string
          nullable: true
        knowsLatinAlphabet:
          type: boolean
          nullable: true
        lastKnownLevel:
          type: string
          nullable: true
    StudentEducation:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        lastFollowedEducation:
          type: string
          nullable: true
        didGraduate:
          type: boolean
          nullable: true
        followingEducationRightNow:
          type: string
          nullable: true
        followingEducationRightNowYesStartDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesLevel:
          type: string
          nullable: true
        followingEducationRightNowYesInstitute:
          type: string
          nullable: true
        followingEducationRightNowYesProvidesCertificate:
          type: boolean
          nullable: true
        followingEducationRightNowNoEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowNoLevel:
          type: string
          nullable: true
        followingEducationRightNowNoGotCertificate:
          type: boolean
          nullable: true
    StudentEducation.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        lastFollowedEducation:
          type: string
          nullable: true
        didGraduate:
          type: boolean
          nullable: true
        followingEducationRightNow:
          type: string
          nullable: true
        followingEducationRightNowYesStartDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowYesLevel:
          type: string
          nullable: true
        followingEducationRightNowYesInstitute:
          type: string
          nullable: true
        followingEducationRightNowYesProvidesCertificate:
          type: boolean
          nullable: true
        followingEducationRightNowNoEndDate:
          type: string
          format: date-time
          nullable: true
        followingEducationRightNowNoLevel:
          type: string
          nullable: true
        followingEducationRightNowNoGotCertificate:
          type: boolean
          nullable: true
    StudentGeneral:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          type: string
          nullable: true
        nativeLanguage:
          type: string
          nullable: true
        otherLanguages:
          type: string
          nullable: true
        familiComposition:
          type: array
          items:
            type: string
          nullable: true
        childrenCount:
          type: integer
          nullable: true
        childrenDatesOfBirth:
          type: string
          nullable: true
    StudentGeneral.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        countryOfOrigin:
          type: string
          nullable: true
        nativeLanguage:
          type: string
          nullable: true
        otherLanguages:
          type: string
          nullable: true
        familiComposition:
          type: array
          items:
            type: string
          nullable: true
        childrenCount:
          type: integer
          nullable: true
        childrenDatesOfBirth:
          type: string
          nullable: true
    StudentIntakeDetail:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        studentId:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        nickname:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        streetAndHouseNumber:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        place:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneNumberContactPerson:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        availability:
          type: array
          items:
            type: string
          nullable: true
    StudentIntakeDetail.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        studentId:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        nickname:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        streetAndHouseNumber:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        place:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneNumberContactPerson:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        availability:
          type: array
          items:
            type: string
          nullable: true
    StudentJob:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          type: string
          nullable: true
        lastJob:
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
          nullable: true
        dayTimeActivitiesOther:
          type: string
          nullable: true
    StudentJob.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        trainedForJob:
          type: string
          nullable: true
        lastJob:
          type: string
          nullable: true
        dayTimeActivities:
          type: array
          items:
            type: string
          nullable: true
        dayTimeActivitiesOther:
          type: string
          nullable: true
    StudentMotivation:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
        desiredSkillsOther:
          type: string
          nullable: true
        hasTriedThisBefore:
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          type: string
          nullable: true
        whyWantTheseSkills:
          type: string
          nullable: true
        whyWantThisNow:
          type: string
          nullable: true
        desiredLearingMethod:
          type: array
          items:
            type: string
        remarks:
          type: string
          nullable: true
    StudentMotivation.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        desiredSkills:
          type: array
          items:
            type: string
        desiredSkillsOther:
          type: string
          nullable: true
        hasTriedThisBefore:
          type: boolean
          nullable: true
        hasTriedThisBeforeExplanation:
          type: string
          nullable: true
        whyWantTheseSkills:
          type: string
          nullable: true
        whyWantThisNow:
          type: string
          nullable: true
        desiredLearingMethod:
          type: array
          items:
            type: string
        remarks:
          type: string
          nullable: true
    StudentPermission:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          type: boolean
        hasPermissionToShareDataWithAanbieders:
          type: boolean
        hasPermissionToShareDataWithLibraries:
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          type: boolean
    StudentPermission.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        didSignPermissionForm:
          type: boolean
        hasPermissionToShareDataWithAanbieders:
          type: boolean
        hasPermissionToShareDataWithLibraries:
          type: boolean
        hasPermissionToSendInformationAboutLibraries:
          type: boolean
    StudentPerson:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          type: string
        additionalName:
          type: string
          nullable: true
        familyName:
          type: string
        gender:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          nullable: true
    StudentPerson.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        givenName:
          type: string
        additionalName:
          type: string
          nullable: true
        familyName:
          type: string
        gender:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          nullable: true
    StudentReferrer:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          nullable: true
        referringOrganizationOther:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    StudentReferrer.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        referringOrganization:
          type: string
          nullable: true
        referringOrganizationOther:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    TestResult:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          type: string
        outComesGoal:
          type: string
        outComesTopic:
          type: string
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
        outComesLevelOther:
          type: string
          nullable: true
        examUsedExam:
          type: string
        examDate:
          type: string
        examMemo:
          type: string
          nullable: true
        testResultId:
          type: string
          nullable: true
    TestResult.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        participationId:
          type: string
        outComesGoal:
          type: string
        outComesTopic:
          type: string
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
        outComesLevelOther:
          type: string
          nullable: true
        examUsedExam:
          type: string
        examDate:
          type: string
        examMemo:
          type: string
          nullable: true
        testResultId:
          type: string
          nullable: true
    User:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        email:
          maxLength: 2550
          description: 'The Email of this User.'
          type: string
          nullable: true
        username:
          maxLength: 2550
          description: 'The Username of this User'
          type: string
          nullable: true
        givenName:
          maxLength: 2550
          description: 'The givenName of this User.'
          type: string
          nullable: true
        additionalName:
          maxLength: 2550
          description: 'The additionalName of this User.'
          type: string
          nullable: true
        familyName:
          maxLength: 2550
          description: 'The familyName of this User.'
          type: string
          nullable: true
        userEnvironment:
          maxLength: 2550
          description: 'The userEnvironment of this User.'
          type: string
          nullable: true
        organizationId:
          maxLength: 2550
          description: 'The organizationId of this User.'
          type: string
          nullable: true
        organizationName:
          maxLength: 2550
          description: 'The organizationName of this User.'
          type: string
          nullable: true
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        password:
          maxLength: 2550
          description: 'The Password of this User.'
          type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
    User.jsonld:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        email:
          maxLength: 2550
          description: 'The Email of this User.'
          type: string
          nullable: true
        username:
          maxLength: 2550
          description: 'The Username of this User'
          type: string
          nullable: true
        givenName:
          maxLength: 2550
          description: 'The givenName of this User.'
          type: string
          nullable: true
        additionalName:
          maxLength: 2550
          description: 'The additionalName of this User.'
          type: string
          nullable: true
        familyName:
          maxLength: 2550
          description: 'The familyName of this User.'
          type: string
          nullable: true
        userEnvironment:
          maxLength: 2550
          description: 'The userEnvironment of this User.'
          type: string
          nullable: true
        organizationId:
          maxLength: 2550
          description: 'The organizationId of this User.'
          type: string
          nullable: true
        organizationName:
          maxLength: 2550
          description: 'The organizationName of this User.'
          type: string
          nullable: true
        userRoles:
          description: 'The userRoles of this User.'
          type: array
          items:
            type: string
          nullable: true
        password:
          maxLength: 2550
          description: 'The Password of this User.'
          type: string
          nullable: true
        token:
          maxLength: 2550
          description: 'The Token for password reset'
          type: string
          nullable: true
<<<<<<< HEAD
        dateCreated:
          description: 'The moment this resource was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this resource last Modified'
          type: string
          format: date-time
          nullable: true
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
=======
definitions:
  Address-read:
    properties:
      street: []
      houseNumber: []
      houseNumberSuffix: []
      postalCode: []
      locality: []
    required: []
  Address-write:
    properties:
      street: []
      houseNumber: []
      houseNumberSuffix: []
      postalCode: []
      locality: []
    required: []
  Employee-read:
    properties:
      givenName:
        description: 'The Name of this Employee.'
        type: string
        maxLength: 255
      additionalName:
        description: 'The PrefixName of this Employee.'
        type: string
        maxLength: 255
      familyName:
        description: 'The LastName of this Employee.'
        type: string
        maxLength: 255
      telephone:
        description: 'The Telephone of this Employee.'
        type: string
        maxLength: 255
      availability:
        description: 'The availability for this employee'
        type: array|null
      availabilityNotes:
        description: 'The Availability Note of this Employee.'
        type: string
        maxLength: 2550
      email:
        description: 'The Email of this Employee.'
        type: string
        maxLength: 2550
      gender:
        description: 'The Gender of this Employee. **Male**, **Female**, **X**'
        type: string
        example: Male
      dateOfBirth:
        description: 'Date of birth of this Employee.'
        type: string
        example: 15-03-2000
      address:
        description: 'The address of this Employee.'
        type: array|null
      contactTelephone:
        description: 'Contact Telephone of this Employee.'
        type: string
        maxLength: 255
      contactPreference:
        description: 'Contact Preference of this Employee.**PHONECALL**, **WHATSAPP**, **EMAIL**, **OTHER**'
        type: string|null
      targetGroupPreferences:
        description: 'Target Preference of this Employee. **NT1**, **NT2**'
        type: array|null
        example: NT1
      volunteeringPreference:
        description: |
          Volunteering Preference of this Employee.
          
           @Assert\Length(
              max = 255
          )
        type: string|null
      currentEducationNoButDidFollow: []
      currentlyFollowingCourseCourseProfessionalism: []
      currentEducationYes: []
    required: []
  Employee-write:
    properties:
      givenName:
        description: 'The Name of this Employee.'
        type: string
        maxLength: 255
      additionalName:
        description: 'The PrefixName of this Employee.'
        type: string
        maxLength: 255
      familyName:
        description: 'The LastName of this Employee.'
        type: string
        maxLength: 255
      telephone:
        description: 'The Telephone of this Employee.'
        type: string
        maxLength: 255
      availability:
        description: 'The availability for this employee'
        type: array|null
      availabilityNotes:
        description: 'The Availability Note of this Employee.'
        type: string
        maxLength: 2550
      email:
        description: 'The Email of this Employee.'
        type: string
        maxLength: 2550
      gender:
        description: 'The Gender of this Employee. **Male**, **Female**, **X**'
        type: string
        example: Male
      dateOfBirth:
        description: 'Date of birth of this Employee.'
        type: string
        example: 15-03-2000
      address:
        description: 'The address of this Employee.'
        type: array|null
      contactTelephone:
        description: 'Contact Telephone of this Employee.'
        type: string
        maxLength: 255
      contactPreference:
        description: 'Contact Preference of this Employee.**PHONECALL**, **WHATSAPP**, **EMAIL**, **OTHER**'
        type: string|null
      targetGroupPreferences:
        description: 'Target Preference of this Employee. **NT1**, **NT2**'
        type: array|null
        example: NT1
      volunteeringPreference:
        description: |
          Volunteering Preference of this Employee.
          
           @Assert\Length(
              max = 255
          )
        type: string|null
      currentEducationNoButDidFollow: []
      currentlyFollowingCourseCourseProfessionalism: []
      currentEducationYes: []
    required: []
  Group-write:
    properties:
      outComesApplication: []
      outComesLevel: []
    required: []
  LanguageHouse-read:
    properties:
      name:
        description: 'The Name of this Taalhuis.'
        type: string
        maxLength: 255
      address:
        description: 'The address of this Taalhuis.'
        type: array|null
      phoneNumber:
        description: 'The Telephone of this Taalhuis.'
        type: string|null
        maxLength: 255
      email:
        description: 'The Email of this Taalhuis.'
        type: string|null
        maxLength: 2550
    required:
      - name
      - email
  LanguageHouse-write:
    properties:
      name:
        description: 'The Name of this Taalhuis.'
        type: string
        maxLength: 255
      address:
        description: 'The address of this Taalhuis.'
        type: array|null
      phoneNumber:
        description: 'The Telephone of this Taalhuis.'
        type: string|null
        maxLength: 255
      email:
        description: 'The Email of this Taalhuis.'
        type: string|null
        maxLength: 2550
    required:
      - name
      - email
  LearningNeed-write:
    properties:
      learningNeedDescription: []
      learningNeedMotivation: []
      desiredOutComesGoal: []
      desiredOutComesTopic: []
      desiredOutComesTopicOther: []
      desiredOutComesApplication: []
      desiredOutComesApplicationOther: []
      desiredOutComesLevel: []
      desiredOutComesLevelOther: []
      offerDesiredOffer: []
      offerAdvisedOffer: []
      offerDifference: []
      offerDifferenceOther: []
      offerEngagements: []
      participations: []
      studentId: []
      learningNeedId:
        description: 'The id of the objectEntity of an eav/learning_need.'
        type: string
      learningNeedUrl:
        description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
        type: string
        format: url
    required: []
  Participation-write:
    properties:
      status: []
      aanbiederId: []
      aanbiederName: []
      aanbiederNote: []
      offerName: []
      offerCourse: []
      outComesGoal: []
      outComesTopic: []
      outComesTopicOther: []
      outComesApplication: []
      outComesApplicationOther: []
      outComesLevel: []
      outComesLevelOther: []
      detailsIsFormal: []
      detailsGroupFormation: []
      detailsTotalClassHours: []
      detailsCertificateWillBeAwarded: []
      detailsStartDate: []
      detailsEndDate: []
      detailsEngagements: []
      learningNeedId:
        description: 'The id of the objectEntity of an eav/learning_need.'
        type: string
      learningNeedUrl:
        description: 'The url of the objectEntity of an eav/learning_need ''@eav''.'
        type: string
        format: url
    required: []
  Provider-read:
    properties:
      name:
        description: 'The Name of this Provider.'
        type: string
        maxLength: 255
      phoneNumber:
        description: 'The Telephone of this Provider.'
        type: string
        maxLength: 255
      email:
        description: 'The Email of this Provider.'
        type: string
        maxLength: 2550
      address:
        description: 'The address of this Aanbieder.'
        type: array|null
    required:
      - name
  Provider-write:
    properties:
      name:
        description: 'The Name of this Provider.'
        type: string
        maxLength: 255
      phoneNumber:
        description: 'The Telephone of this Provider.'
        type: string
        maxLength: 255
      email:
        description: 'The Email of this Provider.'
        type: string
        maxLength: 2550
      address:
        description: 'The address of this Aanbieder.'
        type: array|null
    required:
      - name
  RegisterStudent-read:
    properties:
      address: []
    required:
      - givenName
      - familyName
      - email
      - telephone
  RegisterStudent-write:
    properties:
      address: []
    required:
      - givenName
      - familyName
      - email
      - telephone
  Student-write:
    properties:
      status: []
      memo: []
      registrar: []
      civicIntegrationDetails: []
      personDetails: []
      contactDetails: []
      generalDetails: []
      referrerDetails: []
      backgroundDetails: []
      dutchNTDetails: []
      speakingLevel: []
      educationDetails: []
      courseDetails: []
      jobDetails: []
      motivationDetails: []
      availabilityDetails: []
      readingTestResult: []
      writingTestResult: []
      permissionDetails: []
      intakeDetail: []
      languageHouseId: []
      studentId: []
    required:
      - permissionDetails
      - languageHouseId
  Student-read:
    properties:
      civicIntegrationDetails: []
      personDetails: []
      contactDetails: []
      generalDetails: []
      referrerDetails: []
      backgroundDetails: []
      dutchNTDetails: []
      speakingLevel: []
      educationDetails: []
      courseDetails: []
      jobDetails: []
      motivationDetails: []
      availabilityDetails: []
      readingTestResult: []
      writingTestResult: []
      permissionDetails: []
      intakeDetail: []
      languageHouseId: []
      studentId: []
    required:
      - permissionDetails
      - languageHouseId
  StudentDossierEvent-read:
    properties:
      event:
        description: 'The Event of this Student.'
        type: string
      eventDate:
        description: 'date of this student Dossier.'
        type: \Datetime
      eventDescription:
        description: 'description of this student Dossier.'
        type: string
      studentId:
        description: 'studentId of this student Dossier.'
        type: string|null
    required:
      - event
      - eventDate
      - eventDescription
      - studentId
  StudentDossierEvent-write:
    properties:
      event:
        description: 'The Event of this Student.'
        type: string
      eventDate:
        description: 'date of this student Dossier.'
        type: \Datetime
      eventDescription:
        description: 'description of this student Dossier.'
        type: string
      studentId:
        description: 'studentId of this student Dossier.'
        type: string|null
    required:
      - event
      - eventDate
      - eventDescription
      - studentId
  StudentIntakeDetail-write:
    properties:
      studentId: []
      lastName: []
      middleName: []
      nickname: []
      gender: []
      dateOfBirth: []
      streetAndHouseNumber: []
      postalCode: []
      place: []
      phoneNumber: []
      phoneNumberContactPerson: []
      email: []
      availability: []
    required: []
  User-read:
    properties:
      email:
        description: 'The Email of this User.'
        type: string
        maxLength: 2550
      username:
        description: 'The Username of this User'
        type: string
        maxLength: 2550
      token:
        description: 'The Token for password reset'
        type: string
        maxLength: 2550
    required: []
  User-write:
    properties:
      email:
        description: 'The Email of this User.'
        type: string
        maxLength: 2550
      username:
        description: 'The Username of this User'
        type: string
        maxLength: 2550
      password:
        description: 'The Password of this User.'
        type: string
        maxLength: 2550
      token:
        description: 'The Token for password reset'
        type: string
        maxLength: 2550
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-26 07:42:04'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-26 07:42:04'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-26 07:42:04'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-26 07:42:04'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Address
    description: |
      
      
      
  -
    name: Availability
    description: |
      
      
      
  -
    name: AvailabilityDay
    description: |
      
      
      
  -
    name: CurrentEducationNoButDidFollow
    description: |
      
      
      
  -
    name: EducationRepository
    description: |
      
      
      
  -
    name: Document
    description: |
      
      
      
  -
    name: Employee
    description: |
      
      
      
  -
    name: Group
    description: |
      
      
      
  -
    name: LanguageHouse
    description: |
      
      
      
  -
    name: LearningNeed
    description: |
      
      
      
  -
    name: Participation
    description: |
      
      
      
  -
    name: Provider
    description: |
      
      
      
  -
    name: RegisterStudent
    description: |
      
      
      
  -
    name: RegisterStudentRegistrar
    description: |
      
      
      
  -
    name: Registration
    description: |
      
      
      
  -
    name: Report
    description: |
      
      
      
  -
    name: Student
    description: |
      
      
      
  -
    name: StudentAvailability
    description: |
      
      
      
  -
    name: StudentBackground
    description: |
      
      
      
  -
    name: StudentCivicIntegration
    description: |
      
      
      
  -
    name: StudentContact
    description: |
      
      
      
  -
    name: StudentCourse
    description: |
      
      
      
  -
    name: StudentDossierEvent
    description: |
      
      
      
  -
    name: StudentDutchNT
    description: |
      
      
      
  -
    name: StudentEducation
    description: |
      
      
      
  -
    name: StudentGeneral
    description: |
      
      
      
  -
    name: StudentIntakeDetail
    description: |
      
      
      
  -
    name: StudentJob
    description: |
      
      
      
  -
    name: StudentMotivation
    description: |
      
      
      
  -
    name: StudentPermission
    description: |
      
      
      
  -
    name: StudentPerson
    description: |
      
      
      
  -
    name: StudentReferrer
    description: |
      
      
      
  -
    name: TestResult
    description: |
      
      
      
  -
    name: User
    description: |
      
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: taalhuizen-bisc.commonground.nu
    url: taalhuizen-service.dev.taalhuizen-bisc.commonground.nu
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
>>>>>>> feature-sarai
