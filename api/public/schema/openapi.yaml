openapi: 3.0.2
info:
  title: ''
  version: V1.0
  description: |
    API Details
    - Component: 
    - Reference: taalhuizen-service
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/taalhuizen-service) / [zip](https://github.com/ConductionNL/taalhuizen-service/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/taalhuizen-service.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 
    
    &#039;Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.&#039;         
    
paths:
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /documents:
    get:
      tags:
        - Document
      operationId: getDocumentCollection
      summary: 'Retrieves the collection of Document resources.'
      responses:
        200:
          description: 'Document collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Document:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Document
      operationId: postDocumentCollection
      summary: 'Creates a Document resource.'
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
          links:
            GetDocumentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDocumentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documents/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
        description: 'The new Document resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/documents/{id}':
    get:
      tags:
        - Document
      operationId: getDocumentItem
      summary: 'Retrieves a Document resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Document resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Document
      operationId: deleteDocumentItem
      summary: 'Removes the Document resource.'
      responses:
        204:
          description: 'Document resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Document
      operationId: putDocumentItem
      summary: 'Replaces the Document resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Document:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Document'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Document'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Document'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
        description: 'The updated Document resource'
    patch:
      tags:
        - Document
      operationId: patchDocumentItem
      summary: 'Updates the Document resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Document:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Document'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Document'
            text/csv:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Document'
          text/csv:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
        description: 'The updated Document resource'
  /employees:
    get:
      tags:
        - Employee
      operationId: getEmployeeCollection
      summary: 'Retrieves the collection of Employee resources.'
      responses:
        200:
          description: 'Employee collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Employee:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Employee
      operationId: postEmployeeCollection
      summary: 'Creates a Employee resource.'
      responses:
        201:
          description: 'Employee resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
          links:
            GetEmployeeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEmployeeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /employees/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        description: 'The new Employee resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/employees/{id}':
    get:
      tags:
        - Employee
      operationId: getEmployeeItem
      summary: 'Retrieves a Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Employee resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Employee
      operationId: deleteEmployeeItem
      summary: 'Removes the Employee resource.'
      responses:
        204:
          description: 'Employee resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Employee
      operationId: putEmployeeItem
      summary: 'Replaces the Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Employee:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        description: 'The updated Employee resource'
    patch:
      tags:
        - Employee
      operationId: patchEmployeeItem
      summary: 'Updates the Employee resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Employee resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Employee:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Employee'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Employee'
            text/csv:
              schema:
                $ref: '#/components/schemas/Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Employee'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Employee:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Employee'
          text/csv:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        description: 'The updated Employee resource'
  /examples:
    get:
      tags:
        - Example
      operationId: getExampleCollection
      summary: 'Retrieves the collection of Example resources.'
      responses:
        200:
          description: 'Example collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Example:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Example:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Example
      operationId: postExampleCollection
      summary: 'Creates a Example resource.'
      responses:
        201:
          description: 'Example resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Example'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Example'
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Example'
            application/xml:
              schema:
                $ref: '#/components/schemas/Example'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Example'
            text/csv:
              schema:
                $ref: '#/components/schemas/Example'
            text/html:
              schema:
                $ref: '#/components/schemas/Example'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Example:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Example:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Example'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Example'
          application/json:
            schema:
              $ref: '#/components/schemas/Example'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Example'
          application/xml:
            schema:
              $ref: '#/components/schemas/Example'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Example'
          text/csv:
            schema:
              $ref: '#/components/schemas/Example'
          text/html:
            schema:
              $ref: '#/components/schemas/Example'
        description: 'The new Example resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/examples/{id}':
    get:
      tags:
        - Example
      operationId: getExampleItem
      summary: 'Retrieves a Example resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Example resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Example'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Example'
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Example'
            application/xml:
              schema:
                $ref: '#/components/schemas/Example'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Example'
            text/csv:
              schema:
                $ref: '#/components/schemas/Example'
            text/html:
              schema:
                $ref: '#/components/schemas/Example'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Example
      operationId: deleteExampleItem
      summary: 'Removes the Example resource.'
      responses:
        204:
          description: 'Example resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Example
      operationId: putExampleItem
      summary: 'Replaces the Example resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Example resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Example'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Example'
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Example'
            application/xml:
              schema:
                $ref: '#/components/schemas/Example'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Example'
            text/csv:
              schema:
                $ref: '#/components/schemas/Example'
            text/html:
              schema:
                $ref: '#/components/schemas/Example'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Example:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Example:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Example'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Example'
          application/json:
            schema:
              $ref: '#/components/schemas/Example'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Example'
          application/xml:
            schema:
              $ref: '#/components/schemas/Example'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Example'
          text/csv:
            schema:
              $ref: '#/components/schemas/Example'
          text/html:
            schema:
              $ref: '#/components/schemas/Example'
        description: 'The updated Example resource'
    patch:
      tags:
        - Example
      operationId: patchExampleItem
      summary: 'Updates the Example resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Example resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Example:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Example'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Example'
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Example'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Example'
            application/xml:
              schema:
                $ref: '#/components/schemas/Example'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Example'
            text/csv:
              schema:
                $ref: '#/components/schemas/Example'
            text/html:
              schema:
                $ref: '#/components/schemas/Example'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Example:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Example'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Example'
          application/xml:
            schema:
              $ref: '#/components/schemas/Example'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Example'
          text/csv:
            schema:
              $ref: '#/components/schemas/Example'
          text/html:
            schema:
              $ref: '#/components/schemas/Example'
        description: 'The updated Example resource'
  /learning_needs:
    get:
      tags:
        - LearningNeed
      operationId: getLearningNeedCollection
      summary: 'Retrieves the collection of LearningNeed resources.'
      responses:
        200:
          description: 'LearningNeed collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LearningNeed:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningNeed'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - LearningNeed
      operationId: postLearningNeedCollection
      summary: 'Creates a LearningNeed resource.'
      responses:
        201:
          description: 'LearningNeed resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed'
          links:
            GetLearningNeedItem:
              parameters:
                id: '$response.body#/id'
              operationId: getLearningNeedItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /learning_needs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed'
        description: 'The new LearningNeed resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/learning_needs/{id}':
    get:
      tags:
        - LearningNeed
      operationId: getLearningNeedItem
      summary: 'Retrieves a LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'LearningNeed resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - LearningNeed
      operationId: deleteLearningNeedItem
      summary: 'Removes the LearningNeed resource.'
      responses:
        204:
          description: 'LearningNeed resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - LearningNeed
      operationId: putLearningNeedItem
      summary: 'Replaces the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LearningNeed:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed'
        description: 'The updated LearningNeed resource'
    patch:
      tags:
        - LearningNeed
      operationId: patchLearningNeedItem
      summary: 'Updates the LearningNeed resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'LearningNeed resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LearningNeed:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/xml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/csv:
              schema:
                $ref: '#/components/schemas/LearningNeed'
            text/html:
              schema:
                $ref: '#/components/schemas/LearningNeed'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LearningNeed:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          application/xml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/csv:
            schema:
              $ref: '#/components/schemas/LearningNeed'
          text/html:
            schema:
              $ref: '#/components/schemas/LearningNeed'
        description: 'The updated LearningNeed resource'
  /participations:
    get:
      tags:
        - Participation
      operationId: getParticipationCollection
      summary: 'Retrieves the collection of Participation resources.'
      responses:
        200:
          description: 'Participation collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participation:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Participation
      operationId: postParticipationCollection
      summary: 'Creates a Participation resource.'
      responses:
        201:
          description: 'Participation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
          links:
            GetParticipationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getParticipationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation'
        description: 'The new Participation resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/participations/{id}':
    get:
      tags:
        - Participation
      operationId: getParticipationItem
      summary: 'Retrieves a Participation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Participation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Participation
      operationId: deleteParticipationItem
      summary: 'Removes the Participation resource.'
      responses:
        204:
          description: 'Participation resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Participation
      operationId: putParticipationItem
      summary: 'Replaces the Participation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participation:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participation'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation'
        description: 'The updated Participation resource'
    patch:
      tags:
        - Participation
      operationId: patchParticipationItem
      summary: 'Updates the Participation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Participation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participation:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participation'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participation'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participation'
            text/html:
              schema:
                $ref: '#/components/schemas/Participation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participation:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Participation'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participation'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Participation'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participation'
          text/html:
            schema:
              $ref: '#/components/schemas/Participation'
        description: 'The updated Participation resource'
  /providers:
    get:
      tags:
        - Provider
      operationId: getProviderCollection
      summary: 'Retrieves the collection of Provider resources.'
      responses:
        200:
          description: 'Provider collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Provider
      operationId: postProviderCollection
      summary: 'Creates a Provider resource.'
      responses:
        201:
          description: 'Provider resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
          links:
            GetProviderItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProviderItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /providers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Provider:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Provider'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Provider'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider'
        description: 'The new Provider resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/providers/{id}':
    get:
      tags:
        - Provider
      operationId: getProviderItem
      summary: 'Retrieves a Provider resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Provider resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Provider
      operationId: deleteProviderItem
      summary: 'Removes the Provider resource.'
      responses:
        204:
          description: 'Provider resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Provider
      operationId: putProviderItem
      summary: 'Replaces the Provider resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Provider resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Provider:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Provider'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Provider'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider'
        description: 'The updated Provider resource'
    patch:
      tags:
        - Provider
      operationId: patchProviderItem
      summary: 'Updates the Provider resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Provider resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Provider'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider'
        description: 'The updated Provider resource'
  /registrations:
    get:
      tags:
        - Registration
      operationId: getRegistrationCollection
      summary: 'Retrieves the collection of Registration resources.'
      responses:
        200:
          description: 'Registration collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Registration:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Registration
      operationId: postRegistrationCollection
      summary: 'Creates a Registration resource.'
      responses:
        201:
          description: 'Registration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
          links:
            GetRegistrationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getRegistrationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /registrations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration'
        description: 'The new Registration resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/registrations/{id}':
    get:
      tags:
        - Registration
      operationId: getRegistrationItem
      summary: 'Retrieves a Registration resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Registration resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Registration
      operationId: deleteRegistrationItem
      summary: 'Removes the Registration resource.'
      responses:
        204:
          description: 'Registration resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Registration
      operationId: putRegistrationItem
      summary: 'Replaces the Registration resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Registration:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Registration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Registration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration'
        description: 'The updated Registration resource'
    patch:
      tags:
        - Registration
      operationId: patchRegistrationItem
      summary: 'Updates the Registration resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Registration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Registration:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Registration'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Registration'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Registration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Registration'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Registration'
            text/csv:
              schema:
                $ref: '#/components/schemas/Registration'
            text/html:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Registration:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Registration'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Registration'
          text/csv:
            schema:
              $ref: '#/components/schemas/Registration'
          text/html:
            schema:
              $ref: '#/components/schemas/Registration'
        description: 'The updated Registration resource'
  /students:
    get:
      tags:
        - Student
      operationId: getStudentCollection
      summary: 'Retrieves the collection of Student resources.'
      responses:
        200:
          description: 'Student collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Student:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Student
      operationId: postStudentCollection
      summary: 'Creates a Student resource.'
      responses:
        201:
          description: 'Student resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
          links:
            GetStudentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getStudentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /students/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student'
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student'
          text/html:
            schema:
              $ref: '#/components/schemas/Student'
        description: 'The new Student resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/students/{id}':
    get:
      tags:
        - Student
      operationId: getStudentItem
      summary: 'Retrieves a Student resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Student resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Student
      operationId: deleteStudentItem
      summary: 'Removes the Student resource.'
      responses:
        204:
          description: 'Student resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Student
      operationId: putStudentItem
      summary: 'Replaces the Student resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Student:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Student'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Student'
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Student'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student'
          text/html:
            schema:
              $ref: '#/components/schemas/Student'
        description: 'The updated Student resource'
    patch:
      tags:
        - Student
      operationId: patchStudentItem
      summary: 'Updates the Student resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Student resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Student:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Student'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Student'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Student'
            text/csv:
              schema:
                $ref: '#/components/schemas/Student'
            text/html:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Student:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Student'
          text/csv:
            schema:
              $ref: '#/components/schemas/Student'
          text/html:
            schema:
              $ref: '#/components/schemas/Student'
        description: 'The updated Student resource'
  /taalhuis:
    get:
      tags:
        - Taalhuis
      operationId: getTaalhuisCollection
      summary: 'Retrieves the collection of Taalhuis resources.'
      responses:
        200:
          description: 'Taalhuis collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Taalhuis:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Taalhuis:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taalhuis'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Taalhuis
      operationId: postTaalhuisCollection
      summary: 'Creates a Taalhuis resource.'
      responses:
        201:
          description: 'Taalhuis resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/xml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/csv:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/html:
              schema:
                $ref: '#/components/schemas/Taalhuis'
          links:
            GetTaalhuisItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTaalhuisItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /taalhuis/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Taalhuis:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Taalhuis:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/xml:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          text/csv:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          text/html:
            schema:
              $ref: '#/components/schemas/Taalhuis'
        description: 'The new Taalhuis resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/taalhuis/{id}':
    get:
      tags:
        - Taalhuis
      operationId: getTaalhuisItem
      summary: 'Retrieves a Taalhuis resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Taalhuis resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/xml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/csv:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/html:
              schema:
                $ref: '#/components/schemas/Taalhuis'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Taalhuis
      operationId: deleteTaalhuisItem
      summary: 'Removes the Taalhuis resource.'
      responses:
        204:
          description: 'Taalhuis resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Taalhuis
      operationId: putTaalhuisItem
      summary: 'Replaces the Taalhuis resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Taalhuis resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/xml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/csv:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/html:
              schema:
                $ref: '#/components/schemas/Taalhuis'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Taalhuis:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Taalhuis:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/xml:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          text/csv:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          text/html:
            schema:
              $ref: '#/components/schemas/Taalhuis'
        description: 'The updated Taalhuis resource'
    patch:
      tags:
        - Taalhuis
      operationId: patchTaalhuisItem
      summary: 'Updates the Taalhuis resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Taalhuis resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Taalhuis:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/xml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/csv:
              schema:
                $ref: '#/components/schemas/Taalhuis'
            text/html:
              schema:
                $ref: '#/components/schemas/Taalhuis'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Taalhuis:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          application/xml:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          text/csv:
            schema:
              $ref: '#/components/schemas/Taalhuis'
          text/html:
            schema:
              $ref: '#/components/schemas/Taalhuis'
        description: 'The updated Taalhuis resource'
  /users:
    get:
      tags:
        - User
      operationId: getUserCollection
      summary: 'Retrieves the collection of User resources.'
      responses:
        200:
          description: 'User collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - User
      operationId: postUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
          links:
            GetUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User'
          text/csv:
            schema:
              $ref: '#/components/schemas/User'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        description: 'The new User resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/users/{id}':
    get:
      tags:
        - User
      operationId: getUserItem
      summary: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'User resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - User
      operationId: deleteUserItem
      summary: 'Removes the User resource.'
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - User
      operationId: putUserItem
      summary: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User'
          text/csv:
            schema:
              $ref: '#/components/schemas/User'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        description: 'The updated User resource'
    patch:
      tags:
        - User
      operationId: patchUserItem
      summary: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/User'
          text/csv:
            schema:
              $ref: '#/components/schemas/User'
          text/html:
            schema:
              $ref: '#/components/schemas/User'
        description: 'The updated User resource'
components:
  schemas:
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Document:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        base64:
          description: 'the base64 of the document'
          type: string
        resource:
          description: 'the resource this document is connected to (organization/contact)'
          type: string
    'Document:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        base64:
          description: 'the base64 of the document'
          type: string
        resource:
          description: 'the resource this document is connected to (organization/contact)'
          type: string
    Employee:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          description: 'The Name of this Employee.'
          type: string
        prefixName:
          description: 'The PrefixName of this Employee.'
          type: string
          nullable: true
        lastName:
          description: 'The LastName of this Employee.'
          type: string
        telephone:
          description: 'The Telephone of this Employee.'
          type: string
          nullable: true
        availabilityNote:
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        email:
          description: 'The Email of this Employee.'
          type: string
        role:
          description: 'The Role of this Employee.'
          type: array
          items:
            type: string
        availability:
          description: 'The Availability of this Employee.'
          type: array
          items:
            type: string
          nullable: true
        gender:
          description: 'The Gender of this Employee. **Male**, **Female**'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this Employee.'
          type: string
          format: date-time
          nullable: true
        street:
          description: 'The Street of this Employee.'
          type: string
          nullable: true
        houseNumber:
          description: 'House number of this Employee.'
          type: string
          nullable: true
        houseNumberSuffix:
          description: 'House number suffix of this Employee.'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of this Employee.'
          type: string
          nullable: true
        locality:
          description: 'Locality of this Employee.'
          type: string
          nullable: true
        contactTelephone:
          description: 'Contact Telephone of this Employee.'
          type: string
          nullable: true
        contactPreference:
          description: 'Contact Preference of this Employee.'
          type: string
          nullable: true
        targetAudience:
          description: 'Target Audience of this Employee. **NT1**, **NT2**'
          type: string
          nullable: true
        volunteerPreference:
          description: |
            Volunteer Preference of this Employee.
            
             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        volunteerNote:
          description: 'Volunteer Note of this Employee.'
          type: string
          nullable: true
        experience:
          description: 'Experience of this Employee.'
          type: string
          nullable: true
        startEducation:
          description: 'StartDate Education of this Employee.'
          type: string
          format: date-time
          nullable: true
        educationInstitutionName:
          description: 'Education Institution Name of this Employee.'
          type: string
          nullable: true
        certificateEducation:
          description: 'Certificate Education of this Employee.'
          type: boolean
          nullable: true
        endEducation:
          description: 'EndDate Education of this Employee.'
          type: string
          nullable: true
        iscedEducationLevelCode:
          description: 'The Isced Education Level Code of this Employee.'
          type: string
          nullable: true
        degreeGrantedStatus:
          description: 'Certificate Course of this Employee.'
          type: boolean
          nullable: true
        courseName:
          description: 'Course Name of this Employee.'
          type: string
          nullable: true
        courseInstitutionName:
          description: 'Course Institution Name of this Employee.'
          type: string
          nullable: true
        typeOfTeacher:
          description: 'The Type of Teacher of this employee. **Professional**, **Volunteer**, **Both**'
          type: string
          nullable: true
        typeOfCourse:
          description: 'The Type of Course of this employee. **Professional**, **Volunteer**, **Both**'
          type: string
          nullable: true
        certificateCourse:
          description: 'Certificate Course of this Employee.'
          type: boolean
          nullable: true
        relevantAdditions:
          description: 'Relevant Additions of this Employee.'
          type: string
          nullable: true
        employeeType:
          description: 'The Employee Type of this employee. **Taalhuis**, **Aanbieder**'
          type: string
      required:
        - name
        - lastName
        - email
        - employeeType
    'Employee:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          description: 'The Name of this Employee.'
          type: string
        prefixName:
          description: 'The PrefixName of this Employee.'
          type: string
          nullable: true
        lastName:
          description: 'The LastName of this Employee.'
          type: string
        telephone:
          description: 'The Telephone of this Employee.'
          type: string
          nullable: true
        availabilityNote:
          description: 'The Availability Note of this Employee.'
          type: string
          nullable: true
        email:
          description: 'The Email of this Employee.'
          type: string
        role:
          description: 'The Role of this Employee.'
          type: array
          items:
            type: string
        availability:
          description: 'The Availability of this Employee.'
          type: array
          items:
            type: string
          nullable: true
        gender:
          description: 'The Gender of this Employee. **Male**, **Female**'
          type: string
          nullable: true
        birthday:
          description: 'Date of birth of this Employee.'
          type: string
          format: date-time
          nullable: true
        street:
          description: 'The Street of this Employee.'
          type: string
          nullable: true
        houseNumber:
          description: 'House number of this Employee.'
          type: string
          nullable: true
        houseNumberSuffix:
          description: 'House number suffix of this Employee.'
          type: string
          nullable: true
        postalCode:
          description: 'Postalcode of this Employee.'
          type: string
          nullable: true
        locality:
          description: 'Locality of this Employee.'
          type: string
          nullable: true
        contactTelephone:
          description: 'Contact Telephone of this Employee.'
          type: string
          nullable: true
        contactPreference:
          description: 'Contact Preference of this Employee.'
          type: string
          nullable: true
        targetAudience:
          description: 'Target Audience of this Employee. **NT1**, **NT2**'
          type: string
          nullable: true
        volunteerPreference:
          description: |
            Volunteer Preference of this Employee.
            
             @Assert\Length(
                max = 255
            )
          type: string
          nullable: true
        volunteerNote:
          description: 'Volunteer Note of this Employee.'
          type: string
          nullable: true
        experience:
          description: 'Experience of this Employee.'
          type: string
          nullable: true
        startEducation:
          description: 'StartDate Education of this Employee.'
          type: string
          format: date-time
          nullable: true
        educationInstitutionName:
          description: 'Education Institution Name of this Employee.'
          type: string
          nullable: true
        certificateEducation:
          description: 'Certificate Education of this Employee.'
          type: boolean
          nullable: true
        endEducation:
          description: 'EndDate Education of this Employee.'
          type: string
          nullable: true
        iscedEducationLevelCode:
          description: 'The Isced Education Level Code of this Employee.'
          type: string
          nullable: true
        degreeGrantedStatus:
          description: 'Certificate Course of this Employee.'
          type: boolean
          nullable: true
        courseName:
          description: 'Course Name of this Employee.'
          type: string
          nullable: true
        courseInstitutionName:
          description: 'Course Institution Name of this Employee.'
          type: string
          nullable: true
        typeOfTeacher:
          description: 'The Type of Teacher of this employee. **Professional**, **Volunteer**, **Both**'
          type: string
          nullable: true
        typeOfCourse:
          description: 'The Type of Course of this employee. **Professional**, **Volunteer**, **Both**'
          type: string
          nullable: true
        certificateCourse:
          description: 'Certificate Course of this Employee.'
          type: boolean
          nullable: true
        relevantAdditions:
          description: 'Relevant Additions of this Employee.'
          type: string
          nullable: true
        employeeType:
          description: 'The Employee Type of this employee. **Taalhuis**, **Aanbieder**'
          type: string
      required:
        - name
        - lastName
        - email
        - employeeType
    Example:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        data:
          type: array
          items:
            type: string
          nullable: true
    'Example:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        data:
          type: array
          items:
            type: string
          nullable: true
    LearningNeed:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        learningNeedDescription:
          type: string
        learningNeedMotivation:
          type: string
        desiredOutComesGoal:
          type: string
        desiredOutComesTopic:
          type: string
        desiredOutComesTopicOther:
          type: string
        desiredOutComesApplication:
          type: string
        desiredOutComesApplicationOther:
          type: string
        desiredOutComesLevel:
          type: string
        desiredOutComesLevelOther:
          type: string
        offerDesiredOffer:
          type: string
        offerAdvisedOffer:
          type: string
        offerDifference:
          type: string
        offerDifferenceOther:
          type: string
        offerEngagements:
          type: string
          nullable: true
        participations:
          type: array
          items:
            type: string
          nullable: true
    'LearningNeed:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        learningNeedDescription:
          type: string
        learningNeedMotivation:
          type: string
        desiredOutComesGoal:
          type: string
        desiredOutComesTopic:
          type: string
        desiredOutComesTopicOther:
          type: string
        desiredOutComesApplication:
          type: string
        desiredOutComesApplicationOther:
          type: string
        desiredOutComesLevel:
          type: string
        desiredOutComesLevelOther:
          type: string
        offerDesiredOffer:
          type: string
        offerAdvisedOffer:
          type: string
        offerDifference:
          type: string
        offerDifferenceOther:
          type: string
        offerEngagements:
          type: string
          nullable: true
        participations:
          type: array
          items:
            type: string
          nullable: true
    Participation:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        aanbiederId:
          type: string
          nullable: true
        aanbiederName:
          type: string
          nullable: true
        aanbiederNote:
          type: string
          nullable: true
        offerName:
          type: string
          nullable: true
        offerCourse:
          type: string
          nullable: true
        outComesGoal:
          type: string
          nullable: true
        outComesTopic:
          type: string
          nullable: true
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
          nullable: true
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
          nullable: true
        outComesLevelOther:
          type: string
          nullable: true
        detailsIsFormal:
          type: boolean
          nullable: true
        detailsGroupFormation:
          type: string
          nullable: true
        detailsTotalClassHours:
          type: number
          nullable: true
        detailsCertificateWillBeAwarded:
          type: boolean
          nullable: true
        detailsStartDate:
          type: string
          format: date-time
          nullable: true
        detailsEndDate:
          type: string
          format: date-time
          nullable: true
        detailsEngagements:
          type: string
          nullable: true
    'Participation:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        status:
          type: string
          nullable: true
        aanbiederId:
          type: string
          nullable: true
        aanbiederName:
          type: string
          nullable: true
        aanbiederNote:
          type: string
          nullable: true
        offerName:
          type: string
          nullable: true
        offerCourse:
          type: string
          nullable: true
        outComesGoal:
          type: string
          nullable: true
        outComesTopic:
          type: string
          nullable: true
        outComesTopicOther:
          type: string
          nullable: true
        outComesApplication:
          type: string
          nullable: true
        outComesApplicationOther:
          type: string
          nullable: true
        outComesLevel:
          type: string
          nullable: true
        outComesLevelOther:
          type: string
          nullable: true
        detailsIsFormal:
          type: boolean
          nullable: true
        detailsGroupFormation:
          type: string
          nullable: true
        detailsTotalClassHours:
          type: number
          nullable: true
        detailsCertificateWillBeAwarded:
          type: boolean
          nullable: true
        detailsStartDate:
          type: string
          format: date-time
          nullable: true
        detailsEndDate:
          type: string
          format: date-time
          nullable: true
        detailsEngagements:
          type: string
          nullable: true
    Provider:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    'Provider:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    Registration:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        applicantOrganization:
          type: string
        applicantName:
          type: string
        applicantEmail:
          type: string
        applicantTelephone:
          type: string
        taalhuis:
          type: string
        lastName:
          type: string
        prefixName:
          type: string
          nullable: true
        firstName:
          type: string
        telephone:
          type: string
        email:
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
    'Registration:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        applicantOrganization:
          type: string
        applicantName:
          type: string
        applicantEmail:
          type: string
        applicantTelephone:
          type: string
        taalhuis:
          type: string
        lastName:
          type: string
        prefixName:
          type: string
          nullable: true
        firstName:
          type: string
        telephone:
          type: string
        email:
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
    Student:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirementNo:
          type: string
          nullable: true
        civicIntegrationRequirementCompletionDate:
          type: string
          format: date-time
          nullable: true
        civicIntegrationRequirement:
          description: '(CIR) "Nee, omdat", "Ja" or "Volgt momenteel inburgering"'
          type: string
          nullable: true
        familyName:
          type: string
        additionalName:
          type: string
          nullable: true
        givenName:
          type: string
        gender:
          type: string
          nullable: true
        birthday:
          type: string
          format: date-time
          nullable: true
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        contactTelephone:
          type: string
          nullable: true
        contactPreference:
          type: string
          nullable: true
        countryOfOrigin:
          type: string
          nullable: true
        nativeLanguage:
          type: string
          nullable: true
        otherLanguages:
          type: string
          nullable: true
        familyComposition:
          type: string
          nullable: true
        numberOfChildren:
          type: string
          nullable: true
        dateOfBirthChildren:
          type: string
          nullable: true
        referredBy:
          type: string
          nullable: true
        referredByEmail:
          type: string
          nullable: true
    'Student:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        civicIntegrationRequirementNo:
          type: string
          nullable: true
        civicIntegrationRequirementCompletionDate:
          type: string
          format: date-time
          nullable: true
        civicIntegrationRequirement:
          description: '(CIR) "Nee, omdat", "Ja" or "Volgt momenteel inburgering"'
          type: string
          nullable: true
        familyName:
          type: string
        additionalName:
          type: string
          nullable: true
        givenName:
          type: string
        gender:
          type: string
          nullable: true
        birthday:
          type: string
          format: date-time
          nullable: true
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        contactTelephone:
          type: string
          nullable: true
        contactPreference:
          type: string
          nullable: true
        countryOfOrigin:
          type: string
          nullable: true
        nativeLanguage:
          type: string
          nullable: true
        otherLanguages:
          type: string
          nullable: true
        familyComposition:
          type: string
          nullable: true
        numberOfChildren:
          type: string
          nullable: true
        dateOfBirthChildren:
          type: string
          nullable: true
        referredBy:
          type: string
          nullable: true
        referredByEmail:
          type: string
          nullable: true
    Taalhuis:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    'Taalhuis:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        name:
          type: string
        street:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberSuffix:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        telephone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    User:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        email:
          description: 'The Email of this User.'
          type: string
        password:
          description: 'The Password of this User.'
          type: string
      required:
        - email
        - password
    'User:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        email:
          description: 'The Email of this User.'
          type: string
        password:
          description: 'The Password of this User.'
          type: string
      required:
        - email
        - password
definitions:
  Employee-read:
    properties:
      name:
        description: 'The Name of this Employee.'
        type: string
        maxLength: 255
      prefixName:
        description: 'The PrefixName of this Employee.'
        type: string
        maxLength: 255
      lastName:
        description: 'The LastName of this Employee.'
        type: string
        maxLength: 255
      telephone:
        description: 'The Telephone of this Employee.'
        type: string
        maxLength: 255
      availabilityNote:
        description: 'The Availability Note of this Employee.'
        type: string
        maxLength: 2550
      email:
        description: 'The Email of this Employee.'
        type: string
        maxLength: 2550
      role:
        description: 'The Role of this Employee.'
        type: array
      availability:
        description: 'The Availability of this Employee.'
        type: array
        example: 'An array of strings with the abbreviation of the day and a time slot, for example; mon morning, mon afternoon, mon evening'
      gender:
        description: 'The Gender of this Employee. **Male**, **Female**'
        type: string
        example: Male
      birthday:
        description: 'Date of birth of this Employee.'
        type: string
        example: 15-03-2000
      street:
        description: 'The Street of this Employee.'
        type: string
        example: |
          appelstreet
          
           @Assert\Length(
              max = 255
          )
      houseNumber:
        description: 'House number of this Employee.'
        type: string
        example: '8'
        maxLength: 255
      houseNumberSuffix:
        description: 'House number suffix of this Employee.'
        type: string
        example: b
        maxLength: 255
      postalCode:
        description: 'Postalcode of this Employee.'
        type: string
        example: 1234AB
      locality:
        description: 'Locality of this Employee.'
        type: string
        example: Oud-Zuid
        maxLength: 255
      contactTelephone:
        description: 'Contact Telephone of this Employee.'
        type: string
        maxLength: 255
      contactPreference:
        description: 'Contact Preference of this Employee.'
        type: string
        maxLength: 255
      targetAudience:
        description: 'Target Audience of this Employee. **NT1**, **NT2**'
        type: string
        example: NT1
      volunteerPreference:
        description: |
          Volunteer Preference of this Employee.
          
           @Assert\Length(
              max = 255
          )
        type: string
      volunteerNote:
        description: 'Volunteer Note of this Employee.'
        type: string
        maxLength: 2550
      experience:
        description: 'Experience of this Employee.'
        type: string
        maxLength: 255
      startEducation:
        description: 'StartDate Education of this Employee.'
        type: \Datetime
      educationInstitutionName:
        description: 'Education Institution Name of this Employee.'
        type: string
        maxLength: 255
      certificateEducation:
        description: 'Certificate Education of this Employee.'
        type: bool
      endEducation:
        description: 'EndDate Education of this Employee.'
        type: \Datetime
      iscedEducationLevelCode:
        description: 'The Isced Education Level Code of this Employee.'
        type: string
        example: HBO
      degreeGrantedStatus:
        description: 'Certificate Course of this Employee.'
        type: bool
      courseName:
        description: 'Course Name of this Employee.'
        type: string
        maxLength: 255
      courseInstitutionName:
        description: 'Course Institution Name of this Employee.'
        type: string
        maxLength: 255
      typeOfTeacher:
        description: 'The Type of Teacher of this employee. **Professional**, **Volunteer**, **Both**'
        type: string
        example: Professional
      typeOfCourse:
        description: 'The Type of Course of this employee. **Professional**, **Volunteer**, **Both**'
        type: string
        example: Professional
      certificateCourse:
        description: 'Certificate Course of this Employee.'
        type: bool
      relevantAdditions:
        description: 'Relevant Additions of this Employee.'
        type: string
        maxLength: 255
      employeeType:
        description: 'The Employee Type of this employee. **Taalhuis**, **Aanbieder**'
        type: string
        example: Taalhuis
    required:
      - name
      - lastName
      - email
      - employeeType
  Employee-write:
    properties:
      name:
        description: 'The Name of this Employee.'
        type: string
        maxLength: 255
      prefixName:
        description: 'The PrefixName of this Employee.'
        type: string
        maxLength: 255
      lastName:
        description: 'The LastName of this Employee.'
        type: string
        maxLength: 255
      telephone:
        description: 'The Telephone of this Employee.'
        type: string
        maxLength: 255
      availabilityNote:
        description: 'The Availability Note of this Employee.'
        type: string
        maxLength: 2550
      email:
        description: 'The Email of this Employee.'
        type: string
        maxLength: 2550
      role:
        description: 'The Role of this Employee.'
        type: array
      availability:
        description: 'The Availability of this Employee.'
        type: array
        example: 'An array of strings with the abbreviation of the day and a time slot, for example; mon morning, mon afternoon, mon evening'
      gender:
        description: 'The Gender of this Employee. **Male**, **Female**'
        type: string
        example: Male
      birthday:
        description: 'Date of birth of this Employee.'
        type: string
        example: 15-03-2000
      street:
        description: 'The Street of this Employee.'
        type: string
        example: |
          appelstreet
          
           @Assert\Length(
              max = 255
          )
      houseNumber:
        description: 'House number of this Employee.'
        type: string
        example: '8'
        maxLength: 255
      houseNumberSuffix:
        description: 'House number suffix of this Employee.'
        type: string
        example: b
        maxLength: 255
      postalCode:
        description: 'Postalcode of this Employee.'
        type: string
        example: 1234AB
      locality:
        description: 'Locality of this Employee.'
        type: string
        example: Oud-Zuid
        maxLength: 255
      contactTelephone:
        description: 'Contact Telephone of this Employee.'
        type: string
        maxLength: 255
      contactPreference:
        description: 'Contact Preference of this Employee.'
        type: string
        maxLength: 255
      targetAudience:
        description: 'Target Audience of this Employee. **NT1**, **NT2**'
        type: string
        example: NT1
      volunteerPreference:
        description: |
          Volunteer Preference of this Employee.
          
           @Assert\Length(
              max = 255
          )
        type: string
      volunteerNote:
        description: 'Volunteer Note of this Employee.'
        type: string
        maxLength: 2550
      experience:
        description: 'Experience of this Employee.'
        type: string
        maxLength: 255
      startEducation:
        description: 'StartDate Education of this Employee.'
        type: \Datetime
      educationInstitutionName:
        description: 'Education Institution Name of this Employee.'
        type: string
        maxLength: 255
      certificateEducation:
        description: 'Certificate Education of this Employee.'
        type: bool
      endEducation:
        description: 'EndDate Education of this Employee.'
        type: \Datetime
      iscedEducationLevelCode:
        description: 'The Isced Education Level Code of this Employee.'
        type: string
        example: HBO
      degreeGrantedStatus:
        description: 'Certificate Course of this Employee.'
        type: bool
      courseName:
        description: 'Course Name of this Employee.'
        type: string
        maxLength: 255
      courseInstitutionName:
        description: 'Course Institution Name of this Employee.'
        type: string
        maxLength: 255
      typeOfTeacher:
        description: 'The Type of Teacher of this employee. **Professional**, **Volunteer**, **Both**'
        type: string
        example: Professional
      typeOfCourse:
        description: 'The Type of Course of this employee. **Professional**, **Volunteer**, **Both**'
        type: string
        example: Professional
      certificateCourse:
        description: 'Certificate Course of this Employee.'
        type: bool
      relevantAdditions:
        description: 'Relevant Additions of this Employee.'
        type: string
        maxLength: 255
      employeeType:
        description: 'The Employee Type of this employee. **Taalhuis**, **Aanbieder**'
        type: string
        example: Taalhuis
    required:
      - name
      - lastName
      - email
      - employeeType
  User-read:
    properties:
      email:
        description: 'The Email of this User.'
        type: string
        maxLength: 2550
      password:
        description: 'The Password of this User.'
        type: string
        maxLength: 2550
    required:
      - email
      - password
  User-write:
    properties:
      email:
        description: 'The Email of this User.'
        type: string
        maxLength: 2550
      password:
        description: 'The Password of this User.'
        type: string
        maxLength: 2550
    required:
      - email
      - password
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-09 07:42:11'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-09 07:42:11'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-09 07:42:11'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-09 07:42:11'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Document
    description: |
      
      
      
  -
    name: Employee
    description: |
      
      
      
  -
    name: LearningNeed
    description: |
      
      
      
  -
    name: Participation
    description: |
      
      
      
  -
    name: Provider
    description: |
      
      
      
  -
    name: Registration
    description: |
      
      
      
  -
    name: Student
    description: |
      
      
      
  -
    name: Taalhuis
    description: |
      
      
      
  -
    name: User
    description: |
      
      
      
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the AuditTrail resource'
      write: 'write right to the AuditTrail resource'
host: irc.zaakonline.nl
servers:
  -
    name: taalhuizen-bisc.commonground.nu
    url: taalhuizen-service.dev.taalhuizen-bisc.commonground.nu
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
