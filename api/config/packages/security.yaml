security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [CommongroundApplicationProvider, CommongroundUserProvider]
        commongroundApplicationProvider:
            id: Conduction\CommonGroundBundle\Security\User\CommongroundApplicationProvider
        commongroundUserProvider:
            id: Conduction\CommonGroundBundle\Security\User\CommongroundUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js|docs)/
            security: false
        # In order to read the docs we must allow anonymous GET reqoust on root    
        docs:
            anonymous: true
            pattern:  (^/$|^/docs|^/docs/$|^/graphql/graphiql|^/graphql/graphiql/$|^/graphql/graphql_playground|^/graphql/graphql_playground/$)
            methods: [GET]
        # The mollie webhook does not have our API key
        webhook:
            anonymous: true
            pattern: ^/payments/mollie_webhook
            methods: [POST]
        main:
            provider: chain_provider
            # comment this function out on crud enviroments
            #logout:
            #    path:   app_user_login            
            #form_login:
            #    login_path: app_user_login
            #    check_path: app_user_login   
            guard:
                authenticators:
                    - Conduction\CommonGroundBundle\Security\CommongroundApplicationAuthenticator
                    - Conduction\CommonGroundBundle\Security\CommongroundUserAuthenticator
                entry_point: Conduction\CommonGroundBundle\Security\CommongroundApplicationAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
