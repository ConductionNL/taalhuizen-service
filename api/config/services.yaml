# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    'Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter': ~

    # We use a custom swagger decorator to add the commonground specific docs 
    'Conduction\CommonGroundBundle\Swagger\SwaggerDecorator':
        decorates: 'api_platform.swagger.normalizer.api_gateway'
        arguments: [ '@Conduction\CommonGroundBundle\Swagger\SwaggerDecorator.inner' ]
        autoconfigure: false

    Redis:
        class: Redis
        calls:
            -   method: connect
                arguments:
                    - '%env(REDIS_HOST)%'
                    - '%env(int:REDIS_PORT)%'
            # If you need key prefix, uncomment line belows
            # - method: setOption
            #   arguments:
            #       - !php/const Redis::OPT_PREFIX
            #       - 'my_prefix'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'

    App\Resolver\UserMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\UserQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\UserQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\LearningNeedMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\LearningNeedQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\LearningNeedQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\ParticipationMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\ParticipationQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\ParticipationQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\EmployeeMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\EmployeeQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\EmployeeQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\StudentDossierEventMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\StudentDossierEventQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\StudentDossierEventQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }    
    App\Resolver\StudentMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\StudentQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\StudentQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\ProviderMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\ProviderQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\ProviderQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\LanguageHouseMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\LanguageHouseQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\LanguageHouseQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\ReportMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\GroupMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\GroupQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\GroupQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\RegistrationMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\RegistrationQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\RegistrationQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\TestResultMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\TestResultQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\TestResultQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\DocumentMutationResolver:
        tags:
            - { name: api_platform.graphql.mutation_resolver }
    App\Resolver\DocumentQueryCollectionResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
    App\Resolver\DocumentQueryItemResolver:
        tags:
            - { name: api_platform.graphql.query_resolver }
